{"dependencies":[{"name":"buffer","data":{"isAsync":false}},{"name":"./sha","data":{"isAsync":false}},{"name":"./sha256","data":{"isAsync":false}},{"name":"./rng","data":{"isAsync":false}},{"name":"./md5","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var Buffer = _$$_REQUIRE(_dependencyMap[0], \"buffer\").Buffer;\n\n  var sha = _$$_REQUIRE(_dependencyMap[1], \"./sha\");\n\n  var sha256 = _$$_REQUIRE(_dependencyMap[2], \"./sha256\");\n\n  var rng = _$$_REQUIRE(_dependencyMap[3], \"./rng\");\n\n  var md5 = _$$_REQUIRE(_dependencyMap[4], \"./md5\");\n\n  var algorithms = {\n    sha1: sha,\n    sha256: sha256,\n    md5: md5\n  };\n  var blocksize = 64;\n  var zeroBuffer = new Buffer(blocksize);\n  zeroBuffer.fill(0);\n\n  function hmac(fn, key, data) {\n    if (!Buffer.isBuffer(key)) key = new Buffer(key);\n    if (!Buffer.isBuffer(data)) data = new Buffer(data);\n\n    if (key.length > blocksize) {\n      key = fn(key);\n    } else if (key.length < blocksize) {\n      key = Buffer.concat([key, zeroBuffer], blocksize);\n    }\n\n    var ipad = new Buffer(blocksize),\n        opad = new Buffer(blocksize);\n\n    for (var i = 0; i < blocksize; i++) {\n      ipad[i] = key[i] ^ 0x36;\n      opad[i] = key[i] ^ 0x5C;\n    }\n\n    var hash = fn(Buffer.concat([ipad, data]));\n    return fn(Buffer.concat([opad, hash]));\n  }\n\n  function hash(alg, key) {\n    alg = alg || 'sha1';\n    var fn = algorithms[alg];\n    var bufs = [];\n    var length = 0;\n    if (!fn) error('algorithm:', alg, 'is not yet supported');\n    return {\n      update: function update(data) {\n        if (!Buffer.isBuffer(data)) data = new Buffer(data);\n        bufs.push(data);\n        length += data.length;\n        return this;\n      },\n      digest: function digest(enc) {\n        var buf = Buffer.concat(bufs);\n        var r = key ? hmac(fn, key, buf) : fn(buf);\n        bufs = null;\n        return enc ? r.toString(enc) : r;\n      }\n    };\n  }\n\n  function error() {\n    var m = [].slice.call(arguments).join(' ');\n    throw new Error([m, 'we accept pull requests', 'http://github.com/dominictarr/crypto-browserify'].join('\\n'));\n  }\n\n  exports.createHash = function (alg) {\n    return hash(alg);\n  };\n\n  exports.createHmac = function (alg, key) {\n    return hash(alg, key);\n  };\n\n  exports.randomBytes = function (size, callback) {\n    if (callback && callback.call) {\n      try {\n        callback.call(this, undefined, new Buffer(rng(size)));\n      } catch (err) {\n        callback(err);\n      }\n    } else {\n      return new Buffer(rng(size));\n    }\n  };\n\n  function each(a, f) {\n    for (var i in a) {\n      f(a[i], i);\n    }\n  }\n\n  each(['createCredentials', 'createCipher', 'createCipheriv', 'createDecipher', 'createDecipheriv', 'createSign', 'createVerify', 'createDiffieHellman', 'pbkdf2'], function (name) {\n    exports[name] = function () {\n      error('sorry,', name, 'is not implemented yet');\n    };\n  });\n});","map":[[2,0,1,0],[2,6,1,4,"Buffer"],[2,12,1,10],[2,15,1,13,"require"],[2,26,1,20],[2,55,1,13],[2,56,1,31,"Buffer"],[2,62,1,0],[4,0,2,0],[4,6,2,4,"sha"],[4,9,2,7],[4,12,2,10,"require"],[4,23,2,17],[4,51,2,0],[6,0,3,0],[6,6,3,4,"sha256"],[6,12,3,10],[6,15,3,13,"require"],[6,26,3,20],[6,57,3,0],[8,0,4,0],[8,6,4,4,"rng"],[8,9,4,7],[8,12,4,10,"require"],[8,23,4,17],[8,51,4,0],[10,0,5,0],[10,6,5,4,"md5"],[10,9,5,7],[10,12,5,10,"require"],[10,23,5,17],[10,51,5,0],[12,0,7,0],[12,6,7,4,"algorithms"],[12,16,7,14],[12,19,7,17],[13,0,8,2,"sha1"],[13,4,8,2,"sha1"],[13,8,8,6],[13,10,8,8,"sha"],[13,13,7,17],[14,0,9,2,"sha256"],[14,4,9,2,"sha256"],[14,10,9,8],[14,12,9,10,"sha256"],[14,18,7,17],[15,0,10,2,"md5"],[15,4,10,2,"md5"],[15,7,10,5],[15,9,10,7,"md5"],[16,0,7,17],[16,3,7,0],[17,0,13,0],[17,6,13,4,"blocksize"],[17,15,13,13],[17,18,13,16],[17,20,13,0],[18,0,14,0],[18,6,14,4,"zeroBuffer"],[18,16,14,14],[18,19,14,17],[18,23,14,21,"Buffer"],[18,29,14,17],[18,30,14,28,"blocksize"],[18,39,14,17],[18,40,14,0],[19,0,14,40,"zeroBuffer"],[19,2,14,40,"zeroBuffer"],[19,12,14,50],[19,13,14,51,"fill"],[19,17,14,40],[19,18,14,56],[19,19,14,40],[21,0,15,0],[21,11,15,9,"hmac"],[21,15,15,0],[21,16,15,14,"fn"],[21,18,15,0],[21,20,15,18,"key"],[21,23,15,0],[21,25,15,23,"data"],[21,29,15,0],[21,31,15,29],[22,0,16,2],[22,8,16,5],[22,9,16,6,"Buffer"],[22,15,16,12],[22,16,16,13,"isBuffer"],[22,24,16,6],[22,25,16,22,"key"],[22,28,16,6],[22,29,16,2],[22,31,16,28,"key"],[22,34,16,31],[22,37,16,34],[22,41,16,38,"Buffer"],[22,47,16,34],[22,48,16,45,"key"],[22,51,16,34],[22,52,16,28],[23,0,17,2],[23,8,17,5],[23,9,17,6,"Buffer"],[23,15,17,12],[23,16,17,13,"isBuffer"],[23,24,17,6],[23,25,17,22,"data"],[23,29,17,6],[23,30,17,2],[23,32,17,29,"data"],[23,36,17,33],[23,39,17,36],[23,43,17,40,"Buffer"],[23,49,17,36],[23,50,17,47,"data"],[23,54,17,36],[23,55,17,29],[25,0,19,2],[25,8,19,5,"key"],[25,11,19,8],[25,12,19,9,"length"],[25,18,19,5],[25,21,19,18,"blocksize"],[25,30,19,2],[25,32,19,29],[26,0,20,4,"key"],[26,6,20,4,"key"],[26,9,20,7],[26,12,20,10,"fn"],[26,14,20,12],[26,15,20,13,"key"],[26,18,20,12],[26,19,20,4],[27,0,21,3],[27,5,19,2],[27,11,21,9],[27,15,21,12,"key"],[27,18,21,15],[27,19,21,16,"length"],[27,25,21,12],[27,28,21,25,"blocksize"],[27,37,21,9],[27,39,21,36],[28,0,22,4,"key"],[28,6,22,4,"key"],[28,9,22,7],[28,12,22,10,"Buffer"],[28,18,22,16],[28,19,22,17,"concat"],[28,25,22,10],[28,26,22,24],[28,27,22,25,"key"],[28,30,22,24],[28,32,22,30,"zeroBuffer"],[28,42,22,24],[28,43,22,10],[28,45,22,43,"blocksize"],[28,54,22,10],[28,55,22,4],[29,0,23,3],[31,0,25,2],[31,8,25,6,"ipad"],[31,12,25,10],[31,15,25,13],[31,19,25,17,"Buffer"],[31,25,25,13],[31,26,25,24,"blocksize"],[31,35,25,13],[31,36,25,2],[32,0,25,2],[32,8,25,36,"opad"],[32,12,25,40],[32,15,25,43],[32,19,25,47,"Buffer"],[32,25,25,43],[32,26,25,54,"blocksize"],[32,35,25,43],[32,36,25,2],[34,0,26,2],[34,9,26,6],[34,13,26,10,"i"],[34,14,26,11],[34,17,26,14],[34,18,26,2],[34,20,26,17,"i"],[34,21,26,18],[34,24,26,21,"blocksize"],[34,33,26,2],[34,35,26,32,"i"],[34,36,26,33],[34,38,26,2],[34,40,26,37],[35,0,27,4,"ipad"],[35,6,27,4,"ipad"],[35,10,27,8],[35,11,27,9,"i"],[35,12,27,8],[35,13,27,4],[35,16,27,14,"key"],[35,19,27,17],[35,20,27,18,"i"],[35,21,27,17],[35,22,27,14],[35,25,27,23],[35,29,27,4],[36,0,28,4,"opad"],[36,6,28,4,"opad"],[36,10,28,8],[36,11,28,9,"i"],[36,12,28,8],[36,13,28,4],[36,16,28,14,"key"],[36,19,28,17],[36,20,28,18,"i"],[36,21,28,17],[36,22,28,14],[36,25,28,23],[36,29,28,4],[37,0,29,3],[39,0,31,2],[39,8,31,6,"hash"],[39,12,31,10],[39,15,31,13,"fn"],[39,17,31,15],[39,18,31,16,"Buffer"],[39,24,31,22],[39,25,31,23,"concat"],[39,31,31,16],[39,32,31,30],[39,33,31,31,"ipad"],[39,37,31,30],[39,39,31,37,"data"],[39,43,31,30],[39,44,31,16],[39,45,31,15],[39,46,31,2],[40,0,32,2],[40,11,32,9,"fn"],[40,13,32,11],[40,14,32,12,"Buffer"],[40,20,32,18],[40,21,32,19,"concat"],[40,27,32,12],[40,28,32,26],[40,29,32,27,"opad"],[40,33,32,26],[40,35,32,33,"hash"],[40,39,32,26],[40,40,32,12],[40,41,32,11],[40,42,32,2],[41,0,33,1],[43,0,35,0],[43,11,35,9,"hash"],[43,15,35,0],[43,16,35,14,"alg"],[43,19,35,0],[43,21,35,19,"key"],[43,24,35,0],[43,26,35,24],[44,0,36,2,"alg"],[44,4,36,2,"alg"],[44,7,36,5],[44,10,36,8,"alg"],[44,13,36,11],[44,17,36,15],[44,23,36,2],[45,0,37,2],[45,8,37,6,"fn"],[45,10,37,8],[45,13,37,11,"algorithms"],[45,23,37,21],[45,24,37,22,"alg"],[45,27,37,21],[45,28,37,2],[46,0,38,2],[46,8,38,6,"bufs"],[46,12,38,10],[46,15,38,13],[46,17,38,2],[47,0,39,2],[47,8,39,6,"length"],[47,14,39,12],[47,17,39,15],[47,18,39,2],[48,0,40,2],[48,8,40,5],[48,9,40,6,"fn"],[48,11,40,2],[48,13,40,10,"error"],[48,18,40,15],[48,19,40,16],[48,31,40,15],[48,33,40,30,"alg"],[48,36,40,15],[48,38,40,35],[48,60,40,15],[48,61,40,10],[49,0,41,2],[49,11,41,9],[50,0,42,4,"update"],[50,6,42,4,"update"],[50,12,42,10],[50,14,42,12],[50,30,42,22,"data"],[50,34,42,12],[50,36,42,28],[51,0,43,6],[51,12,43,9],[51,13,43,10,"Buffer"],[51,19,43,16],[51,20,43,17,"isBuffer"],[51,28,43,10],[51,29,43,26,"data"],[51,33,43,10],[51,34,43,6],[51,36,43,33,"data"],[51,40,43,37],[51,43,43,40],[51,47,43,44,"Buffer"],[51,53,43,40],[51,54,43,51,"data"],[51,58,43,40],[51,59,43,33],[52,0,45,6,"bufs"],[52,8,45,6,"bufs"],[52,12,45,10],[52,13,45,11,"push"],[52,17,45,6],[52,18,45,16,"data"],[52,22,45,6],[53,0,46,6,"length"],[53,8,46,6,"length"],[53,14,46,12],[53,18,46,16,"data"],[53,22,46,20],[53,23,46,21,"length"],[53,29,46,6],[54,0,47,6],[54,15,47,13],[54,19,47,6],[55,0,48,5],[55,7,41,9],[56,0,49,4,"digest"],[56,6,49,4,"digest"],[56,12,49,10],[56,14,49,12],[56,30,49,22,"enc"],[56,33,49,12],[56,35,49,27],[57,0,50,6],[57,12,50,10,"buf"],[57,15,50,13],[57,18,50,16,"Buffer"],[57,24,50,22],[57,25,50,23,"concat"],[57,31,50,16],[57,32,50,30,"bufs"],[57,36,50,16],[57,37,50,6],[58,0,51,6],[58,12,51,10,"r"],[58,13,51,11],[58,16,51,14,"key"],[58,19,51,17],[58,22,51,20,"hmac"],[58,26,51,24],[58,27,51,25,"fn"],[58,29,51,24],[58,31,51,29,"key"],[58,34,51,24],[58,36,51,34,"buf"],[58,39,51,24],[58,40,51,17],[58,43,51,41,"fn"],[58,45,51,43],[58,46,51,44,"buf"],[58,49,51,43],[58,50,51,6],[59,0,52,6,"bufs"],[59,8,52,6,"bufs"],[59,12,52,10],[59,15,52,13],[59,19,52,6],[60,0,53,6],[60,15,53,13,"enc"],[60,18,53,16],[60,21,53,19,"r"],[60,22,53,20],[60,23,53,21,"toString"],[60,31,53,19],[60,32,53,30,"enc"],[60,35,53,19],[60,36,53,16],[60,39,53,37,"r"],[60,40,53,6],[61,0,54,5],[62,0,41,9],[62,5,41,2],[63,0,56,1],[65,0,58,0],[65,11,58,9,"error"],[65,16,58,0],[65,19,58,18],[66,0,59,2],[66,8,59,6,"m"],[66,9,59,7],[66,12,59,10],[66,15,59,13,"slice"],[66,20,59,10],[66,21,59,19,"call"],[66,25,59,10],[66,26,59,24,"arguments"],[66,35,59,10],[66,37,59,35,"join"],[66,41,59,10],[66,42,59,40],[66,45,59,10],[66,46,59,2],[67,0,60,2],[67,10,60,8],[67,14,60,12,"Error"],[67,19,60,8],[67,20,60,18],[67,21,61,4,"m"],[67,22,60,18],[67,24,62,4],[67,49,60,18],[67,51,63,4],[67,100,60,18],[67,102,64,6,"join"],[67,106,60,18],[67,107,64,11],[67,111,60,18],[67,112,60,8],[67,113,60,2],[68,0,65,1],[70,0,67,0,"exports"],[70,2,67,0,"exports"],[70,9,67,7],[70,10,67,8,"createHash"],[70,20,67,0],[70,23,67,21],[70,33,67,31,"alg"],[70,36,67,21],[70,38,67,36],[71,0,67,38],[71,11,67,45,"hash"],[71,15,67,49],[71,16,67,50,"alg"],[71,19,67,49],[71,20,67,38],[72,0,67,56],[72,3,67,0],[74,0,68,0,"exports"],[74,2,68,0,"exports"],[74,9,68,7],[74,10,68,8,"createHmac"],[74,20,68,0],[74,23,68,21],[74,33,68,31,"alg"],[74,36,68,21],[74,38,68,36,"key"],[74,41,68,21],[74,43,68,41],[75,0,68,43],[75,11,68,50,"hash"],[75,15,68,54],[75,16,68,55,"alg"],[75,19,68,54],[75,21,68,60,"key"],[75,24,68,54],[75,25,68,43],[76,0,68,66],[76,3,68,0],[78,0,69,0,"exports"],[78,2,69,0,"exports"],[78,9,69,7],[78,10,69,8,"randomBytes"],[78,21,69,0],[78,24,69,22],[78,34,69,31,"size"],[78,38,69,22],[78,40,69,37,"callback"],[78,48,69,22],[78,50,69,47],[79,0,70,2],[79,8,70,6,"callback"],[79,16,70,14],[79,20,70,18,"callback"],[79,28,70,26],[79,29,70,27,"call"],[79,33,70,2],[79,35,70,33],[80,0,71,4],[80,10,71,8],[81,0,72,6,"callback"],[81,8,72,6,"callback"],[81,16,72,14],[81,17,72,15,"call"],[81,21,72,6],[81,22,72,20],[81,26,72,6],[81,28,72,26,"undefined"],[81,37,72,6],[81,39,72,37],[81,43,72,41,"Buffer"],[81,49,72,37],[81,50,72,48,"rng"],[81,53,72,51],[81,54,72,52,"size"],[81,58,72,51],[81,59,72,37],[81,60,72,6],[82,0,73,5],[82,7,71,4],[82,8,73,6],[82,15,73,13,"err"],[82,18,73,6],[82,20,73,18],[83,0,73,20,"callback"],[83,8,73,20,"callback"],[83,16,73,28],[83,17,73,29,"err"],[83,20,73,28],[83,21,73,20],[84,0,73,35],[85,0,74,3],[85,5,70,2],[85,11,74,9],[86,0,75,4],[86,13,75,11],[86,17,75,15,"Buffer"],[86,23,75,11],[86,24,75,22,"rng"],[86,27,75,25],[86,28,75,26,"size"],[86,32,75,25],[86,33,75,11],[86,34,75,4],[87,0,76,3],[88,0,77,1],[88,3,69,0],[90,0,79,0],[90,11,79,9,"each"],[90,15,79,0],[90,16,79,14,"a"],[90,17,79,0],[90,19,79,17,"f"],[90,20,79,0],[90,22,79,20],[91,0,80,2],[91,9,80,6],[91,13,80,10,"i"],[91,14,80,2],[91,18,80,15,"a"],[91,19,80,2],[92,0,81,4,"f"],[92,6,81,4,"f"],[92,7,81,5],[92,8,81,6,"a"],[92,9,81,7],[92,10,81,8,"i"],[92,11,81,7],[92,12,81,5],[92,14,81,12,"i"],[92,15,81,5],[92,16,81,4],[93,0,80,2],[94,0,82,1],[96,0,85,0,"each"],[96,2,85,0,"each"],[96,6,85,4],[96,7,85,5],[96,8,85,6],[96,27,85,5],[96,29,86,2],[96,43,85,5],[96,45,87,2],[96,61,85,5],[96,63,88,2],[96,79,85,5],[96,81,89,2],[96,99,85,5],[96,101,90,2],[96,113,85,5],[96,115,91,2],[96,129,85,5],[96,131,92,2],[96,152,85,5],[96,154,93,2],[96,162,85,5],[96,163,85,4],[96,165,93,13],[96,175,93,23,"name"],[96,179,93,13],[96,181,93,29],[97,0,94,2,"exports"],[97,4,94,2,"exports"],[97,11,94,9],[97,12,94,10,"name"],[97,16,94,9],[97,17,94,2],[97,20,94,18],[97,32,94,30],[98,0,95,4,"error"],[98,6,95,4,"error"],[98,11,95,9],[98,12,95,10],[98,20,95,9],[98,22,95,20,"name"],[98,26,95,9],[98,28,95,26],[98,52,95,9],[98,53,95,4],[99,0,96,3],[99,5,94,2],[100,0,97,1],[100,3,85,4],[100,4,85,0]]},"type":"js/module"}]}