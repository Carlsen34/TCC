{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/regenerator","data":{"isAsync":false}},{"name":"aws-amplify","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.newFriend = exports.deleteUser = exports.gettUser = void 0;\n\n  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/regenerator\"));\n\n  var _awsAmplify = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"aws-amplify\"));\n\n  var _this = this;\n\n  var cognitoIdentityServiceProvider = new AWS.CognitoIdentityServiceProvider();\n  var params = {\n    UserPoolId: AWSConfig.aws_user_pools_id,\n    AttributesToGet: []\n  };\n\n  var gettUser = function gettUser(name) {\n    var path, apiResponse;\n    return _regenerator.default.async(function gettUser$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            path = \"/friendship/object/\" + name;\n            _context.prev = 1;\n            _context.next = 4;\n            return _regenerator.default.awrap(_awsAmplify.default.get(\"Friendship\", path));\n\n          case 4:\n            apiResponse = _context.sent;\n            console.log(\"response from getting note: \" + apiResponse.Friends);\n\n            _this.setState({\n              apiResponse: apiResponse\n            });\n\n            if (apiResponse.Friends != undefined) {\n              _this.setState({\n                Friends: apiResponse.Friends\n              });\n\n              _this.setState({\n                hasFriend: true\n              });\n\n              console.log(\"List Friends: \" + _this.state.Friends);\n            } else {\n              _this.setState({\n                hasFriend: false\n              });\n            }\n\n            return _context.abrupt(\"return\", apiResponse);\n\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](1);\n            console.log(_context.t0);\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 11]]);\n  };\n\n  exports.gettUser = gettUser;\n\n  var deleteUser = function deleteUser(user, newFriends) {\n    var friends, hasFriend;\n    return _regenerator.default.async(function deleteUser$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regenerator.default.awrap(_this.getUser(user));\n\n          case 2:\n            _context2.next = 4;\n            return _regenerator.default.awrap(_this.state.Friends);\n\n          case 4:\n            friends = _context2.sent;\n            _context2.next = 7;\n            return _regenerator.default.awrap(_this.state.hasFriend);\n\n          case 7:\n            hasFriend = _context2.sent;\n            _context2.next = 10;\n            return _regenerator.default.awrap(cognitoIdentityServiceProvider.listUsers(params, function (err, data) {\n              if (err) console.log(\"ERROR \" + err, err.stack);else {\n                  for (var resp in data.Users) {\n                    var objUsername = data.Users[resp].Username;\n                    var objUserStatus = data.Users[resp].UserStatus;\n\n                    if (newFriends == objUsername && objUserStatus == \"CONFIRMED\") {\n                      var objNewFriend = {\n                        body: {\n                          \"Users\": user,\n                          \"Friends\": friends\n                        }\n                      };\n                      var indice = objNewFriend.body.Friends.indexOf(newFriends);\n\n                      if (indice == -1) {\n                        console.log(\"Cant unfriend\");\n                      } else {\n                        objNewFriend.body.Friends.splice(indice, 1);\n                        var path = \"/friendship\";\n\n                        try {\n                          var apiResponse = _awsAmplify.default.put(\"Friendship\", path, objNewFriend);\n\n                          console.log(\"response from saving note: \" + apiResponse);\n                          this.setState({\n                            apiResponse: apiResponse\n                          });\n                          return apiResponse;\n                        } catch (e) {\n                          console.log(e);\n                        }\n                      }\n                    }\n                  }\n                }\n              ;\n            }));\n\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    });\n  };\n\n  exports.deleteUser = deleteUser;\n\n  var newFriend = function newFriend(user, newFriends) {\n    var friends, hasFriend;\n    return _regenerator.default.async(function newFriend$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regenerator.default.awrap(_this.getUser(user));\n\n          case 2:\n            _context3.next = 4;\n            return _regenerator.default.awrap(_this.state.Friends);\n\n          case 4:\n            friends = _context3.sent;\n            _context3.next = 7;\n            return _regenerator.default.awrap(_this.state.hasFriend);\n\n          case 7:\n            hasFriend = _context3.sent;\n            _context3.next = 10;\n            return _regenerator.default.awrap(cognitoIdentityServiceProvider.listUsers(params, function (err, data) {\n              if (err) console.log(\"ERROR \" + err, err.stack);else {\n                  for (var resp in data.Users) {\n                    var objUsername = data.Users[resp].Username;\n                    var objUserStatus = data.Users[resp].UserStatus;\n\n                    if (objUsername != user && newFriends == objUsername && objUserStatus == \"CONFIRMED\") {\n                      var objNewFriend = {\n                        body: {\n                          \"Users\": user,\n                          \"Friends\": friends\n                        }\n                      };\n\n                      if (hasFriend == true) {\n                        objNewFriend.body.Friends.push(newFriends);\n                      } else {\n                        objNewFriend.body.Friends = [newFriends];\n                      }\n\n                      var path = \"/friendship\";\n\n                      try {\n                        var apiResponse = _awsAmplify.default.put(\"Friendship\", path, objNewFriend);\n\n                        console.log(\"response from saving note: \" + apiResponse);\n                        this.setState({\n                          apiResponse: apiResponse\n                        });\n                        return apiResponse;\n                      } catch (e) {\n                        console.log(e);\n                      }\n                    } else {\n                      console.log(\"Impossivel adicionar amigo\");\n                    }\n                  }\n                }\n              ;\n            }));\n\n          case 10:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    });\n  };\n\n  exports.newFriend = newFriend;\n});","map":[[11,0,1,0],[15,0,4,0],[15,6,4,6,"cognitoIdentityServiceProvider"],[15,36,4,36],[15,39,4,39],[15,43,4,43,"AWS"],[15,46,4,46],[15,47,4,47,"CognitoIdentityServiceProvider"],[15,77,4,39],[15,79,4,0],[16,0,6,1],[16,6,6,5,"params"],[16,12,6,11],[16,15,6,14],[17,0,7,2,"UserPoolId"],[17,4,7,2,"UserPoolId"],[17,14,7,12],[17,16,7,14,"AWSConfig"],[17,25,7,23],[17,26,7,24,"aws_user_pools_id"],[17,43,6,14],[18,0,8,2,"AttributesToGet"],[18,4,8,2,"AttributesToGet"],[18,19,8,17],[18,21,8,18],[19,0,6,14],[19,3,6,1],[21,0,12,7],[21,6,12,14,"gettUser"],[21,14,12,22],[21,17,12,25],[21,26,12,14,"gettUser"],[21,34,12,25],[21,35,12,32,"name"],[21,39,12,25],[22,0,12,25],[23,0,12,25],[24,0,12,25],[25,0,12,25],[26,0,12,25],[27,0,13,10,"path"],[27,12,13,10,"path"],[27,16,12,25],[27,19,13,17],[27,43,13,41,"name"],[27,47,12,25],[28,0,12,25],[29,0,12,25],[30,0,12,25],[30,46,15,32,"API"],[30,66,15,36,"get"],[30,69,15,32],[30,70,15,40],[30,82,15,32],[30,84,15,54,"path"],[30,88,15,32],[30,89,12,25],[32,0,12,25],[33,0,15,12,"apiResponse"],[33,12,15,12,"apiResponse"],[33,23,12,25],[34,0,16,6,"console"],[34,12,16,6,"console"],[34,19,16,13],[34,20,16,14,"log"],[34,23,16,6],[34,24,16,18],[34,57,16,51,"apiResponse"],[34,68,16,62],[34,69,16,63,"Friends"],[34,76,16,6],[36,0,17,6],[36,12,17,6],[36,17,17,10],[36,18,17,11,"setState"],[36,26,17,6],[36,27,17,20],[37,0,17,21,"apiResponse"],[37,14,17,21,"apiResponse"],[37,25,17,32],[37,27,17,21,"apiResponse"],[38,0,17,20],[38,13,17,6],[40,0,18,6],[40,16,18,9,"apiResponse"],[40,27,18,20],[40,28,18,21,"Friends"],[40,35,18,9],[40,39,18,32,"undefined"],[40,48,18,6],[40,50,18,43],[41,0,19,8],[41,14,19,8],[41,19,19,12],[41,20,19,13,"setState"],[41,28,19,8],[41,29,19,22],[42,0,19,23,"Friends"],[42,16,19,23,"Friends"],[42,23,19,30],[42,25,19,31,"apiResponse"],[42,36,19,42],[42,37,19,43,"Friends"],[43,0,19,22],[43,15,19,8],[45,0,20,8],[45,14,20,8],[45,19,20,12],[45,20,20,13,"setState"],[45,28,20,8],[45,29,20,22],[46,0,20,23,"hasFriend"],[46,16,20,23,"hasFriend"],[46,25,20,32],[46,27,20,33],[47,0,20,22],[47,15,20,8],[49,0,21,8,"console"],[49,14,21,8,"console"],[49,21,21,15],[49,22,21,16,"log"],[49,25,21,8],[49,26,21,20],[49,45,21,39],[49,50,21,43],[49,51,21,44,"state"],[49,56,21,39],[49,57,21,50,"Friends"],[49,64,21,8],[50,0,22,7],[50,13,18,6],[50,19,22,11],[51,0,23,8],[51,14,23,8],[51,19,23,12],[51,20,23,13,"setState"],[51,28,23,8],[51,29,23,22],[52,0,23,23,"hasFriend"],[52,16,23,23,"hasFriend"],[52,25,23,32],[52,27,23,33],[53,0,23,22],[53,15,23,8],[54,0,25,7],[56,0,12,25],[56,45,27,13,"apiResponse"],[56,56,12,25],[58,0,12,25],[59,0,12,25],[60,0,12,25],[61,0,29,6,"console"],[61,12,29,6,"console"],[61,19,29,13],[61,20,29,14,"log"],[61,23,29,6],[63,0,12,25],[64,0,12,25],[65,0,12,25],[66,0,12,25],[67,0,12,25],[68,0,12,25],[69,0,12,25],[69,3,12,7],[73,0,34,9],[73,6,34,16,"deleteUser"],[73,16,34,26],[73,19,34,29],[73,28,34,16,"deleteUser"],[73,38,34,29],[73,39,34,36,"user"],[73,43,34,29],[73,45,34,41,"newFriends"],[73,55,34,29],[74,0,34,29],[75,0,34,29],[76,0,34,29],[77,0,34,29],[78,0,34,29],[79,0,34,29],[80,0,34,29],[80,46,35,11],[80,51,35,15],[80,52,35,16,"getUser"],[80,59,35,11],[80,60,35,24,"user"],[80,64,35,11],[80,65,34,29],[82,0,34,29],[83,0,34,29],[84,0,34,29],[84,46,36,24],[84,51,36,28],[84,52,36,29,"state"],[84,57,36,24],[84,58,36,35,"Friends"],[84,65,34,29],[86,0,34,29],[87,0,36,8,"friends"],[87,12,36,8,"friends"],[87,19,34,29],[88,0,34,29],[89,0,34,29],[89,46,37,26],[89,51,37,30],[89,52,37,31,"state"],[89,57,37,26],[89,58,37,37,"hasFriend"],[89,67,34,29],[91,0,34,29],[92,0,37,8,"hasFriend"],[92,12,37,8,"hasFriend"],[92,21,34,29],[93,0,34,29],[94,0,34,29],[94,46,39,10,"cognitoIdentityServiceProvider"],[94,76,39,40],[94,77,39,41,"listUsers"],[94,86,39,10],[94,87,39,51,"params"],[94,93,39,10],[94,95,39,59],[94,105,39,68,"err"],[94,108,39,59],[94,110,39,73,"data"],[94,114,39,59],[94,116,39,79],[95,0,40,4],[95,18,40,8,"err"],[95,21,40,4],[95,23,40,13,"console"],[95,30,40,20],[95,31,40,21,"log"],[95,34,40,13],[95,35,40,25],[95,46,40,34,"err"],[95,49,40,13],[95,51,40,39,"err"],[95,54,40,42],[95,55,40,43,"stack"],[95,60,40,13],[95,62,40,4],[95,67,41,8],[96,0,42,6],[96,23,42,10],[96,27,42,14,"resp"],[96,31,42,6],[96,35,42,22,"data"],[96,39,42,26],[96,40,42,27,"Users"],[96,45,42,6],[96,47,42,33],[97,0,43,8],[97,24,43,12,"objUsername"],[97,35,43,23],[97,38,43,26,"data"],[97,42,43,30],[97,43,43,31,"Users"],[97,48,43,26],[97,49,43,37,"resp"],[97,53,43,26],[97,55,43,43,"Username"],[97,63,43,8],[98,0,44,8],[98,24,44,12,"objUserStatus"],[98,37,44,25],[98,40,44,28,"data"],[98,44,44,32],[98,45,44,33,"Users"],[98,50,44,28],[98,51,44,39,"resp"],[98,55,44,28],[98,57,44,45,"UserStatus"],[98,67,44,8],[100,0,46,8],[100,24,46,11,"newFriends"],[100,34,46,21],[100,38,46,25,"objUsername"],[100,49,46,11],[100,53,46,40,"objUserStatus"],[100,66,46,53],[100,70,46,57],[100,81,46,8],[100,83,46,70],[101,0,47,10],[101,26,47,14,"objNewFriend"],[101,38,47,26],[101,41,47,29],[102,0,48,12,"body"],[102,24,48,12,"body"],[102,28,48,16],[102,30,48,18],[103,0,49,14],[103,35,49,23,"user"],[103,39,48,18],[104,0,50,14],[104,37,50,24,"friends"],[105,0,48,18],[106,0,47,29],[106,23,47,10],[107,0,54,10],[107,26,54,14,"indice"],[107,32,54,20],[107,35,54,23,"objNewFriend"],[107,47,54,35],[107,48,54,36,"body"],[107,52,54,23],[107,53,54,41,"Friends"],[107,60,54,23],[107,61,54,49,"indexOf"],[107,68,54,23],[107,69,54,57,"newFriends"],[107,79,54,23],[107,80,54,10],[109,0,55,10],[109,26,55,13,"indice"],[109,32,55,19],[109,36,55,23],[109,37,55,24],[109,38,55,10],[109,40,55,26],[110,0,56,12,"console"],[110,24,56,12,"console"],[110,31,56,19],[110,32,56,20,"log"],[110,35,56,12],[110,36,56,24],[110,51,56,12],[111,0,57,11],[111,23,55,10],[111,29,57,16],[112,0,58,12,"objNewFriend"],[112,24,58,12,"objNewFriend"],[112,36,58,24],[112,37,58,25,"body"],[112,41,58,12],[112,42,58,30,"Friends"],[112,49,58,12],[112,50,58,38,"splice"],[112,56,58,12],[112,57,58,45,"indice"],[112,63,58,12],[112,65,58,52],[112,66,58,12],[113,0,59,12],[113,28,59,18,"path"],[113,32,59,22],[113,35,59,25],[113,48,59,12],[115,0,62,12],[115,28,62,16],[116,0,63,14],[116,30,63,20,"apiResponse"],[116,41,63,31],[116,44,63,35,"API"],[116,64,63,39,"put"],[116,67,63,35],[116,68,63,43],[116,80,63,35],[116,82,63,57,"path"],[116,86,63,35],[116,88,63,63,"objNewFriend"],[116,100,63,35],[116,101,63,14],[118,0,64,14,"console"],[118,26,64,14,"console"],[118,33,64,21],[118,34,64,22,"log"],[118,37,64,14],[118,38,64,26],[118,70,64,58,"apiResponse"],[118,81,64,14],[119,0,65,14],[119,31,65,19,"setState"],[119,39,65,14],[119,40,65,28],[120,0,65,29,"apiResponse"],[120,28,65,29,"apiResponse"],[120,39,65,40],[120,41,65,29,"apiResponse"],[121,0,65,28],[121,27,65,14],[122,0,66,14],[122,33,66,21,"apiResponse"],[122,44,66,14],[123,0,67,13],[123,25,62,12],[123,26,67,14],[123,33,67,21,"e"],[123,34,67,14],[123,36,67,24],[124,0,68,14,"console"],[124,26,68,14,"console"],[124,33,68,21],[124,34,68,22,"log"],[124,37,68,14],[124,38,68,26,"e"],[124,39,68,14],[125,0,69,13],[126,0,70,11],[127,0,71,9],[128,0,72,7],[129,0,73,5],[130,0,73,6],[131,0,74,3],[131,13,39,10],[131,14,34,29],[133,0,34,29],[134,0,34,29],[135,0,34,29],[136,0,34,29],[137,0,34,29],[138,0,34,29],[139,0,34,29],[139,3,34,9],[143,0,79,9],[143,6,79,16,"newFriend"],[143,15,79,25],[143,18,79,29],[143,27,79,16,"newFriend"],[143,36,79,29],[143,37,79,36,"user"],[143,41,79,29],[143,43,79,41,"newFriends"],[143,53,79,29],[144,0,79,29],[145,0,79,29],[146,0,79,29],[147,0,79,29],[148,0,79,29],[149,0,79,29],[150,0,79,29],[150,46,80,13],[150,51,80,17],[150,52,80,18,"getUser"],[150,59,80,13],[150,60,80,26,"user"],[150,64,80,13],[150,65,79,29],[152,0,79,29],[153,0,79,29],[154,0,79,29],[154,46,81,26],[154,51,81,30],[154,52,81,31,"state"],[154,57,81,26],[154,58,81,37,"Friends"],[154,65,79,29],[156,0,79,29],[157,0,81,10,"friends"],[157,12,81,10,"friends"],[157,19,79,29],[158,0,79,29],[159,0,79,29],[159,46,82,28],[159,51,82,32],[159,52,82,33,"state"],[159,57,82,28],[159,58,82,39,"hasFriend"],[159,67,79,29],[161,0,79,29],[162,0,82,10,"hasFriend"],[162,12,82,10,"hasFriend"],[162,21,79,29],[163,0,79,29],[164,0,79,29],[164,46,84,12,"cognitoIdentityServiceProvider"],[164,76,84,42],[164,77,84,43,"listUsers"],[164,86,84,12],[164,87,84,53,"params"],[164,93,84,12],[164,95,84,61],[164,105,84,70,"err"],[164,108,84,61],[164,110,84,75,"data"],[164,114,84,61],[164,116,84,81],[165,0,85,6],[165,18,85,10,"err"],[165,21,85,6],[165,23,85,15,"console"],[165,30,85,22],[165,31,85,23,"log"],[165,34,85,15],[165,35,85,27],[165,46,85,36,"err"],[165,49,85,15],[165,51,85,41,"err"],[165,54,85,44],[165,55,85,45,"stack"],[165,60,85,15],[165,62,85,6],[165,67,86,10],[166,0,87,8],[166,23,87,12],[166,27,87,16,"resp"],[166,31,87,8],[166,35,87,24,"data"],[166,39,87,28],[166,40,87,29,"Users"],[166,45,87,8],[166,47,87,35],[167,0,88,10],[167,24,88,14,"objUsername"],[167,35,88,25],[167,38,88,28,"data"],[167,42,88,32],[167,43,88,33,"Users"],[167,48,88,28],[167,49,88,39,"resp"],[167,53,88,28],[167,55,88,45,"Username"],[167,63,88,10],[168,0,89,10],[168,24,89,14,"objUserStatus"],[168,37,89,27],[168,40,89,30,"data"],[168,44,89,34],[168,45,89,35,"Users"],[168,50,89,30],[168,51,89,41,"resp"],[168,55,89,30],[168,57,89,47,"UserStatus"],[168,67,89,10],[170,0,91,10],[170,24,91,13,"objUsername"],[170,35,91,24],[170,39,91,28,"user"],[170,43,91,13],[170,47,91,36,"newFriends"],[170,57,91,46],[170,61,91,50,"objUsername"],[170,72,91,13],[170,76,91,65,"objUserStatus"],[170,89,91,78],[170,93,91,82],[170,104,91,10],[170,106,91,95],[171,0,92,12],[171,26,92,16,"objNewFriend"],[171,38,92,28],[171,41,92,31],[172,0,93,14,"body"],[172,24,93,14,"body"],[172,28,93,18],[172,30,93,20],[173,0,94,16],[173,35,94,25,"user"],[173,39,93,20],[174,0,95,16],[174,37,95,26,"friends"],[175,0,93,20],[176,0,92,31],[176,23,92,12],[178,0,99,12],[178,26,99,15,"hasFriend"],[178,35,99,24],[178,39,99,28],[178,43,99,12],[178,45,99,33],[179,0,100,14,"objNewFriend"],[179,24,100,14,"objNewFriend"],[179,36,100,26],[179,37,100,27,"body"],[179,41,100,14],[179,42,100,32,"Friends"],[179,49,100,14],[179,50,100,40,"push"],[179,54,100,14],[179,55,100,45,"newFriends"],[179,65,100,14],[180,0,101,13],[180,23,99,12],[180,29,101,17],[181,0,102,14,"objNewFriend"],[181,24,102,14,"objNewFriend"],[181,36,102,26],[181,37,102,27,"body"],[181,41,102,14],[181,42,102,32,"Friends"],[181,49,102,14],[181,52,102,42],[181,53,102,43,"newFriends"],[181,63,102,42],[181,64,102,14],[182,0,103,13],[184,0,105,12],[184,26,105,18,"path"],[184,30,105,22],[184,33,105,25],[184,46,105,12],[186,0,108,12],[186,26,108,16],[187,0,109,14],[187,28,109,20,"apiResponse"],[187,39,109,31],[187,42,109,35,"API"],[187,62,109,39,"put"],[187,65,109,35],[187,66,109,43],[187,78,109,35],[187,80,109,57,"path"],[187,84,109,35],[187,86,109,63,"objNewFriend"],[187,98,109,35],[187,99,109,14],[189,0,110,14,"console"],[189,24,110,14,"console"],[189,31,110,21],[189,32,110,22,"log"],[189,35,110,14],[189,36,110,26],[189,68,110,58,"apiResponse"],[189,79,110,14],[190,0,111,14],[190,29,111,19,"setState"],[190,37,111,14],[190,38,111,28],[191,0,111,29,"apiResponse"],[191,26,111,29,"apiResponse"],[191,37,111,40],[191,39,111,29,"apiResponse"],[192,0,111,28],[192,25,111,14],[193,0,112,14],[193,31,112,21,"apiResponse"],[193,42,112,14],[194,0,113,13],[194,23,108,12],[194,24,113,14],[194,31,113,21,"e"],[194,32,113,14],[194,34,113,24],[195,0,114,14,"console"],[195,24,114,14,"console"],[195,31,114,21],[195,32,114,22,"log"],[195,35,114,14],[195,36,114,26,"e"],[195,37,114,14],[196,0,115,13],[197,0,117,11],[197,21,91,10],[197,27,117,15],[198,0,118,12,"console"],[198,22,118,12,"console"],[198,29,118,19],[198,30,118,20,"log"],[198,33,118,12],[198,34,118,24],[198,62,118,12],[199,0,119,11],[200,0,120,9],[201,0,121,7],[202,0,121,8],[203,0,122,5],[203,13,84,12],[203,14,79,29],[205,0,79,29],[206,0,79,29],[207,0,79,29],[208,0,79,29],[209,0,79,29],[210,0,79,29],[211,0,79,29],[211,3,79,9]]},"type":"js/module"}]}