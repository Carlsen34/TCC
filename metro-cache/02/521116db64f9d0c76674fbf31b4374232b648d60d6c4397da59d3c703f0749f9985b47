{"dependencies":[],"output":[{"data":{"code":"__d(function(global, require, _aUnused, _bUnused, module, exports, _cUnused) {\n  module.exports = {\n  \"version\": 2,\n  \"waiters\": {\n    \"DistributionDeployed\": {\n      \"delay\": 60,\n      \"operation\": \"GetDistribution\",\n      \"maxAttempts\": 25,\n      \"description\": \"Wait until a distribution is deployed.\",\n      \"acceptors\": [\n        {\n          \"expected\": \"Deployed\",\n          \"matcher\": \"path\",\n          \"state\": \"success\",\n          \"argument\": \"Distribution.Status\"\n        }\n      ]\n    },\n    \"InvalidationCompleted\": {\n      \"delay\": 20,\n      \"operation\": \"GetInvalidation\",\n      \"maxAttempts\": 30,\n      \"description\": \"Wait until an invalidation has completed.\",\n      \"acceptors\": [\n        {\n          \"expected\": \"Completed\",\n          \"matcher\": \"path\",\n          \"state\": \"success\",\n          \"argument\": \"Invalidation.Status\"\n        }\n      ]\n    },\n    \"StreamingDistributionDeployed\": {\n      \"delay\": 60,\n      \"operation\": \"GetStreamingDistribution\",\n      \"maxAttempts\": 25,\n      \"description\": \"Wait until a streaming distribution is deployed.\",\n      \"acceptors\": [\n        {\n          \"expected\": \"Deployed\",\n          \"matcher\": \"path\",\n          \"state\": \"success\",\n          \"argument\": \"StreamingDistribution.Status\"\n        }\n      ]\n    }\n  }\n}\n;\n});","map":[]},"type":"js/module"}]}