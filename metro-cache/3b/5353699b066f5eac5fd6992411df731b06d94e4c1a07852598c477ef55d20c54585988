{"dependencies":[{"name":"./browserHashUtils","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var hashUtils = _$$_REQUIRE(_dependencyMap[0], \"./browserHashUtils\");\n\n  function Hmac(hashCtor, secret) {\n    this.hash = new hashCtor();\n    this.outer = new hashCtor();\n    var inner = bufferFromSecret(hashCtor, secret);\n    var outer = new Uint8Array(hashCtor.BLOCK_SIZE);\n    outer.set(inner);\n\n    for (var i = 0; i < hashCtor.BLOCK_SIZE; i++) {\n      inner[i] ^= 0x36;\n      outer[i] ^= 0x5c;\n    }\n\n    this.hash.update(inner);\n    this.outer.update(outer);\n\n    for (var i = 0; i < inner.byteLength; i++) {\n      inner[i] = 0;\n    }\n  }\n\n  module.exports = exports = Hmac;\n\n  Hmac.prototype.update = function (toHash) {\n    if (hashUtils.isEmptyData(toHash) || this.error) {\n      return this;\n    }\n\n    try {\n      this.hash.update(hashUtils.convertToBuffer(toHash));\n    } catch (e) {\n      this.error = e;\n    }\n\n    return this;\n  };\n\n  Hmac.prototype.digest = function (encoding) {\n    if (!this.outer.finished) {\n      this.outer.update(this.hash.digest());\n    }\n\n    return this.outer.digest(encoding);\n  };\n\n  function bufferFromSecret(hashCtor, secret) {\n    var input = hashUtils.convertToBuffer(secret);\n\n    if (input.byteLength > hashCtor.BLOCK_SIZE) {\n      var bufferHash = new hashCtor();\n      bufferHash.update(input);\n      input = bufferHash.digest();\n    }\n\n    var buffer = new Uint8Array(hashCtor.BLOCK_SIZE);\n    buffer.set(input);\n    return buffer;\n  }\n});","map":[[2,0,1,0],[2,6,1,4,"hashUtils"],[2,15,1,13],[2,18,1,16,"require"],[2,29,1,23],[2,70,1,0],[4,0,6,0],[4,11,6,9,"Hmac"],[4,15,6,0],[4,16,6,14,"hashCtor"],[4,24,6,0],[4,26,6,24,"secret"],[4,32,6,0],[4,34,6,32],[5,0,7,4],[5,9,7,9,"hash"],[5,13,7,4],[5,16,7,16],[5,20,7,20,"hashCtor"],[5,28,7,16],[5,30,7,4],[6,0,8,4],[6,9,8,9,"outer"],[6,14,8,4],[6,17,8,17],[6,21,8,21,"hashCtor"],[6,29,8,17],[6,31,8,4],[7,0,10,4],[7,8,10,8,"inner"],[7,13,10,13],[7,16,10,16,"bufferFromSecret"],[7,32,10,32],[7,33,10,33,"hashCtor"],[7,41,10,32],[7,43,10,43,"secret"],[7,49,10,32],[7,50,10,4],[8,0,11,4],[8,8,11,8,"outer"],[8,13,11,13],[8,16,11,16],[8,20,11,20,"Uint8Array"],[8,30,11,16],[8,31,11,31,"hashCtor"],[8,39,11,39],[8,40,11,40,"BLOCK_SIZE"],[8,50,11,16],[8,51,11,4],[9,0,12,4,"outer"],[9,4,12,4,"outer"],[9,9,12,9],[9,10,12,10,"set"],[9,13,12,4],[9,14,12,14,"inner"],[9,19,12,4],[11,0,14,4],[11,9,14,9],[11,13,14,13,"i"],[11,14,14,14],[11,17,14,17],[11,18,14,4],[11,20,14,20,"i"],[11,21,14,21],[11,24,14,24,"hashCtor"],[11,32,14,32],[11,33,14,33,"BLOCK_SIZE"],[11,43,14,4],[11,45,14,45,"i"],[11,46,14,46],[11,48,14,4],[11,50,14,50],[12,0,15,8,"inner"],[12,6,15,8,"inner"],[12,11,15,13],[12,12,15,14,"i"],[12,13,15,13],[12,14,15,8],[12,18,15,20],[12,22,15,8],[13,0,16,8,"outer"],[13,6,16,8,"outer"],[13,11,16,13],[13,12,16,14,"i"],[13,13,16,13],[13,14,16,8],[13,18,16,20],[13,22,16,8],[14,0,17,5],[16,0,19,4],[16,9,19,9,"hash"],[16,13,19,4],[16,14,19,14,"update"],[16,20,19,4],[16,21,19,21,"inner"],[16,26,19,4],[17,0,20,4],[17,9,20,9,"outer"],[17,14,20,4],[17,15,20,15,"update"],[17,21,20,4],[17,22,20,22,"outer"],[17,27,20,4],[19,0,23,4],[19,9,23,9],[19,13,23,13,"i"],[19,14,23,14],[19,17,23,17],[19,18,23,4],[19,20,23,20,"i"],[19,21,23,21],[19,24,23,24,"inner"],[19,29,23,29],[19,30,23,30,"byteLength"],[19,40,23,4],[19,42,23,42,"i"],[19,43,23,43],[19,45,23,4],[19,47,23,47],[20,0,24,8,"inner"],[20,6,24,8,"inner"],[20,11,24,13],[20,12,24,14,"i"],[20,13,24,13],[20,14,24,8],[20,17,24,19],[20,18,24,8],[21,0,25,5],[22,0,26,1],[24,0,28,0,"module"],[24,2,28,0,"module"],[24,8,28,6],[24,9,28,7,"exports"],[24,16,28,0],[24,19,28,17,"exports"],[24,26,28,24],[24,29,28,27,"Hmac"],[24,33,28,0],[26,0,30,0,"Hmac"],[26,2,30,0,"Hmac"],[26,6,30,4],[26,7,30,5,"prototype"],[26,16,30,0],[26,17,30,15,"update"],[26,23,30,0],[26,26,30,24],[26,36,30,34,"toHash"],[26,42,30,24],[26,44,30,42],[27,0,31,4],[27,8,31,8,"hashUtils"],[27,17,31,17],[27,18,31,18,"isEmptyData"],[27,29,31,8],[27,30,31,30,"toHash"],[27,36,31,8],[27,41,31,41],[27,46,31,46,"error"],[27,51,31,4],[27,53,31,53],[28,0,32,8],[28,13,32,15],[28,17,32,8],[29,0,33,5],[31,0,35,4],[31,8,35,8],[32,0,36,8],[32,11,36,13,"hash"],[32,15,36,8],[32,16,36,18,"update"],[32,22,36,8],[32,23,36,25,"hashUtils"],[32,32,36,34],[32,33,36,35,"convertToBuffer"],[32,48,36,25],[32,49,36,51,"toHash"],[32,55,36,25],[32,56,36,8],[33,0,37,5],[33,5,35,4],[33,6,37,6],[33,13,37,13,"e"],[33,14,37,6],[33,16,37,16],[34,0,38,8],[34,11,38,13,"error"],[34,16,38,8],[34,19,38,21,"e"],[34,20,38,8],[35,0,39,5],[37,0,41,4],[37,11,41,11],[37,15,41,4],[38,0,42,1],[38,3,30,0],[40,0,44,0,"Hmac"],[40,2,44,0,"Hmac"],[40,6,44,4],[40,7,44,5,"prototype"],[40,16,44,0],[40,17,44,15,"digest"],[40,23,44,0],[40,26,44,24],[40,36,44,34,"encoding"],[40,44,44,24],[40,46,44,44],[41,0,45,4],[41,8,45,8],[41,9,45,9],[41,14,45,14,"outer"],[41,19,45,9],[41,20,45,20,"finished"],[41,28,45,4],[41,30,45,30],[42,0,46,8],[42,11,46,13,"outer"],[42,16,46,8],[42,17,46,19,"update"],[42,23,46,8],[42,24,46,26],[42,29,46,31,"hash"],[42,33,46,26],[42,34,46,36,"digest"],[42,40,46,26],[42,42,46,8],[43,0,47,5],[45,0,49,4],[45,11,49,11],[45,16,49,16,"outer"],[45,21,49,11],[45,22,49,22,"digest"],[45,28,49,11],[45,29,49,29,"encoding"],[45,37,49,11],[45,38,49,4],[46,0,50,1],[46,3,44,0],[48,0,52,0],[48,11,52,9,"bufferFromSecret"],[48,27,52,0],[48,28,52,26,"hashCtor"],[48,36,52,0],[48,38,52,36,"secret"],[48,44,52,0],[48,46,52,44],[49,0,53,4],[49,8,53,8,"input"],[49,13,53,13],[49,16,53,16,"hashUtils"],[49,25,53,25],[49,26,53,26,"convertToBuffer"],[49,41,53,16],[49,42,53,42,"secret"],[49,48,53,16],[49,49,53,4],[51,0,54,4],[51,8,54,8,"input"],[51,13,54,13],[51,14,54,14,"byteLength"],[51,24,54,8],[51,27,54,27,"hashCtor"],[51,35,54,35],[51,36,54,36,"BLOCK_SIZE"],[51,46,54,4],[51,48,54,48],[52,0,55,8],[52,10,55,12,"bufferHash"],[52,20,55,22],[52,23,55,25],[52,27,55,29,"hashCtor"],[52,35,55,25],[52,37,55,8],[53,0,56,8,"bufferHash"],[53,6,56,8,"bufferHash"],[53,16,56,18],[53,17,56,19,"update"],[53,23,56,8],[53,24,56,26,"input"],[53,29,56,8],[54,0,57,8,"input"],[54,6,57,8,"input"],[54,11,57,13],[54,14,57,16,"bufferHash"],[54,24,57,26],[54,25,57,27,"digest"],[54,31,57,16],[54,33,57,8],[55,0,58,5],[57,0,59,4],[57,8,59,8,"buffer"],[57,14,59,14],[57,17,59,17],[57,21,59,21,"Uint8Array"],[57,31,59,17],[57,32,59,32,"hashCtor"],[57,40,59,40],[57,41,59,41,"BLOCK_SIZE"],[57,51,59,17],[57,52,59,4],[58,0,60,4,"buffer"],[58,4,60,4,"buffer"],[58,10,60,10],[58,11,60,11,"set"],[58,14,60,4],[58,15,60,15,"input"],[58,20,60,4],[59,0,61,4],[59,11,61,11,"buffer"],[59,17,61,4],[60,0,62,1]]},"type":"js/module"}]}