{"dependencies":[],"output":[{"data":{"code":"__d(function(global, require, _aUnused, _bUnused, module, exports, _cUnused) {\n  module.exports = {\n  \"version\": 2,\n  \"waiters\": {\n    \"InstanceExists\": {\n      \"delay\": 5,\n      \"maxAttempts\": 40,\n      \"operation\": \"DescribeInstances\",\n      \"acceptors\": [\n        {\n          \"matcher\": \"path\",\n          \"expected\": true,\n          \"argument\": \"length(Reservations[]) > `0`\",\n          \"state\": \"success\"\n        },\n        {\n          \"matcher\": \"error\",\n          \"expected\": \"InvalidInstanceID.NotFound\",\n          \"state\": \"retry\"\n        }\n      ]\n    },\n    \"BundleTaskComplete\": {\n      \"delay\": 15,\n      \"operation\": \"DescribeBundleTasks\",\n      \"maxAttempts\": 40,\n      \"acceptors\": [\n        {\n          \"expected\": \"complete\",\n          \"matcher\": \"pathAll\",\n          \"state\": \"success\",\n          \"argument\": \"BundleTasks[].State\"\n        },\n        {\n          \"expected\": \"failed\",\n          \"matcher\": \"pathAny\",\n          \"state\": \"failure\",\n          \"argument\": \"BundleTasks[].State\"\n        }\n      ]\n    },\n    \"ConversionTaskCancelled\": {\n      \"delay\": 15,\n      \"operation\": \"DescribeConversionTasks\",\n      \"maxAttempts\": 40,\n      \"acceptors\": [\n        {\n          \"expected\": \"cancelled\",\n          \"matcher\": \"pathAll\",\n          \"state\": \"success\",\n          \"argument\": \"ConversionTasks[].State\"\n        }\n      ]\n    },\n    \"ConversionTaskCompleted\": {\n      \"delay\": 15,\n      \"operation\": \"DescribeConversionTasks\",\n      \"maxAttempts\": 40,\n      \"acceptors\": [\n        {\n          \"expected\": \"completed\",\n          \"matcher\": \"pathAll\",\n          \"state\": \"success\",\n          \"argument\": \"ConversionTasks[].State\"\n        },\n        {\n          \"expected\": \"cancelled\",\n          \"matcher\": \"pathAny\",\n          \"state\": \"failure\",\n          \"argument\": \"ConversionTasks[].State\"\n        },\n        {\n          \"expected\": \"cancelling\",\n          \"matcher\": \"pathAny\",\n          \"state\": \"failure\",\n          \"argument\": \"ConversionTasks[].State\"\n        }\n      ]\n    },\n    \"ConversionTaskDeleted\": {\n      \"delay\": 15,\n      \"operation\": \"DescribeConversionTasks\",\n      \"maxAttempts\": 40,\n      \"acceptors\": [\n        {\n          \"expected\": \"deleted\",\n          \"matcher\": \"pathAll\",\n          \"state\": \"success\",\n          \"argument\": \"ConversionTasks[].State\"\n        }\n      ]\n    },\n    \"CustomerGatewayAvailable\": {\n      \"delay\": 15,\n      \"operation\": \"DescribeCustomerGateways\",\n      \"maxAttempts\": 40,\n      \"acceptors\": [\n        {\n          \"expected\": \"available\",\n          \"matcher\": \"pathAll\",\n          \"state\": \"success\",\n          \"argument\": \"CustomerGateways[].State\"\n        },\n        {\n          \"expected\": \"deleted\",\n          \"matcher\": \"pathAny\",\n          \"state\": \"failure\",\n          \"argument\": \"CustomerGateways[].State\"\n        },\n        {\n          \"expected\": \"deleting\",\n          \"matcher\": \"pathAny\",\n          \"state\": \"failure\",\n          \"argument\": \"CustomerGateways[].State\"\n        }\n      ]\n    },\n    \"ExportTaskCancelled\": {\n      \"delay\": 15,\n      \"operation\": \"DescribeExportTasks\",\n      \"maxAttempts\": 40,\n      \"acceptors\": [\n        {\n          \"expected\": \"cancelled\",\n          \"matcher\": \"pathAll\",\n          \"state\": \"success\",\n          \"argument\": \"ExportTasks[].State\"\n        }\n      ]\n    },\n    \"ExportTaskCompleted\": {\n      \"delay\": 15,\n      \"operation\": \"DescribeExportTasks\",\n      \"maxAttempts\": 40,\n      \"acceptors\": [\n        {\n          \"expected\": \"completed\",\n          \"matcher\": \"pathAll\",\n          \"state\": \"success\",\n          \"argument\": \"ExportTasks[].State\"\n        }\n      ]\n    },\n    \"ImageExists\": {\n      \"operation\": \"DescribeImages\",\n      \"maxAttempts\": 40,\n      \"delay\": 15,\n      \"acceptors\": [\n        {\n          \"matcher\": \"path\",\n          \"expected\": true,\n          \"argument\": \"length(Images[]) > `0`\",\n          \"state\": \"success\"\n        },\n        {\n          \"matcher\": \"error\",\n          \"expected\": \"InvalidAMIID.NotFound\",\n          \"state\": \"retry\"\n        }\n      ]\n    },\n    \"ImageAvailable\": {\n      \"operation\": \"DescribeImages\",\n      \"maxAttempts\": 40,\n      \"delay\": 15,\n      \"acceptors\": [\n        {\n          \"state\": \"success\",\n          \"matcher\": \"pathAll\",\n          \"argument\": \"Images[].State\",\n          \"expected\": \"available\"\n        },\n        {\n          \"state\": \"failure\",\n          \"matcher\": \"pathAny\",\n          \"argument\": \"Images[].State\",\n          \"expected\": \"failed\"\n        }\n      ]\n    },\n    \"InstanceRunning\": {\n      \"delay\": 15,\n      \"operation\": \"DescribeInstances\",\n      \"maxAttempts\": 40,\n      \"acceptors\": [\n        {\n          \"expected\": \"running\",\n          \"matcher\": \"pathAll\",\n          \"state\": \"success\",\n          \"argument\": \"Reservations[].Instances[].State.Name\"\n        },\n        {\n          \"expected\": \"shutting-down\",\n          \"matcher\": \"pathAny\",\n          \"state\": \"failure\",\n          \"argument\": \"Reservations[].Instances[].State.Name\"\n        },\n        {\n          \"expected\": \"terminated\",\n          \"matcher\": \"pathAny\",\n          \"state\": \"failure\",\n          \"argument\": \"Reservations[].Instances[].State.Name\"\n        },\n        {\n          \"expected\": \"stopping\",\n          \"matcher\": \"pathAny\",\n          \"state\": \"failure\",\n          \"argument\": \"Reservations[].Instances[].State.Name\"\n        },\n        {\n          \"matcher\": \"error\",\n          \"expected\": \"InvalidInstanceID.NotFound\",\n          \"state\": \"retry\"\n        }\n      ]\n    },\n    \"InstanceStatusOk\": {\n      \"operation\": \"DescribeInstanceStatus\",\n      \"maxAttempts\": 40,\n      \"delay\": 15,\n      \"acceptors\": [\n        {\n          \"state\": \"success\",\n          \"matcher\": \"pathAll\",\n          \"argument\": \"InstanceStatuses[].InstanceStatus.Status\",\n          \"expected\": \"ok\"\n        },\n        {\n          \"matcher\": \"error\",\n          \"expected\": \"InvalidInstanceID.NotFound\",\n          \"state\": \"retry\"\n        }\n      ]\n    },\n    \"InstanceStopped\": {\n      \"delay\": 15,\n      \"operation\": \"DescribeInstances\",\n      \"maxAttempts\": 40,\n      \"acceptors\": [\n        {\n          \"expected\": \"stopped\",\n          \"matcher\": \"pathAll\",\n          \"state\": \"success\",\n          \"argument\": \"Reservations[].Instances[].State.Name\"\n        },\n        {\n          \"expected\": \"pending\",\n          \"matcher\": \"pathAny\",\n          \"state\": \"failure\",\n          \"argument\": \"Reservations[].Instances[].State.Name\"\n        },\n        {\n          \"expected\": \"terminated\",\n          \"matcher\": \"pathAny\",\n          \"state\": \"failure\",\n          \"argument\": \"Reservations[].Instances[].State.Name\"\n        }\n      ]\n    },\n    \"InstanceTerminated\": {\n      \"delay\": 15,\n      \"operation\": \"DescribeInstances\",\n      \"maxAttempts\": 40,\n      \"acceptors\": [\n        {\n          \"expected\": \"terminated\",\n          \"matcher\": \"pathAll\",\n          \"state\": \"success\",\n          \"argument\": \"Reservations[].Instances[].State.Name\"\n        },\n        {\n          \"expected\": \"pending\",\n          \"matcher\": \"pathAny\",\n          \"state\": \"failure\",\n          \"argument\": \"Reservations[].Instances[].State.Name\"\n        },\n        {\n          \"expected\": \"stopping\",\n          \"matcher\": \"pathAny\",\n          \"state\": \"failure\",\n          \"argument\": \"Reservations[].Instances[].State.Name\"\n        }\n      ]\n    },\n    \"KeyPairExists\": {\n      \"operation\": \"DescribeKeyPairs\",\n      \"delay\": 5,\n      \"maxAttempts\": 6,\n      \"acceptors\": [\n        {\n          \"expected\": true,\n          \"matcher\": \"path\",\n          \"state\": \"success\",\n          \"argument\": \"length(KeyPairs[].KeyName) > `0`\"\n        },\n        {\n          \"expected\": \"InvalidKeyPair.NotFound\",\n          \"matcher\": \"error\",\n          \"state\": \"retry\"\n        }\n      ]\n    },\n    \"NatGatewayAvailable\": {\n      \"operation\": \"DescribeNatGateways\",\n      \"delay\": 15,\n      \"maxAttempts\": 40,\n      \"acceptors\": [\n        {\n          \"state\": \"success\",\n          \"matcher\": \"pathAll\",\n          \"argument\": \"NatGateways[].State\",\n          \"expected\": \"available\"\n        },\n        {\n          \"state\": \"failure\",\n          \"matcher\": \"pathAny\",\n          \"argument\": \"NatGateways[].State\",\n          \"expected\": \"failed\"\n        },\n        {\n          \"state\": \"failure\",\n          \"matcher\": \"pathAny\",\n          \"argument\": \"NatGateways[].State\",\n          \"expected\": \"deleting\"\n        },\n        {\n          \"state\": \"failure\",\n          \"matcher\": \"pathAny\",\n          \"argument\": \"NatGateways[].State\",\n          \"expected\": \"deleted\"\n        },\n        {\n          \"state\": \"retry\",\n          \"matcher\": \"error\",\n          \"expected\": \"NatGatewayNotFound\"\n        }\n      ]\n    },\n    \"NetworkInterfaceAvailable\": {\n      \"operation\": \"DescribeNetworkInterfaces\",\n      \"delay\": 20,\n      \"maxAttempts\": 10,\n      \"acceptors\": [\n        {\n          \"expected\": \"available\",\n          \"matcher\": \"pathAll\",\n          \"state\": \"success\",\n          \"argument\": \"NetworkInterfaces[].Status\"\n        },\n        {\n          \"expected\": \"InvalidNetworkInterfaceID.NotFound\",\n          \"matcher\": \"error\",\n          \"state\": \"failure\"\n        }\n      ]\n    },\n    \"PasswordDataAvailable\": {\n      \"operation\": \"GetPasswordData\",\n      \"maxAttempts\": 40,\n      \"delay\": 15,\n      \"acceptors\": [\n        {\n          \"state\": \"success\",\n          \"matcher\": \"path\",\n          \"argument\": \"length(PasswordData) > `0`\",\n          \"expected\": true\n        }\n      ]\n    },\n    \"SnapshotCompleted\": {\n      \"delay\": 15,\n      \"operation\": \"DescribeSnapshots\",\n      \"maxAttempts\": 40,\n      \"acceptors\": [\n        {\n          \"expected\": \"completed\",\n          \"matcher\": \"pathAll\",\n          \"state\": \"success\",\n          \"argument\": \"Snapshots[].State\"\n        }\n      ]\n    },\n    \"SpotInstanceRequestFulfilled\": {\n      \"operation\": \"DescribeSpotInstanceRequests\",\n      \"maxAttempts\": 40,\n      \"delay\": 15,\n      \"acceptors\": [\n        {\n          \"state\": \"success\",\n          \"matcher\": \"pathAll\",\n          \"argument\": \"SpotInstanceRequests[].Status.Code\",\n          \"expected\": \"fulfilled\"\n        },\n        {\n          \"state\": \"success\",\n          \"matcher\": \"pathAll\",\n          \"argument\": \"SpotInstanceRequests[].Status.Code\",\n          \"expected\": \"request-canceled-and-instance-running\"\n        },\n        {\n          \"state\": \"failure\",\n          \"matcher\": \"pathAny\",\n          \"argument\": \"SpotInstanceRequests[].Status.Code\",\n          \"expected\": \"schedule-expired\"\n        },\n        {\n          \"state\": \"failure\",\n          \"matcher\": \"pathAny\",\n          \"argument\": \"SpotInstanceRequests[].Status.Code\",\n          \"expected\": \"canceled-before-fulfillment\"\n        },\n        {\n          \"state\": \"failure\",\n          \"matcher\": \"pathAny\",\n          \"argument\": \"SpotInstanceRequests[].Status.Code\",\n          \"expected\": \"bad-parameters\"\n        },\n        {\n          \"state\": \"failure\",\n          \"matcher\": \"pathAny\",\n          \"argument\": \"SpotInstanceRequests[].Status.Code\",\n          \"expected\": \"system-error\"\n        },\n        {\n          \"state\": \"retry\",\n          \"matcher\": \"error\",\n          \"expected\": \"InvalidSpotInstanceRequestID.NotFound\"\n        }\n      ]\n    },\n    \"SubnetAvailable\": {\n      \"delay\": 15,\n      \"operation\": \"DescribeSubnets\",\n      \"maxAttempts\": 40,\n      \"acceptors\": [\n        {\n          \"expected\": \"available\",\n          \"matcher\": \"pathAll\",\n          \"state\": \"success\",\n          \"argument\": \"Subnets[].State\"\n        }\n      ]\n    },\n    \"SystemStatusOk\": {\n      \"operation\": \"DescribeInstanceStatus\",\n      \"maxAttempts\": 40,\n      \"delay\": 15,\n      \"acceptors\": [\n        {\n          \"state\": \"success\",\n          \"matcher\": \"pathAll\",\n          \"argument\": \"InstanceStatuses[].SystemStatus.Status\",\n          \"expected\": \"ok\"\n        }\n      ]\n    },\n    \"VolumeAvailable\": {\n      \"delay\": 15,\n      \"operation\": \"DescribeVolumes\",\n      \"maxAttempts\": 40,\n      \"acceptors\": [\n        {\n          \"expected\": \"available\",\n          \"matcher\": \"pathAll\",\n          \"state\": \"success\",\n          \"argument\": \"Volumes[].State\"\n        },\n        {\n          \"expected\": \"deleted\",\n          \"matcher\": \"pathAny\",\n          \"state\": \"failure\",\n          \"argument\": \"Volumes[].State\"\n        }\n      ]\n    },\n    \"VolumeDeleted\": {\n      \"delay\": 15,\n      \"operation\": \"DescribeVolumes\",\n      \"maxAttempts\": 40,\n      \"acceptors\": [\n        {\n          \"expected\": \"deleted\",\n          \"matcher\": \"pathAll\",\n          \"state\": \"success\",\n          \"argument\": \"Volumes[].State\"\n        },\n        {\n          \"matcher\": \"error\",\n          \"expected\": \"InvalidVolume.NotFound\",\n          \"state\": \"success\"\n        }\n      ]\n    },\n    \"VolumeInUse\": {\n      \"delay\": 15,\n      \"operation\": \"DescribeVolumes\",\n      \"maxAttempts\": 40,\n      \"acceptors\": [\n        {\n          \"expected\": \"in-use\",\n          \"matcher\": \"pathAll\",\n          \"state\": \"success\",\n          \"argument\": \"Volumes[].State\"\n        },\n        {\n          \"expected\": \"deleted\",\n          \"matcher\": \"pathAny\",\n          \"state\": \"failure\",\n          \"argument\": \"Volumes[].State\"\n        }\n      ]\n    },\n    \"VpcAvailable\": {\n      \"delay\": 15,\n      \"operation\": \"DescribeVpcs\",\n      \"maxAttempts\": 40,\n      \"acceptors\": [\n        {\n          \"expected\": \"available\",\n          \"matcher\": \"pathAll\",\n          \"state\": \"success\",\n          \"argument\": \"Vpcs[].State\"\n        }\n      ]\n    },\n    \"VpcExists\": {\n      \"operation\": \"DescribeVpcs\",\n      \"delay\": 1,\n      \"maxAttempts\": 5,\n      \"acceptors\": [\n        {\n          \"matcher\": \"status\",\n          \"expected\": 200,\n          \"state\": \"success\"\n        },\n        {\n          \"matcher\": \"error\",\n          \"expected\": \"InvalidVpcID.NotFound\",\n          \"state\": \"retry\"\n        }\n      ]\n    },\n    \"VpnConnectionAvailable\": {\n      \"delay\": 15,\n      \"operation\": \"DescribeVpnConnections\",\n      \"maxAttempts\": 40,\n      \"acceptors\": [\n        {\n          \"expected\": \"available\",\n          \"matcher\": \"pathAll\",\n          \"state\": \"success\",\n          \"argument\": \"VpnConnections[].State\"\n        },\n        {\n          \"expected\": \"deleting\",\n          \"matcher\": \"pathAny\",\n          \"state\": \"failure\",\n          \"argument\": \"VpnConnections[].State\"\n        },\n        {\n          \"expected\": \"deleted\",\n          \"matcher\": \"pathAny\",\n          \"state\": \"failure\",\n          \"argument\": \"VpnConnections[].State\"\n        }\n      ]\n    },\n    \"VpnConnectionDeleted\": {\n      \"delay\": 15,\n      \"operation\": \"DescribeVpnConnections\",\n      \"maxAttempts\": 40,\n      \"acceptors\": [\n        {\n          \"expected\": \"deleted\",\n          \"matcher\": \"pathAll\",\n          \"state\": \"success\",\n          \"argument\": \"VpnConnections[].State\"\n        },\n        {\n          \"expected\": \"pending\",\n          \"matcher\": \"pathAny\",\n          \"state\": \"failure\",\n          \"argument\": \"VpnConnections[].State\"\n        }\n      ]\n    },\n    \"VpcPeeringConnectionExists\": {\n      \"delay\": 15,\n      \"operation\": \"DescribeVpcPeeringConnections\",\n      \"maxAttempts\": 40,\n      \"acceptors\": [\n        {\n          \"matcher\": \"status\",\n          \"expected\": 200,\n          \"state\": \"success\"\n        },\n        {\n          \"matcher\": \"error\",\n          \"expected\": \"InvalidVpcPeeringConnectionID.NotFound\",\n          \"state\": \"retry\"\n        }\n      ]\n    },\n    \"VpcPeeringConnectionDeleted\": {\n      \"delay\": 15,\n      \"operation\": \"DescribeVpcPeeringConnections\",\n      \"maxAttempts\": 40,\n      \"acceptors\": [\n        {\n          \"expected\": \"deleted\",\n          \"matcher\": \"pathAll\",\n          \"state\": \"success\",\n          \"argument\": \"VpcPeeringConnections[].Status.Code\"\n        },\n        {\n          \"matcher\": \"error\",\n          \"expected\": \"InvalidVpcPeeringConnectionID.NotFound\",\n          \"state\": \"success\"\n        }\n      ]\n    }\n  }\n}\n;\n});","map":[]},"type":"js/module"}]}