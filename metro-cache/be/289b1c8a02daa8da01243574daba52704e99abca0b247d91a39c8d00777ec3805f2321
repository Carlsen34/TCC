{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"buffer/","data":{"isAsync":false}},{"name":"crypto-browserify","data":{"isAsync":false}},{"name":"./BigInteger","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/createClass\"));\n\n  var _buffer = _$$_REQUIRE(_dependencyMap[4], \"buffer/\");\n\n  var crypto = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[5], \"crypto-browserify\"));\n\n  var _BigInteger = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"./BigInteger\"));\n\n  var createHash = crypto.createHash;\n  var createHmac = crypto.createHmac;\n  var randomBytes = crypto.randomBytes;\n  var initN = 'FFFFFFFFFFFFFFFFC90FDAA22168C234C4C6628B80DC1CD1' + '29024E088A67CC74020BBEA63B139B22514A08798E3404DD' + 'EF9519B3CD3A431B302B0A6DF25F14374FE1356D6D51C245' + 'E485B576625E7EC6F44C42E9A637ED6B0BFF5CB6F406B7ED' + 'EE386BFB5A899FA5AE9F24117C4B1FE649286651ECE45B3D' + 'C2007CB8A163BF0598DA48361C55D39A69163FA8FD24CF5F' + '83655D23DCA3AD961C62F356208552BB9ED529077096966D' + '670C354E4ABC9804F1746C08CA18217C32905E462E36CE3B' + 'E39E772C180E86039B2783A2EC07A28FB5C55DF06F4C52C9' + 'DE2BCBF6955817183995497CEA956AE515D2261898FA0510' + '15728E5A8AAAC42DAD33170D04507A33A85521ABDF1CBA64' + 'ECFB850458DBEF0A8AEA71575D060C7DB3970F85A6E1E4C7' + 'ABF5AE8CDB0933D71E8C94E04A25619DCEE3D2261AD2EE6B' + 'F12FFA06D98A0864D87602733EC86A64521F2B18177B200C' + 'BBE117577A615D6C770988C0BAD946E208E24FA074E5AB31' + '43DB5BFCE0FD108E4B82D120A93AD2CAFFFFFFFFFFFFFFFF';\n  var newPasswordRequiredChallengeUserAttributePrefix = 'userAttributes.';\n\n  var AuthenticationHelper = function () {\n    function AuthenticationHelper(PoolName) {\n      (0, _classCallCheck2.default)(this, AuthenticationHelper);\n      this.N = new _BigInteger.default(initN, 16);\n      this.g = new _BigInteger.default('2', 16);\n      this.k = new _BigInteger.default(this.hexHash(\"00\" + this.N.toString(16) + \"0\" + this.g.toString(16)), 16);\n      this.smallAValue = this.generateRandomSmallA();\n      this.getLargeAValue(function () {});\n      this.infoBits = _buffer.Buffer.from('Caldera Derived Key', 'utf8');\n      this.poolName = PoolName;\n    }\n\n    (0, _createClass2.default)(AuthenticationHelper, [{\n      key: \"getSmallAValue\",\n      value: function getSmallAValue() {\n        return this.smallAValue;\n      }\n    }, {\n      key: \"getLargeAValue\",\n      value: function getLargeAValue(callback) {\n        var _this = this;\n\n        if (this.largeAValue) {\n          callback(null, this.largeAValue);\n        } else {\n          this.calculateA(this.smallAValue, function (err, largeAValue) {\n            if (err) {\n              callback(err, null);\n            }\n\n            _this.largeAValue = largeAValue;\n            callback(null, _this.largeAValue);\n          });\n        }\n      }\n    }, {\n      key: \"generateRandomSmallA\",\n      value: function generateRandomSmallA() {\n        var hexRandom = randomBytes(128).toString('hex');\n        var randomBigInt = new _BigInteger.default(hexRandom, 16);\n        var smallABigInt = randomBigInt.mod(this.N);\n        return smallABigInt;\n      }\n    }, {\n      key: \"generateRandomString\",\n      value: function generateRandomString() {\n        return randomBytes(40).toString('base64');\n      }\n    }, {\n      key: \"getRandomPassword\",\n      value: function getRandomPassword() {\n        return this.randomPassword;\n      }\n    }, {\n      key: \"getSaltDevices\",\n      value: function getSaltDevices() {\n        return this.SaltToHashDevices;\n      }\n    }, {\n      key: \"getVerifierDevices\",\n      value: function getVerifierDevices() {\n        return this.verifierDevices;\n      }\n    }, {\n      key: \"generateHashDevice\",\n      value: function generateHashDevice(deviceGroupKey, username, callback) {\n        var _this2 = this;\n\n        this.randomPassword = this.generateRandomString();\n        var combinedString = \"\" + deviceGroupKey + username + \":\" + this.randomPassword;\n        var hashedString = this.hash(combinedString);\n        var hexRandom = randomBytes(16).toString('hex');\n        this.SaltToHashDevices = this.padHex(new _BigInteger.default(hexRandom, 16));\n        this.g.modPow(new _BigInteger.default(this.hexHash(this.SaltToHashDevices + hashedString), 16), this.N, function (err, verifierDevicesNotPadded) {\n          if (err) {\n            callback(err, null);\n          }\n\n          _this2.verifierDevices = _this2.padHex(verifierDevicesNotPadded);\n          callback(null, null);\n        });\n      }\n    }, {\n      key: \"calculateA\",\n      value: function calculateA(a, callback) {\n        var _this3 = this;\n\n        this.g.modPow(a, this.N, function (err, A) {\n          if (err) {\n            callback(err, null);\n          }\n\n          if (A.mod(_this3.N).equals(_BigInteger.default.ZERO)) {\n            callback(new Error('Illegal paramater. A mod N cannot be 0.'), null);\n          }\n\n          callback(null, A);\n        });\n      }\n    }, {\n      key: \"calculateU\",\n      value: function calculateU(A, B) {\n        this.UHexHash = this.hexHash(this.padHex(A) + this.padHex(B));\n        var finalU = new _BigInteger.default(this.UHexHash, 16);\n        return finalU;\n      }\n    }, {\n      key: \"hash\",\n      value: function hash(buf) {\n        var hashHex = createHash('sha256').update(buf).digest('hex');\n        return new Array(64 - hashHex.length).join('0') + hashHex;\n      }\n    }, {\n      key: \"hexHash\",\n      value: function hexHash(hexStr) {\n        return this.hash(_buffer.Buffer.from(hexStr, 'hex'));\n      }\n    }, {\n      key: \"computehkdf\",\n      value: function computehkdf(ikm, salt) {\n        var prk = createHmac('sha256', salt).update(ikm).digest();\n\n        var infoBitsUpdate = _buffer.Buffer.concat([this.infoBits, _buffer.Buffer.from(String.fromCharCode(1), 'utf8')]);\n\n        var hmac = createHmac('sha256', prk).update(infoBitsUpdate).digest();\n        return hmac.slice(0, 16);\n      }\n    }, {\n      key: \"getPasswordAuthenticationKey\",\n      value: function getPasswordAuthenticationKey(username, password, serverBValue, salt, callback) {\n        var _this4 = this;\n\n        if (serverBValue.mod(this.N).equals(_BigInteger.default.ZERO)) {\n          throw new Error('B cannot be zero.');\n        }\n\n        this.UValue = this.calculateU(this.largeAValue, serverBValue);\n\n        if (this.UValue.equals(_BigInteger.default.ZERO)) {\n          throw new Error('U cannot be zero.');\n        }\n\n        var usernamePassword = \"\" + this.poolName + username + \":\" + password;\n        var usernamePasswordHash = this.hash(usernamePassword);\n        var xValue = new _BigInteger.default(this.hexHash(this.padHex(salt) + usernamePasswordHash), 16);\n        this.calculateS(xValue, serverBValue, function (err, sValue) {\n          if (err) {\n            callback(err, null);\n          }\n\n          var hkdf = _this4.computehkdf(_buffer.Buffer.from(_this4.padHex(sValue), 'hex'), _buffer.Buffer.from(_this4.padHex(_this4.UValue.toString(16)), 'hex'));\n\n          callback(null, hkdf);\n        });\n      }\n    }, {\n      key: \"calculateS\",\n      value: function calculateS(xValue, serverBValue, callback) {\n        var _this5 = this;\n\n        this.g.modPow(xValue, this.N, function (err, gModPowXN) {\n          if (err) {\n            callback(err, null);\n          }\n\n          var intValue2 = serverBValue.subtract(_this5.k.multiply(gModPowXN));\n          intValue2.modPow(_this5.smallAValue.add(_this5.UValue.multiply(xValue)), _this5.N, function (err2, result) {\n            if (err2) {\n              callback(err2, null);\n            }\n\n            callback(null, result.mod(_this5.N));\n          });\n        });\n      }\n    }, {\n      key: \"getNewPasswordRequiredChallengeUserAttributePrefix\",\n      value: function getNewPasswordRequiredChallengeUserAttributePrefix() {\n        return newPasswordRequiredChallengeUserAttributePrefix;\n      }\n    }, {\n      key: \"padHex\",\n      value: function padHex(bigInt) {\n        var hashStr = bigInt.toString(16);\n\n        if (hashStr.length % 2 === 1) {\n          hashStr = \"0\" + hashStr;\n        } else if ('89ABCDEFabcdef'.indexOf(hashStr[0]) !== -1) {\n          hashStr = \"00\" + hashStr;\n        }\n\n        return hashStr;\n      }\n    }]);\n    return AuthenticationHelper;\n  }();\n\n  exports.default = AuthenticationHelper;\n});","map":[[15,0,18,0],[17,0,19,0],[19,0,24,0],[21,0,20,0],[21,6,20,6,"createHash"],[21,16,20,16],[21,19,20,19,"crypto"],[21,25,20,25],[21,26,20,26,"createHash"],[21,36,20,0],[22,0,21,0],[22,6,21,6,"createHmac"],[22,16,21,16],[22,19,21,19,"crypto"],[22,25,21,25],[22,26,21,26,"createHmac"],[22,36,21,0],[23,0,22,0],[23,6,22,6,"randomBytes"],[23,17,22,17],[23,20,22,20,"crypto"],[23,26,22,26],[23,27,22,27,"randomBytes"],[23,38,22,0],[24,0,26,0],[24,6,26,6,"initN"],[24,11,26,11],[24,14,26,14],[24,67,27,4],[24,117,26,14],[24,120,28,4],[24,170,26,14],[24,173,29,4],[24,223,26,14],[24,226,30,4],[24,276,26,14],[24,279,31,4],[24,329,26,14],[24,332,32,4],[24,382,26,14],[24,385,33,4],[24,435,26,14],[24,438,34,4],[24,488,26,14],[24,491,35,4],[24,541,26,14],[24,544,36,4],[24,594,26,14],[24,597,37,4],[24,647,26,14],[24,650,38,4],[24,700,26,14],[24,703,39,4],[24,753,26,14],[24,756,40,4],[24,806,26,14],[24,809,41,4],[24,859,26,0],[25,0,43,0],[25,6,43,6,"newPasswordRequiredChallengeUserAttributePrefix"],[25,53,43,53],[25,56,43,56],[25,73,43,0],[27,6,46,21,"AuthenticationHelper"],[27,26],[28,0,51,2],[28,34,51,14,"PoolName"],[28,42,51,2],[28,44,51,24],[29,0,51,24],[30,0,52,4],[30,11,52,9,"N"],[30,12,52,4],[30,15,52,13],[30,19,52,17,"BigInteger"],[30,38,52,13],[30,39,52,28,"initN"],[30,44,52,13],[30,46,52,35],[30,48,52,13],[30,49,52,4],[31,0,53,4],[31,11,53,9,"g"],[31,12,53,4],[31,15,53,13],[31,19,53,17,"BigInteger"],[31,38,53,13],[31,39,53,28],[31,42,53,13],[31,44,53,33],[31,46,53,13],[31,47,53,4],[32,0,54,4],[32,11,54,9,"k"],[32,12,54,4],[32,15,54,13],[32,19,54,17,"BigInteger"],[32,38,54,13],[32,39,54,28],[32,44,54,33,"hexHash"],[32,51,54,28],[32,59,54,46],[32,64,54,51,"N"],[32,65,54,46],[32,66,54,53,"toString"],[32,74,54,46],[32,75,54,62],[32,77,54,46],[32,78,54,28],[32,87,54,69],[32,92,54,74,"g"],[32,93,54,69],[32,94,54,76,"toString"],[32,102,54,69],[32,103,54,85],[32,105,54,69],[32,106,54,28],[32,107,54,13],[32,109,54,93],[32,111,54,13],[32,112,54,4],[33,0,56,4],[33,11,56,9,"smallAValue"],[33,22,56,4],[33,25,56,23],[33,30,56,28,"generateRandomSmallA"],[33,50,56,23],[33,52,56,4],[34,0,57,4],[34,11,57,9,"getLargeAValue"],[34,25,57,4],[34,26,57,24],[34,38,57,30],[34,39,57,32],[34,40,57,4],[35,0,59,4],[35,11,59,9,"infoBits"],[35,19,59,4],[35,22,59,20,"Buffer"],[35,37,59,27,"from"],[35,41,59,20],[35,42,59,32],[35,63,59,20],[35,65,59,55],[35,71,59,20],[35,72,59,4],[36,0,61,4],[36,11,61,9,"poolName"],[36,19,61,4],[36,22,61,20,"PoolName"],[36,30,61,4],[37,0,62,3],[41,39,67,19],[42,0,68,4],[42,15,68,11],[42,20,68,16,"smallAValue"],[42,31,68,4],[43,0,69,3],[46,37,75,17,"callback"],[46,45],[46,47,75,27],[47,0,75,27],[49,0,76,4],[49,12,76,8],[49,17,76,13,"largeAValue"],[49,28,76,4],[49,30,76,26],[50,0,77,6,"callback"],[50,10,77,6,"callback"],[50,18,77,14],[50,19,77,15],[50,23,77,14],[50,25,77,21],[50,30,77,26,"largeAValue"],[50,41,77,14],[50,42,77,6],[51,0,78,5],[51,9,76,4],[51,15,78,11],[52,0,79,6],[52,15,79,11,"calculateA"],[52,25,79,6],[52,26,79,22],[52,31,79,27,"smallAValue"],[52,42,79,6],[52,44,79,40],[52,54,79,41,"err"],[52,57,79,40],[52,59,79,46,"largeAValue"],[52,70,79,40],[52,72,79,62],[53,0,80,8],[53,16,80,12,"err"],[53,19,80,8],[53,21,80,17],[54,0,81,10,"callback"],[54,14,81,10,"callback"],[54,22,81,18],[54,23,81,19,"err"],[54,26,81,18],[54,28,81,24],[54,32,81,18],[54,33,81,10],[55,0,82,9],[57,0,84,8],[57,12,84,8],[57,17,84,12],[57,18,84,13,"largeAValue"],[57,29,84,8],[57,32,84,27,"largeAValue"],[57,43,84,8],[58,0,85,8,"callback"],[58,12,85,8,"callback"],[58,20,85,16],[58,21,85,17],[58,25,85,16],[58,27,85,23],[58,32,85,27],[58,33,85,28,"largeAValue"],[58,44,85,16],[58,45,85,8],[59,0,86,7],[59,11,79,6],[60,0,87,5],[61,0,88,3],[64,45,95,25],[65,0,96,4],[65,12,96,10,"hexRandom"],[65,21,96,19],[65,24,96,22,"randomBytes"],[65,35,96,33],[65,36,96,34],[65,39,96,33],[65,40,96,22],[65,41,96,39,"toString"],[65,49,96,22],[65,50,96,48],[65,55,96,22],[65,56,96,4],[66,0,98,4],[66,12,98,10,"randomBigInt"],[66,24,98,22],[66,27,98,25],[66,31,98,29,"BigInteger"],[66,50,98,25],[66,51,98,40,"hexRandom"],[66,60,98,25],[66,62,98,51],[66,64,98,25],[66,65,98,4],[67,0,99,4],[67,12,99,10,"smallABigInt"],[67,24,99,22],[67,27,99,25,"randomBigInt"],[67,39,99,37],[67,40,99,38,"mod"],[67,43,99,25],[67,44,99,42],[67,49,99,47,"N"],[67,50,99,25],[67,51,99,4],[68,0,101,4],[68,15,101,11,"smallABigInt"],[68,27,101,4],[69,0,102,3],[72,45,109,25],[73,0,110,4],[73,15,110,11,"randomBytes"],[73,26,110,22],[73,27,110,23],[73,29,110,22],[73,30,110,11],[73,31,110,27,"toString"],[73,39,110,11],[73,40,110,36],[73,48,110,11],[73,49,110,4],[74,0,111,3],[77,42,116,22],[78,0,117,4],[78,15,117,11],[78,20,117,16,"randomPassword"],[78,34,117,4],[79,0,118,3],[82,39,123,19],[83,0,124,4],[83,15,124,11],[83,20,124,16,"SaltToHashDevices"],[83,37,124,4],[84,0,125,3],[87,43,130,23],[88,0,131,4],[88,15,131,11],[88,20,131,16,"verifierDevices"],[88,35,131,4],[89,0,132,3],[92,41,141,21,"deviceGroupKey"],[92,55],[92,57,141,37,"username"],[92,65],[92,67,141,47,"callback"],[92,75],[92,77,141,57],[93,0,141,57],[95,0,142,4],[95,13,142,9,"randomPassword"],[95,27,142,4],[95,30,142,26],[95,35,142,31,"generateRandomString"],[95,55,142,26],[95,57,142,4],[96,0,143,4],[96,12,143,10,"combinedString"],[96,26,143,24],[96,34,143,30,"deviceGroupKey"],[96,48,143,24],[96,51,143,47,"username"],[96,59,143,24],[96,68,143,59],[96,73,143,64,"randomPassword"],[96,87,143,4],[97,0,144,4],[97,12,144,10,"hashedString"],[97,24,144,22],[97,27,144,25],[97,32,144,30,"hash"],[97,36,144,25],[97,37,144,35,"combinedString"],[97,51,144,25],[97,52,144,4],[98,0,146,4],[98,12,146,10,"hexRandom"],[98,21,146,19],[98,24,146,22,"randomBytes"],[98,35,146,33],[98,36,146,34],[98,38,146,33],[98,39,146,22],[98,40,146,38,"toString"],[98,48,146,22],[98,49,146,47],[98,54,146,22],[98,55,146,4],[99,0,147,4],[99,13,147,9,"SaltToHashDevices"],[99,30,147,4],[99,33,147,29],[99,38,147,34,"padHex"],[99,44,147,29],[99,45,147,41],[99,49,147,45,"BigInteger"],[99,68,147,41],[99,69,147,56,"hexRandom"],[99,78,147,41],[99,80,147,67],[99,82,147,41],[99,83,147,29],[99,84,147,4],[100,0,149,4],[100,13,149,9,"g"],[100,14,149,4],[100,15,149,11,"modPow"],[100,21,149,4],[100,22,150,6],[100,26,150,10,"BigInteger"],[100,45,150,6],[100,46,150,21],[100,51,150,26,"hexHash"],[100,58,150,21],[100,59,150,34],[100,64,150,39,"SaltToHashDevices"],[100,81,150,34],[100,84,150,59,"hashedString"],[100,96,150,21],[100,97,150,6],[100,99,150,74],[100,101,150,6],[100,102,149,4],[100,104,151,6],[100,109,151,11,"N"],[100,110,149,4],[100,112,152,6],[100,122,152,7,"err"],[100,125,152,6],[100,127,152,12,"verifierDevicesNotPadded"],[100,151,152,6],[100,153,152,41],[101,0,153,8],[101,14,153,12,"err"],[101,17,153,8],[101,19,153,17],[102,0,154,10,"callback"],[102,12,154,10,"callback"],[102,20,154,18],[102,21,154,19,"err"],[102,24,154,18],[102,26,154,24],[102,30,154,18],[102,31,154,10],[103,0,155,9],[105,0,157,8],[105,10,157,8],[105,16,157,12],[105,17,157,13,"verifierDevices"],[105,32,157,8],[105,35,157,31],[105,41,157,35],[105,42,157,36,"padHex"],[105,48,157,31],[105,49,157,43,"verifierDevicesNotPadded"],[105,73,157,31],[105,74,157,8],[106,0,158,8,"callback"],[106,10,158,8,"callback"],[106,18,158,16],[106,19,158,17],[106,23,158,16],[106,25,158,23],[106,29,158,16],[106,30,158,8],[107,0,159,7],[107,9,149,4],[108,0,160,3],[111,33,170,13,"a"],[111,34],[111,36,170,16,"callback"],[111,44],[111,46,170,26],[112,0,170,26],[114,0,171,4],[114,13,171,9,"g"],[114,14,171,4],[114,15,171,11,"modPow"],[114,21,171,4],[114,22,171,18,"a"],[114,23,171,4],[114,25,171,21],[114,30,171,26,"N"],[114,31,171,4],[114,33,171,29],[114,43,171,30,"err"],[114,46,171,29],[114,48,171,35,"A"],[114,49,171,29],[114,51,171,41],[115,0,172,6],[115,14,172,10,"err"],[115,17,172,6],[115,19,172,15],[116,0,173,8,"callback"],[116,12,173,8,"callback"],[116,20,173,16],[116,21,173,17,"err"],[116,24,173,16],[116,26,173,22],[116,30,173,16],[116,31,173,8],[117,0,174,7],[119,0,176,6],[119,14,176,10,"A"],[119,15,176,11],[119,16,176,12,"mod"],[119,19,176,10],[119,20,176,16],[119,26,176,20],[119,27,176,21,"N"],[119,28,176,10],[119,30,176,24,"equals"],[119,36,176,10],[119,37,176,31,"BigInteger"],[119,57,176,42,"ZERO"],[119,61,176,10],[119,62,176,6],[119,64,176,49],[120,0,177,8,"callback"],[120,12,177,8,"callback"],[120,20,177,16],[120,21,177,17],[120,25,177,21,"Error"],[120,30,177,17],[120,31,177,27],[120,72,177,17],[120,73,177,16],[120,75,177,71],[120,79,177,16],[120,80,177,8],[121,0,178,7],[123,0,180,6,"callback"],[123,10,180,6,"callback"],[123,18,180,14],[123,19,180,15],[123,23,180,14],[123,25,180,21,"A"],[123,26,180,14],[123,27,180,6],[124,0,181,5],[124,9,171,4],[125,0,182,3],[128,33,191,13,"A"],[128,34],[128,36,191,16,"B"],[128,37],[128,39,191,19],[129,0,192,4],[129,13,192,9,"UHexHash"],[129,21,192,4],[129,24,192,20],[129,29,192,25,"hexHash"],[129,36,192,20],[129,37,192,33],[129,42,192,38,"padHex"],[129,48,192,33],[129,49,192,45,"A"],[129,50,192,33],[129,54,192,50],[129,59,192,55,"padHex"],[129,65,192,50],[129,66,192,62,"B"],[129,67,192,50],[129,68,192,20],[129,69,192,4],[130,0,193,4],[130,12,193,10,"finalU"],[130,18,193,16],[130,21,193,19],[130,25,193,23,"BigInteger"],[130,44,193,19],[130,45,193,34],[130,50,193,39,"UHexHash"],[130,58,193,19],[130,60,193,49],[130,62,193,19],[130,63,193,4],[131,0,195,4],[131,15,195,11,"finalU"],[131,21,195,4],[132,0,196,3],[135,27,204,7,"buf"],[135,30],[135,32,204,12],[136,0,205,4],[136,12,205,10,"hashHex"],[136,19,205,17],[136,22,205,20,"createHash"],[136,32,205,30],[136,33,205,31],[136,41,205,30],[136,42,205,20],[136,43,205,41,"update"],[136,49,205,20],[136,50,205,48,"buf"],[136,53,205,20],[136,55,205,53,"digest"],[136,61,205,20],[136,62,205,60],[136,67,205,20],[136,68,205,4],[137,0,206,4],[137,15,206,12],[137,19,206,16,"Array"],[137,24,206,12],[137,25,206,22],[137,30,206,27,"hashHex"],[137,37,206,34],[137,38,206,35,"length"],[137,44,206,12],[137,46,206,43,"join"],[137,50,206,12],[137,51,206,48],[137,54,206,12],[137,55,206,11],[137,58,206,56,"hashHex"],[137,65,206,4],[138,0,207,3],[141,30,215,10,"hexStr"],[141,36],[141,38,215,18],[142,0,216,4],[142,15,216,11],[142,20,216,16,"hash"],[142,24,216,11],[142,25,216,21,"Buffer"],[142,40,216,28,"from"],[142,44,216,21],[142,45,216,33,"hexStr"],[142,51,216,21],[142,53,216,41],[142,58,216,21],[142,59,216,11],[142,60,216,4],[143,0,217,3],[146,34,226,14,"ikm"],[146,37],[146,39,226,19,"salt"],[146,43],[146,45,226,25],[147,0,227,4],[147,12,227,10,"prk"],[147,15,227,13],[147,18,227,16,"createHmac"],[147,28,227,26],[147,29,227,27],[147,37,227,26],[147,39,227,37,"salt"],[147,43,227,26],[147,44,227,16],[147,45,227,43,"update"],[147,51,227,16],[147,52,227,50,"ikm"],[147,55,227,16],[147,57,227,55,"digest"],[147,63,227,16],[147,65,227,4],[149,0,228,4],[149,12,228,10,"infoBitsUpdate"],[149,26,228,24],[149,29,228,27,"Buffer"],[149,44,228,34,"concat"],[149,50,228,27],[149,51,228,41],[149,52,229,6],[149,57,229,11,"infoBits"],[149,65,228,41],[149,67,230,6,"Buffer"],[149,82,230,13,"from"],[149,86,230,6],[149,87,230,18,"String"],[149,93,230,24],[149,94,230,25,"fromCharCode"],[149,106,230,18],[149,107,230,38],[149,108,230,18],[149,109,230,6],[149,111,230,42],[149,117,230,6],[149,118,228,41],[149,119,228,27],[149,120,228,4],[151,0,232,4],[151,12,232,10,"hmac"],[151,16,232,14],[151,19,232,17,"createHmac"],[151,29,232,27],[151,30,232,28],[151,38,232,27],[151,40,232,38,"prk"],[151,43,232,27],[151,44,232,17],[151,45,232,43,"update"],[151,51,232,17],[151,52,232,50,"infoBitsUpdate"],[151,66,232,17],[151,68,232,66,"digest"],[151,74,232,17],[151,76,232,4],[152,0,233,4],[152,15,233,11,"hmac"],[152,19,233,15],[152,20,233,16,"slice"],[152,25,233,11],[152,26,233,22],[152,27,233,11],[152,29,233,25],[152,31,233,11],[152,32,233,4],[153,0,234,3],[156,51,245,31,"username"],[156,59],[156,61,245,41,"password"],[156,69],[156,71,245,51,"serverBValue"],[156,83],[156,85,245,65,"salt"],[156,89],[156,91,245,71,"callback"],[156,99],[156,101,245,81],[157,0,245,81],[159,0,246,4],[159,12,246,8,"serverBValue"],[159,24,246,20],[159,25,246,21,"mod"],[159,28,246,8],[159,29,246,25],[159,34,246,30,"N"],[159,35,246,8],[159,37,246,33,"equals"],[159,43,246,8],[159,44,246,40,"BigInteger"],[159,64,246,51,"ZERO"],[159,68,246,8],[159,69,246,4],[159,71,246,58],[160,0,247,6],[160,16,247,12],[160,20,247,16,"Error"],[160,25,247,12],[160,26,247,22],[160,45,247,12],[160,46,247,6],[161,0,248,5],[163,0,250,4],[163,13,250,9,"UValue"],[163,19,250,4],[163,22,250,18],[163,27,250,23,"calculateU"],[163,37,250,18],[163,38,250,34],[163,43,250,39,"largeAValue"],[163,54,250,18],[163,56,250,52,"serverBValue"],[163,68,250,18],[163,69,250,4],[165,0,252,4],[165,12,252,8],[165,17,252,13,"UValue"],[165,23,252,8],[165,24,252,20,"equals"],[165,30,252,8],[165,31,252,27,"BigInteger"],[165,51,252,38,"ZERO"],[165,55,252,8],[165,56,252,4],[165,58,252,45],[166,0,253,6],[166,16,253,12],[166,20,253,16,"Error"],[166,25,253,12],[166,26,253,22],[166,45,253,12],[166,46,253,6],[167,0,254,5],[169,0,256,4],[169,12,256,10,"usernamePassword"],[169,28,256,26],[169,36,256,32],[169,41,256,37,"poolName"],[169,49,256,26],[169,52,256,48,"username"],[169,60,256,26],[169,69,256,60,"password"],[169,77,256,4],[170,0,257,4],[170,12,257,10,"usernamePasswordHash"],[170,32,257,30],[170,35,257,33],[170,40,257,38,"hash"],[170,44,257,33],[170,45,257,43,"usernamePassword"],[170,61,257,33],[170,62,257,4],[171,0,259,4],[171,12,259,10,"xValue"],[171,18,259,16],[171,21,259,19],[171,25,259,23,"BigInteger"],[171,44,259,19],[171,45,259,34],[171,50,259,39,"hexHash"],[171,57,259,34],[171,58,259,47],[171,63,259,52,"padHex"],[171,69,259,47],[171,70,259,59,"salt"],[171,74,259,47],[171,78,259,67,"usernamePasswordHash"],[171,98,259,34],[171,99,259,19],[171,101,259,90],[171,103,259,19],[171,104,259,4],[172,0,260,4],[172,13,260,9,"calculateS"],[172,23,260,4],[172,24,260,20,"xValue"],[172,30,260,4],[172,32,260,28,"serverBValue"],[172,44,260,4],[172,46,260,42],[172,56,260,43,"err"],[172,59,260,42],[172,61,260,48,"sValue"],[172,67,260,42],[172,69,260,59],[173,0,261,6],[173,14,261,10,"err"],[173,17,261,6],[173,19,261,15],[174,0,262,8,"callback"],[174,12,262,8,"callback"],[174,20,262,16],[174,21,262,17,"err"],[174,24,262,16],[174,26,262,22],[174,30,262,16],[174,31,262,8],[175,0,263,7],[177,0,265,6],[177,14,265,12,"hkdf"],[177,18,265,16],[177,21,265,19],[177,27,265,23],[177,28,265,24,"computehkdf"],[177,39,265,19],[177,40,266,8,"Buffer"],[177,55,266,15,"from"],[177,59,266,8],[177,60,266,20],[177,66,266,24],[177,67,266,25,"padHex"],[177,73,266,20],[177,74,266,32,"sValue"],[177,80,266,20],[177,81,266,8],[177,83,266,41],[177,88,266,8],[177,89,265,19],[177,91,267,8,"Buffer"],[177,106,267,15,"from"],[177,110,267,8],[177,111,267,20],[177,117,267,24],[177,118,267,25,"padHex"],[177,124,267,20],[177,125,267,32],[177,131,267,36],[177,132,267,37,"UValue"],[177,138,267,32],[177,139,267,44,"toString"],[177,147,267,32],[177,148,267,53],[177,150,267,32],[177,151,267,20],[177,152,267,8],[177,154,267,59],[177,159,267,8],[177,160,265,19],[177,161,265,6],[179,0,269,6,"callback"],[179,10,269,6,"callback"],[179,18,269,14],[179,19,269,15],[179,23,269,14],[179,25,269,21,"hkdf"],[179,29,269,14],[179,30,269,6],[180,0,270,5],[180,9,260,4],[181,0,271,3],[184,33,280,13,"xValue"],[184,39],[184,41,280,21,"serverBValue"],[184,53],[184,55,280,35,"callback"],[184,63],[184,65,280,45],[185,0,280,45],[187,0,281,4],[187,13,281,9,"g"],[187,14,281,4],[187,15,281,11,"modPow"],[187,21,281,4],[187,22,281,18,"xValue"],[187,28,281,4],[187,30,281,26],[187,35,281,31,"N"],[187,36,281,4],[187,38,281,34],[187,48,281,35,"err"],[187,51,281,34],[187,53,281,40,"gModPowXN"],[187,62,281,34],[187,64,281,54],[188,0,282,6],[188,14,282,10,"err"],[188,17,282,6],[188,19,282,15],[189,0,283,8,"callback"],[189,12,283,8,"callback"],[189,20,283,16],[189,21,283,17,"err"],[189,24,283,16],[189,26,283,22],[189,30,283,16],[189,31,283,8],[190,0,284,7],[192,0,286,6],[192,14,286,12,"intValue2"],[192,23,286,21],[192,26,286,24,"serverBValue"],[192,38,286,36],[192,39,286,37,"subtract"],[192,47,286,24],[192,48,286,46],[192,54,286,50],[192,55,286,51,"k"],[192,56,286,46],[192,57,286,53,"multiply"],[192,65,286,46],[192,66,286,62,"gModPowXN"],[192,75,286,46],[192,76,286,24],[192,77,286,6],[193,0,287,6,"intValue2"],[193,10,287,6,"intValue2"],[193,19,287,15],[193,20,287,16,"modPow"],[193,26,287,6],[193,27,288,8],[193,33,288,12],[193,34,288,13,"smallAValue"],[193,45,288,8],[193,46,288,25,"add"],[193,49,288,8],[193,50,288,29],[193,56,288,33],[193,57,288,34,"UValue"],[193,63,288,29],[193,64,288,41,"multiply"],[193,72,288,29],[193,73,288,50,"xValue"],[193,79,288,29],[193,80,288,8],[193,81,287,6],[193,83,289,8],[193,89,289,12],[193,90,289,13,"N"],[193,91,287,6],[193,93,290,8],[193,103,290,9,"err2"],[193,107,290,8],[193,109,290,15,"result"],[193,115,290,8],[193,117,290,26],[194,0,291,10],[194,16,291,14,"err2"],[194,20,291,10],[194,22,291,20],[195,0,292,12,"callback"],[195,14,292,12,"callback"],[195,22,292,20],[195,23,292,21,"err2"],[195,27,292,20],[195,29,292,27],[195,33,292,20],[195,34,292,12],[196,0,293,11],[198,0,295,10,"callback"],[198,12,295,10,"callback"],[198,20,295,18],[198,21,295,19],[198,25,295,18],[198,27,295,25,"result"],[198,33,295,31],[198,34,295,32,"mod"],[198,37,295,25],[198,38,295,36],[198,44,295,40],[198,45,295,41,"N"],[198,46,295,25],[198,47,295,18],[198,48,295,10],[199,0,296,9],[199,11,287,6],[200,0,298,5],[200,9,281,4],[201,0,299,3],[204,75,305,55],[205,0,306,4],[205,15,306,11,"newPasswordRequiredChallengeUserAttributePrefix"],[205,62,306,4],[206,0,307,3],[209,29,314,9,"bigInt"],[209,35],[209,37,314,17],[210,0,315,4],[210,12,315,8,"hashStr"],[210,19,315,15],[210,22,315,18,"bigInt"],[210,28,315,24],[210,29,315,25,"toString"],[210,37,315,18],[210,38,315,34],[210,40,315,18],[210,41,315,4],[212,0,316,4],[212,12,316,8,"hashStr"],[212,19,316,15],[212,20,316,16,"length"],[212,26,316,8],[212,29,316,25],[212,30,316,8],[212,35,316,31],[212,36,316,4],[212,38,316,34],[213,0,317,6,"hashStr"],[213,10,317,6,"hashStr"],[213,17,317,13],[213,26,317,20,"hashStr"],[213,33,317,6],[214,0,318,5],[214,9,316,4],[214,15,318,11],[214,19,318,15],[214,36,318,32,"indexOf"],[214,43,318,15],[214,44,318,40,"hashStr"],[214,51,318,47],[214,52,318,48],[214,53,318,47],[214,54,318,15],[214,60,318,56],[214,61,318,57],[214,62,318,11],[214,64,318,60],[215,0,319,6,"hashStr"],[215,10,319,6,"hashStr"],[215,17,319,13],[215,27,319,21,"hashStr"],[215,34,319,6],[216,0,320,5],[218,0,321,4],[218,15,321,11,"hashStr"],[218,22,321,4],[219,0,322,3]]},"type":"js/module"}]}