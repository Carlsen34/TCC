{"dependencies":[{"name":"react-native","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[0], \"react-native\");\n\n  var isValidLatLng = function isValidLatLng(num, range) {\n    return typeof num === 'number' && num <= range && num >= -1 * range;\n  };\n\n  var isValidCoordinates = function isValidCoordinates(coords) {\n    return isValidLatLng(coords.latitude, 90) && isValidLatLng(coords.longitude, 180);\n  };\n\n  var getParams = function getParams() {\n    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    return params.map(function (_ref) {\n      var key = _ref.key,\n          value = _ref.value;\n      var encodedKey = encodeURIComponent(key);\n      var encodedValue = encodeURIComponent(value);\n      return encodedKey + \"=\" + encodedValue;\n    }).join('&');\n  };\n\n  var getWaypoints = function getWaypoints() {\n    var waypoints = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n    if (waypoints.length === 0) {\n      return '';\n    }\n\n    var params = waypoints.map(function (value) {\n      return value.latitude + \",\" + value.longitude;\n    }).join('|');\n    return \"&waypoints=\" + params;\n  };\n\n  function getDirections() {\n    var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        destination = _ref2.destination,\n        source = _ref2.source,\n        _ref2$params = _ref2.params,\n        params = _ref2$params === void 0 ? [] : _ref2$params,\n        _ref2$waypoints = _ref2.waypoints,\n        waypoints = _ref2$waypoints === void 0 ? [] : _ref2$waypoints;\n\n    if (destination && isValidCoordinates(destination)) {\n      params.push({\n        key: 'destination',\n        value: destination.latitude + \",\" + destination.longitude\n      });\n    }\n\n    if (source && isValidCoordinates(source)) {\n      params.push({\n        key: 'origin',\n        value: source.latitude + \",\" + source.longitude\n      });\n    }\n\n    if (source && isValidCoordinates(source)) {\n      params.push({\n        key: 'origin',\n        value: source.latitude + \",\" + source.longitude\n      });\n    }\n\n    var url = \"https://www.google.com/maps/dir/?api=1&\" + getParams(params) + getWaypoints(waypoints);\n    return _reactNative.Linking.canOpenURL(url).then(function (supported) {\n      if (!supported) {\n        return Promise.reject(new Error(\"Could not open the url: \" + url));\n      } else {\n        return _reactNative.Linking.openURL(url);\n      }\n    });\n  }\n\n  var _default = getDirections;\n  exports.default = _default;\n});","map":[[7,0,1,0],[9,0,3,0],[9,6,3,6,"isValidLatLng"],[9,19,3,19],[9,22,3,22],[9,31,3,6,"isValidLatLng"],[9,44,3,22],[9,45,3,23,"num"],[9,48,3,22],[9,50,3,28,"range"],[9,55,3,22],[10,0,3,22],[10,11,3,38],[10,18,3,45,"num"],[10,21,3,38],[10,26,3,53],[10,34,3,38],[10,38,3,65,"num"],[10,41,3,68],[10,45,3,72,"range"],[10,50,3,38],[10,54,3,81,"num"],[10,57,3,84],[10,61,3,88],[10,62,3,89],[10,63,3,88],[10,66,3,93,"range"],[10,71,3,22],[11,0,3,22],[11,3,3,0],[13,0,5,0],[13,6,5,6,"isValidCoordinates"],[13,24,5,24],[13,27,5,27],[13,36,5,6,"isValidCoordinates"],[13,54,5,27],[13,55,5,27,"coords"],[13,61,5,33],[14,0,5,33],[14,11,6,2,"isValidLatLng"],[14,24,6,15],[14,25,6,16,"coords"],[14,31,6,22],[14,32,6,23,"latitude"],[14,40,6,15],[14,42,6,33],[14,44,6,15],[14,45,6,2],[14,49,6,40,"isValidLatLng"],[14,62,6,53],[14,63,6,54,"coords"],[14,69,6,60],[14,70,6,61,"longitude"],[14,79,6,53],[14,81,6,72],[14,84,6,53],[14,85,5,33],[15,0,5,33],[15,3,5,0],[17,0,8,0],[17,6,8,6,"getParams"],[17,15,8,15],[17,18,8,18],[17,27,8,6,"getParams"],[17,36,8,18],[17,39,8,35],[18,0,8,35],[18,8,8,19,"params"],[18,14,8,35],[18,85,8,28],[18,87,8,35],[19,0,9,2],[19,11,9,9,"params"],[19,17,9,15],[19,18,10,5,"map"],[19,21,9,9],[19,22,10,9],[19,38,10,29],[20,0,10,29],[20,10,10,12,"key"],[20,13,10,29],[20,21,10,12,"key"],[20,24,10,29],[21,0,10,29],[21,10,10,17,"value"],[21,15,10,29],[21,23,10,17,"value"],[21,28,10,29],[22,0,11,6],[22,10,11,12,"encodedKey"],[22,20,11,22],[22,23,11,25,"encodeURIComponent"],[22,41,11,43],[22,42,11,44,"key"],[22,45,11,43],[22,46,11,6],[23,0,12,6],[23,10,12,12,"encodedValue"],[23,22,12,24],[23,25,12,27,"encodeURIComponent"],[23,43,12,45],[23,44,12,46,"value"],[23,49,12,45],[23,50,12,6],[24,0,13,6],[24,13,13,16,"encodedKey"],[24,23,13,6],[24,32,13,30,"encodedValue"],[24,44,13,6],[25,0,14,5],[25,5,9,9],[25,7,15,5,"join"],[25,11,9,9],[25,12,15,10],[25,15,9,9],[25,16,9,2],[26,0,16,1],[26,3,8,0],[28,0,18,0],[28,6,18,6,"getWaypoints"],[28,18,18,18],[28,21,18,21],[28,30,18,6,"getWaypoints"],[28,42,18,21],[28,45,18,41],[29,0,18,41],[29,8,18,22,"waypoints"],[29,17,18,41],[29,88,18,34],[29,90,18,41],[31,0,19,2],[31,8,19,6,"waypoints"],[31,17,19,15],[31,18,19,16,"length"],[31,24,19,6],[31,29,19,27],[31,30,19,2],[31,32,19,30],[32,0,20,4],[32,13,20,11],[32,15,20,4],[33,0,21,3],[35,0,23,2],[35,8,23,8,"params"],[35,14,23,14],[35,17,23,17,"waypoints"],[35,26,23,26],[35,27,24,5,"map"],[35,30,23,17],[35,31,24,9],[35,41,24,9,"value"],[35,46,24,14],[36,0,24,14],[36,13,24,21,"value"],[36,18,24,26],[36,19,24,27,"latitude"],[36,27,24,14],[36,36,24,39,"value"],[36,41,24,44],[36,42,24,45,"longitude"],[36,51,24,14],[37,0,24,14],[37,5,23,17],[37,7,25,5,"join"],[37,11,23,17],[37,12,25,10],[37,15,23,17],[37,16,23,2],[38,0,27,2],[38,27,27,23,"params"],[38,33,27,2],[39,0,28,1],[39,3,18,0],[41,0,30,0],[41,11,30,9,"getDirections"],[41,24,30,0],[41,27,30,83],[42,0,30,83],[42,84,30,79],[42,86,30,83],[43,0,30,83],[43,8,30,26,"destination"],[43,19,30,83],[43,28,30,26,"destination"],[43,39,30,83],[44,0,30,83],[44,8,30,39,"source"],[44,14,30,83],[44,23,30,39,"source"],[44,29,30,83],[45,0,30,83],[45,29,30,47,"params"],[45,35,30,83],[46,0,30,83],[46,8,30,47,"params"],[46,14,30,83],[46,43,30,56],[46,45,30,83],[47,0,30,83],[47,32,30,60,"waypoints"],[47,41,30,83],[48,0,30,83],[48,8,30,60,"waypoints"],[48,17,30,83],[48,49,30,72],[48,51,30,83],[50,0,31,2],[50,8,31,6,"destination"],[50,19,31,17],[50,23,31,21,"isValidCoordinates"],[50,41,31,39],[50,42,31,40,"destination"],[50,53,31,39],[50,54,31,2],[50,56,31,54],[51,0,32,4,"params"],[51,6,32,4,"params"],[51,12,32,10],[51,13,32,11,"push"],[51,17,32,4],[51,18,32,16],[52,0,33,6,"key"],[52,8,33,6,"key"],[52,11,33,9],[52,13,33,11],[52,26,32,16],[53,0,34,6,"value"],[53,8,34,6,"value"],[53,13,34,11],[53,15,34,16,"destination"],[53,26,34,27],[53,27,34,28,"latitude"],[53,35,34,11],[53,44,34,40,"destination"],[53,55,34,51],[53,56,34,52,"longitude"],[54,0,32,16],[54,7,32,4],[55,0,36,3],[57,0,37,2],[57,8,37,6,"source"],[57,14,37,12],[57,18,37,16,"isValidCoordinates"],[57,36,37,34],[57,37,37,35,"source"],[57,43,37,34],[57,44,37,2],[57,46,37,44],[58,0,38,4,"params"],[58,6,38,4,"params"],[58,12,38,10],[58,13,38,11,"push"],[58,17,38,4],[58,18,38,16],[59,0,39,6,"key"],[59,8,39,6,"key"],[59,11,39,9],[59,13,39,11],[59,21,38,16],[60,0,40,6,"value"],[60,8,40,6,"value"],[60,13,40,11],[60,15,40,16,"source"],[60,21,40,22],[60,22,40,23,"latitude"],[60,30,40,11],[60,39,40,35,"source"],[60,45,40,41],[60,46,40,42,"longitude"],[61,0,38,16],[61,7,38,4],[62,0,42,3],[64,0,43,2],[64,8,43,6,"source"],[64,14,43,12],[64,18,43,16,"isValidCoordinates"],[64,36,43,34],[64,37,43,35,"source"],[64,43,43,34],[64,44,43,2],[64,46,43,44],[65,0,44,4,"params"],[65,6,44,4,"params"],[65,12,44,10],[65,13,44,11,"push"],[65,17,44,4],[65,18,44,16],[66,0,45,6,"key"],[66,8,45,6,"key"],[66,11,45,9],[66,13,45,11],[66,21,44,16],[67,0,46,6,"value"],[67,8,46,6,"value"],[67,13,46,11],[67,15,46,16,"source"],[67,21,46,22],[67,22,46,23,"latitude"],[67,30,46,11],[67,39,46,35,"source"],[67,45,46,41],[67,46,46,42,"longitude"],[68,0,44,16],[68,7,44,4],[69,0,48,3],[71,0,50,2],[71,8,50,8,"url"],[71,11,50,11],[71,58,50,56,"getParams"],[71,67,50,65],[71,68,51,4,"params"],[71,74,50,65],[71,75,50,11],[71,78,52,6,"getWaypoints"],[71,90,52,18],[71,91,52,19,"waypoints"],[71,100,52,18],[71,101,50,2],[72,0,53,2],[72,11,53,9,"Linking"],[72,32,53,17,"canOpenURL"],[72,42,53,9],[72,43,53,28,"url"],[72,46,53,9],[72,48,53,33,"then"],[72,52,53,9],[72,53,53,38],[72,63,53,38,"supported"],[72,72,53,47],[72,74,53,51],[73,0,54,4],[73,10,54,8],[73,11,54,9,"supported"],[73,20,54,4],[73,22,54,20],[74,0,55,6],[74,15,55,13,"Promise"],[74,22,55,20],[74,23,55,21,"reject"],[74,29,55,13],[74,30,55,28],[74,34,55,32,"Error"],[74,39,55,28],[74,69,55,65,"url"],[74,72,55,28],[74,73,55,13],[74,74,55,6],[75,0,56,5],[75,7,54,4],[75,13,56,11],[76,0,57,6],[76,15,57,13,"Linking"],[76,36,57,21,"openURL"],[76,43,57,13],[76,44,57,29,"url"],[76,47,57,13],[76,48,57,6],[77,0,58,5],[78,0,59,3],[78,5,53,9],[78,6,53,2],[79,0,60,1],[81,17,62,15,"getDirections"],[81,30]]},"type":"js/module"}]}