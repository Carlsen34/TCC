{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false}},{"name":"@babel/runtime/regenerator","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"./../../node_modules/react-transform-hmr/lib/index.js","data":{"isAsync":false}},{"name":"../../aws-exports","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"react-native-maps","data":{"isAsync":false}},{"name":"react-native-maps-directions","data":{"isAsync":false}},{"name":"react-native-google-maps-directions","data":{"isAsync":false}},{"name":"react-native-geocoding","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/regenerator\"));\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/createClass\"));\n\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n\n  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/getPrototypeOf\"));\n\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"@babel/runtime/helpers/inherits\"));\n\n  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8], \"react\"));\n\n  var _index = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9], \"./../../node_modules/react-transform-hmr/lib/index.js\"));\n\n  var _awsExports = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10], \"../../aws-exports\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[11], \"react-native\");\n\n  var _reactNativeMaps = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12], \"react-native-maps\"));\n\n  var _reactNativeMapsDirections = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13], \"react-native-maps-directions\"));\n\n  var _reactNativeGoogleMapsDirections = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14], \"react-native-google-maps-directions\"));\n\n  var _reactNativeGeocoding = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15], \"react-native-geocoding\"));\n\n  var _temp,\n      _jsxFileName = \"/home/carlsen/TCC/Modules/RoutesModules/Routes.js\";\n\n  var _components = {\n    MapScreen: {\n      displayName: \"MapScreen\"\n    }\n  };\n\n  var _node_modulesReactTransformHmrLibIndexJs2 = (0, _index.default)({\n    filename: \"/home/carlsen/TCC/Modules/RoutesModules/Routes.js\",\n    components: _components,\n    locals: [module],\n    imports: [_react.default]\n  });\n\n  function _wrapComponent(id) {\n    return function (Component) {\n      return _node_modulesReactTransformHmrLibIndexJs2(Component, id);\n    };\n  }\n\n  var GOOGLE_MAPS_APIKEY = _awsExports.default.GOOGLEAPI;\n  var backgroundColor = '#007256';\n\n  var _Dimensions$get = _reactNative.Dimensions.get('window'),\n      height = _Dimensions$get.height,\n      width = _Dimensions$get.width;\n\n  var MapScreen = _wrapComponent(\"MapScreen\")((_temp = function (_Component) {\n    (0, _inherits2.default)(MapScreen, _Component);\n\n    function MapScreen() {\n      var _getPrototypeOf2;\n\n      var _this;\n\n      (0, _classCallCheck2.default)(this, MapScreen);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(MapScreen)).call.apply(_getPrototypeOf2, [this].concat(args)));\n      _this.state = {\n        origin: {\n          latitude: 42.3616132,\n          longitude: -71.0672576\n        },\n        destination: {\n          latitude: 42.3730591,\n          longitude: -71.033754\n        },\n        originText: '',\n        destinationText: ''\n      };\n\n      _this.getLocation = function () {\n        navigator.geolocation.getCurrentPosition(function (position) {\n          var newOrigin = {\n            latitude: position.coords.latitude,\n            longitude: position.coords.longitude\n          };\n          console.log('new origin');\n          console.log(newOrigin);\n\n          _this.setState({\n            origin: newOrigin\n          });\n        }, function (err) {\n          console.log('error');\n          console.log(err);\n        }, {\n          enableHighAccuracy: true,\n          timeout: 2000,\n          maximumAge: 1000\n        });\n      };\n\n      _this.handleButton = function () {\n        if (_this.state.originText != '') {\n          _reactNativeGeocoding.default.init(GOOGLE_MAPS_APIKEY);\n\n          _reactNativeGeocoding.default.from(_this.state.originText).then(function (json) {\n            var location = json.results[0].geometry.location;\n            console.log(location);\n\n            _this.setState({\n              origin: {\n                latitude: location.lat,\n                longitude: location.lng\n              }\n            });\n          }).catch(function (error) {\n            return console.warn(error);\n          });\n        } else {\n          alert(\"Digite a origem ! \");\n        }\n\n        if (_this.state.destinationText != '') {\n          _reactNativeGeocoding.default.init(GOOGLE_MAPS_APIKEY);\n\n          _reactNativeGeocoding.default.from(_this.state.destinationText).then(function (json) {\n            var location = json.results[0].geometry.location;\n            console.log(location);\n\n            _this.setState({\n              destination: {\n                latitude: location.lat,\n                longitude: location.lng\n              }\n            });\n          }).catch(function (error) {\n            return console.warn(error);\n          });\n        } else {\n          alert(\"Digite o destino ! \");\n        }\n      };\n\n      _this.handleGetGoogleMapDirections = function () {\n        var data = {\n          source: _this.state.origin,\n          destination: _this.state.destination,\n          params: [{\n            key: \"travelmode\",\n            value: \"driving\"\n          }]\n        };\n        (0, _reactNativeGoogleMapsDirections.default)(data);\n      };\n\n      return _this;\n    }\n\n    (0, _createClass2.default)(MapScreen, [{\n      key: \"requestLocationPermission\",\n      value: function requestLocationPermission() {\n        var granted;\n        return _regenerator.default.async(function requestLocationPermission$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return _regenerator.default.awrap(_reactNative.PermissionsAndroid.request(_reactNative.PermissionsAndroid.PERMISSIONS.ACCESS_FINE_LOCATION, {\n                  'title': 'App Location Permission',\n                  'message': 'Maps App needs access to your map ' + 'so you can be navigated.'\n                }));\n\n              case 3:\n                granted = _context.sent;\n\n                if (!(granted === _reactNative.PermissionsAndroid.RESULTS.GRANTED)) {\n                  _context.next = 9;\n                  break;\n                }\n\n                console.log(\"You can use the location\");\n                return _context.abrupt(\"return\", true);\n\n              case 9:\n                console.log(\"location permission denied\");\n                return _context.abrupt(\"return\", false);\n\n              case 11:\n                _context.next = 16;\n                break;\n\n              case 13:\n                _context.prev = 13;\n                _context.t0 = _context[\"catch\"](0);\n                console.warn(_context.t0);\n\n              case 16:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, null, [[0, 13]]);\n      }\n    }, {\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        var isGranted;\n        return _regenerator.default.async(function componentDidMount$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return _regenerator.default.awrap(this.requestLocationPermission());\n\n              case 2:\n                isGranted = _context2.sent;\n\n                if (isGranted) {\n                  this.getLocation();\n                }\n\n                this.getLocation();\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, null, this);\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var _this2 = this;\n\n        return _react.default.createElement(_reactNative.KeyboardAvoidingView, {\n          style: styles.container,\n          behavior: \"padding\",\n          enabled: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168\n          }\n        }, _react.default.createElement(_reactNativeMaps.default, {\n          ref: function ref(map) {\n            return _this2.mapView = map;\n          },\n          style: styles.map,\n          region: {\n            latitude: (this.state.origin.latitude + this.state.destination.latitude) / 2,\n            longitude: (this.state.origin.longitude + this.state.destination.longitude) / 2,\n            latitudeDelta: Math.abs(this.state.origin.latitude - this.state.destination.latitude) + Math.abs(this.state.origin.latitude - this.state.destination.latitude) * .1,\n            longitudeDelta: Math.abs(this.state.origin.longitude - this.state.destination.longitude) + Math.abs(this.state.origin.longitude - this.state.destination.longitude) * .1\n          },\n          loadingEnabled: true,\n          toolbarEnabled: true,\n          zoomControlEnabled: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170\n          }\n        }, _react.default.createElement(_reactNativeMaps.default.Marker, {\n          coordinate: this.state.destination,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188\n          }\n        }, _react.default.createElement(_reactNativeMaps.default.Callout, {\n          onPress: this.handleGetGoogleMapDirections,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 191\n          }\n        }, _react.default.createElement(_reactNative.Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 192\n          }\n        }, \"Press to Get Direction\"))), _react.default.createElement(_reactNativeMaps.default.Marker, {\n          coordinate: this.state.origin,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 196\n          }\n        }, _react.default.createElement(_reactNativeMaps.default.Callout, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 199\n          }\n        }, _react.default.createElement(_reactNative.Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 200\n          }\n        }, \"This is where you are\"))), _react.default.createElement(_reactNativeMapsDirections.default, {\n          origin: this.state.origin,\n          destination: this.state.destination,\n          apikey: GOOGLE_MAPS_APIKEY,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 204\n          }\n        })), _react.default.createElement(_reactNative.TextInput, {\n          style: styles.input,\n          onChangeText: function onChangeText(text) {\n            return _this2.setState({\n              originText: text\n            });\n          },\n          placeholder: \"Origem\",\n          value: this.state.originText,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 214\n          }\n        }), _react.default.createElement(_reactNative.TextInput, {\n          style: styles.input,\n          onChangeText: function onChangeText(text) {\n            return _this2.setState({\n              destinationText: text\n            });\n          },\n          placeholder: \"Destino\",\n          value: this.state.destinationText,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 221\n          }\n        }), _react.default.createElement(_reactNative.TouchableOpacity, {\n          style: styles.button,\n          onPress: this.handleButton,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 228\n          }\n        }, _react.default.createElement(_reactNative.Text, {\n          style: styles.buttonText,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 230\n          }\n        }, \"Buscar rota\")));\n      }\n    }]);\n    return MapScreen;\n  }(_react.Component), _temp));\n\n  var _default2 = MapScreen;\n  exports.default = _default2;\n\n  var styles = _reactNative.StyleSheet.create({\n    container: {\n      flex: 1,\n      justifyContent: 'flex-end',\n      alignItems: 'flex-end'\n    },\n    map: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0\n    },\n    button: {\n      width: width - 100,\n      height: 40,\n      backgroundColor: '#FFF',\n      alignItems: 'center',\n      justifyContent: 'center',\n      borderWidth: 1,\n      borderColor: '#000',\n      borderRadius: 7,\n      marginBottom: 15,\n      marginHorizontal: 20\n    },\n    buttonText: {\n      color: '#000',\n      fontWeight: 'bold'\n    },\n    inputContainer: {\n      width: '100%',\n      maxHeight: 200\n    },\n    input: {\n      width: width - 40,\n      maxHeight: 200,\n      backgroundColor: '#FFF',\n      marginBottom: 15,\n      marginHorizontal: 20\n    }\n  });\n});","map":[[23,0,2,0],[27,0,3,0],[29,0,4,0],[31,0,16,0],[33,0,17,0],[35,0,18,0],[37,0,21,0],[61,0,23,0],[61,6,23,6,"GOOGLE_MAPS_APIKEY"],[61,24,23,24],[61,27,23,27,"AWSConfig"],[61,47,23,37,"GOOGLEAPI"],[61,56,23,0],[62,0,25,0],[62,6,25,6,"backgroundColor"],[62,21,25,21],[62,24,25,24],[62,33,25,0],[64,24,27,26,"Dimensions"],[64,48,27,37,"get"],[64,51,27,26],[64,52,27,41],[64,60,27,26],[64,61],[65,6,27,8,"height"],[65,12],[65,31,27,8,"height"],[65,37],[66,6,27,16,"width"],[66,11],[66,30,27,16,"width"],[66,35],[83,12,31,4,"state"],[83,17],[83,20,31,12],[84,0,33,8,"origin"],[84,8,33,8,"origin"],[84,14,33,14],[84,16,33,16],[85,0,33,18,"latitude"],[85,10,33,18,"latitude"],[85,18,33,26],[85,20,33,28],[85,30,33,16],[86,0,33,40,"longitude"],[86,10,33,40,"longitude"],[86,19,33,49],[86,21,33,51],[86,22,33,52],[87,0,33,16],[87,9,31,12],[88,0,34,8,"destination"],[88,8,34,8,"destination"],[88,19,34,19],[88,21,34,21],[89,0,34,23,"latitude"],[89,10,34,23,"latitude"],[89,18,34,31],[89,20,34,33],[89,30,34,21],[90,0,34,45,"longitude"],[90,10,34,45,"longitude"],[90,19,34,54],[90,21,34,56],[90,22,34,57],[91,0,34,21],[91,9,31,12],[92,0,35,8,"originText"],[92,8,35,8,"originText"],[92,18,35,18],[92,20,35,20],[92,22,31,12],[93,0,36,8,"destinationText"],[93,8,36,8,"destinationText"],[93,23,36,23],[93,25,36,25],[94,0,31,12],[94,7],[96,12,67,6,"getLocation"],[96,23],[96,26,67,20],[96,38,67,26],[97,0,68,8,"navigator"],[97,8,68,8,"navigator"],[97,17,68,17],[97,18,68,18,"geolocation"],[97,29,68,8],[97,30,68,30,"getCurrentPosition"],[97,48,68,8],[97,49,68,49],[97,59,68,50,"position"],[97,67,68,49],[97,69,68,63],[98,0,69,12],[98,14,69,16,"newOrigin"],[98,23,69,25],[98,26,69,28],[99,0,70,16,"latitude"],[99,12,70,16,"latitude"],[99,20,70,24],[99,22,70,26,"position"],[99,30,70,34],[99,31,70,35,"coords"],[99,37,70,26],[99,38,70,42,"latitude"],[99,46,69,28],[100,0,71,16,"longitude"],[100,12,71,16,"longitude"],[100,21,71,25],[100,23,71,27,"position"],[100,31,71,35],[100,32,71,36,"coords"],[100,38,71,27],[100,39,71,43,"longitude"],[101,0,69,28],[101,11,69,12],[102,0,74,12,"console"],[102,10,74,12,"console"],[102,17,74,19],[102,18,74,20,"log"],[102,21,74,12],[102,22,74,24],[102,34,74,12],[103,0,75,12,"console"],[103,10,75,12,"console"],[103,17,75,19],[103,18,75,20,"log"],[103,21,75,12],[103,22,75,24,"newOrigin"],[103,31,75,12],[105,0,77,12],[105,16,77,17,"setState"],[105,24,77,12],[105,25,77,26],[106,0,78,16,"origin"],[106,12,78,16,"origin"],[106,18,78,22],[106,20,78,24,"newOrigin"],[107,0,77,26],[107,11,77,12],[108,0,81,9],[108,9,68,8],[108,11,81,11],[108,21,81,12,"err"],[108,24,81,11],[108,26,81,20],[109,0,82,12,"console"],[109,10,82,12,"console"],[109,17,82,19],[109,18,82,20,"log"],[109,21,82,12],[109,22,82,24],[109,29,82,12],[110,0,83,12,"console"],[110,10,83,12,"console"],[110,17,83,19],[110,18,83,20,"log"],[110,21,83,12],[110,22,83,24,"err"],[110,25,83,12],[111,0,85,9],[111,9,68,8],[111,11,85,11],[112,0,85,12,"enableHighAccuracy"],[112,10,85,12,"enableHighAccuracy"],[112,28,85,30],[112,30,85,32],[112,34,85,11],[113,0,85,38,"timeout"],[113,10,85,38,"timeout"],[113,17,85,45],[113,19,85,47],[113,23,85,11],[114,0,85,53,"maximumAge"],[114,10,85,53,"maximumAge"],[114,20,85,63],[114,22,85,65],[115,0,85,11],[115,9,68,8],[116,0,87,7],[116,7],[118,12,100,6,"handleButton"],[118,24],[118,27,100,21],[118,39,100,27],[119,0,102,8],[119,12,102,11],[119,18,102,16,"state"],[119,23,102,11],[119,24,102,22,"originText"],[119,34,102,11],[119,38,102,36],[119,40,102,8],[119,42,102,40],[120,0,104,12,"Geocoder"],[120,40,104,21,"init"],[120,44,104,12],[120,45,104,26,"GOOGLE_MAPS_APIKEY"],[120,63,104,12],[122,0,106,12,"Geocoder"],[122,40,106,21,"from"],[122,44,106,12],[122,45,106,26],[122,51,106,31,"state"],[122,56,106,26],[122,57,106,37,"originText"],[122,67,106,12],[122,69,107,17,"then"],[122,73,106,12],[122,74,107,22],[122,84,107,22,"json"],[122,88,107,26],[122,90,107,30],[123,0,108,20],[123,16,108,24,"location"],[123,24,108,32],[123,27,108,35,"json"],[123,31,108,39],[123,32,108,40,"results"],[123,39,108,35],[123,40,108,48],[123,41,108,35],[123,43,108,51,"geometry"],[123,51,108,35],[123,52,108,60,"location"],[123,60,108,20],[124,0,109,20,"console"],[124,12,109,20,"console"],[124,19,109,27],[124,20,109,28,"log"],[124,23,109,20],[124,24,109,32,"location"],[124,32,109,20],[126,0,110,20],[126,18,110,25,"setState"],[126,26,110,20],[126,27,110,34],[127,0,110,36,"origin"],[127,14,110,36,"origin"],[127,20,110,42],[127,22,110,44],[128,0,110,46,"latitude"],[128,16,110,46,"latitude"],[128,24,110,54],[128,26,110,56,"location"],[128,34,110,64],[128,35,110,65,"lat"],[128,38,110,44],[129,0,110,70,"longitude"],[129,16,110,70,"longitude"],[129,25,110,79],[129,27,110,81,"location"],[129,35,110,89],[129,36,110,90,"lng"],[130,0,110,44],[131,0,110,34],[131,13,110,20],[132,0,112,13],[132,11,106,12],[132,13,113,13,"catch"],[132,18,106,12],[132,19,113,19],[132,29,113,19,"error"],[132,34,113,24],[133,0,113,24],[133,19,113,28,"console"],[133,26,113,35],[133,27,113,36,"warn"],[133,31,113,28],[133,32,113,41,"error"],[133,37,113,28],[133,38,113,24],[134,0,113,24],[134,11,106,12],[135,0,115,9],[135,9,102,8],[135,15,117,13],[136,0,119,12,"alert"],[136,10,119,12,"alert"],[136,15,119,17],[136,16,119,18],[136,36,119,17],[136,37,119,12],[137,0,121,9],[139,0,123,8],[139,12,123,11],[139,18,123,16,"state"],[139,23,123,11],[139,24,123,22,"destinationText"],[139,39,123,11],[139,43,123,41],[139,45,123,8],[139,47,123,45],[140,0,125,12,"Geocoder"],[140,40,125,21,"init"],[140,44,125,12],[140,45,125,26,"GOOGLE_MAPS_APIKEY"],[140,63,125,12],[142,0,127,12,"Geocoder"],[142,40,127,21,"from"],[142,44,127,12],[142,45,127,26],[142,51,127,31,"state"],[142,56,127,26],[142,57,127,37,"destinationText"],[142,72,127,12],[142,74,128,13,"then"],[142,78,127,12],[142,79,128,18],[142,89,128,18,"json"],[142,93,128,22],[142,95,128,26],[143,0,129,16],[143,16,129,20,"location"],[143,24,129,28],[143,27,129,31,"json"],[143,31,129,35],[143,32,129,36,"results"],[143,39,129,31],[143,40,129,44],[143,41,129,31],[143,43,129,47,"geometry"],[143,51,129,31],[143,52,129,56,"location"],[143,60,129,16],[144,0,130,16,"console"],[144,12,130,16,"console"],[144,19,130,23],[144,20,130,24,"log"],[144,23,130,16],[144,24,130,28,"location"],[144,32,130,16],[146,0,131,16],[146,18,131,21,"setState"],[146,26,131,16],[146,27,131,30],[147,0,131,32,"destination"],[147,14,131,32,"destination"],[147,25,131,43],[147,27,131,45],[148,0,131,47,"latitude"],[148,16,131,47,"latitude"],[148,24,131,55],[148,26,131,57,"location"],[148,34,131,65],[148,35,131,66,"lat"],[148,38,131,45],[149,0,131,71,"longitude"],[149,16,131,71,"longitude"],[149,25,131,80],[149,27,131,82,"location"],[149,35,131,90],[149,36,131,91,"lng"],[150,0,131,45],[151,0,131,30],[151,13,131,16],[152,0,133,13],[152,11,127,12],[152,13,134,13,"catch"],[152,18,127,12],[152,19,134,19],[152,29,134,19,"error"],[152,34,134,24],[153,0,134,24],[153,19,134,28,"console"],[153,26,134,35],[153,27,134,36,"warn"],[153,31,134,28],[153,32,134,41,"error"],[153,37,134,28],[153,38,134,24],[154,0,134,24],[154,11,127,12],[155,0,135,9],[155,9,123,8],[155,15,137,13],[156,0,139,12,"alert"],[156,10,139,12,"alert"],[156,15,139,17],[156,16,139,18],[156,37,139,17],[156,38,139,12],[157,0,141,9],[158,0,143,7],[158,7],[160,12,145,6,"handleGetGoogleMapDirections"],[160,40],[160,43,145,37],[160,55,145,43],[161,0,147,8],[161,12,147,14,"data"],[161,16,147,18],[161,19,147,21],[162,0,149,12,"source"],[162,10,149,12,"source"],[162,16,149,18],[162,18,149,20],[162,24,149,25,"state"],[162,29,149,20],[162,30,149,31,"origin"],[162,36,147,21],[163,0,150,12,"destination"],[163,10,150,12,"destination"],[163,21,150,23],[163,23,150,25],[163,29,150,30,"state"],[163,34,150,25],[163,35,150,36,"destination"],[163,46,147,21],[164,0,151,12,"params"],[164,10,151,12,"params"],[164,16,151,18],[164,18,151,20],[164,19,152,16],[165,0,153,18,"key"],[165,12,153,18,"key"],[165,15,153,21],[165,17,153,23],[165,29,152,16],[166,0,154,18,"value"],[166,12,154,18,"value"],[166,17,154,23],[166,19,154,25],[167,0,152,16],[167,11,151,20],[168,0,147,21],[168,9,147,8],[169,0,160,8],[169,54,160,22,"data"],[169,58,160,8],[170,0,162,7],[170,7],[185,50,43,34,"PermissionsAndroid"],[185,82,43,53,"request"],[185,89,43,34],[185,90,44,16,"PermissionsAndroid"],[185,122,44,35,"PERMISSIONS"],[185,133,44,16],[185,134,44,47,"ACCESS_FINE_LOCATION"],[185,154,43,34],[185,156,45,16],[186,0,46,20],[186,27,46,29],[186,52,45,16],[187,0,47,20],[187,29,47,31],[187,68,48,24],[188,0,45,16],[188,17,43,34],[188,18],[191,0,43,18,"granted"],[191,16,43,18,"granted"],[191,23],[193,22,52,16,"granted"],[193,29,52,23],[193,34,52,28,"PermissionsAndroid"],[193,66,52,47,"RESULTS"],[193,73,52,28],[193,74,52,55,"GRANTED"],[193,81],[198,0,53,16,"console"],[198,16,53,16,"console"],[198,23,53,23],[198,24,53,24,"log"],[198,27,53,16],[198,28,53,28],[198,54,53,16],[199,49,54,23],[199,53],[202,0,57,16,"console"],[202,16,57,16,"console"],[202,23,57,23],[202,24,57,24,"log"],[202,27,57,16],[202,28,57,28],[202,56,57,16],[203,49,58,23],[203,54],[212,0,62,12,"console"],[212,16,62,12,"console"],[212,23,62,19],[212,24,62,20,"warn"],[212,28,62,12],[230,50,90,30],[230,55,90,35,"requestLocationPermission"],[230,80,90,30],[230,82],[233,0,90,12,"isGranted"],[233,16,90,12,"isGranted"],[233,25],[235,0,92,8],[235,20,92,12,"isGranted"],[235,29,92,8],[235,31,92,23],[236,0,93,12],[236,23,93,17,"getLocation"],[236,34,93,12],[237,0,94,9],[239,0,96,8],[239,21,96,13,"getLocation"],[239,32,96,8],[250,31,164,13],[251,0,164,13],[253,0,166,8],[253,15,168,12],[253,44,168,13],[253,77,168,12],[254,0,168,34],[254,10,168,34],[254,15,168,39],[254,17,168,41,"styles"],[254,23,168,47],[254,24,168,48,"container"],[254,33,168,12],[255,0,168,59],[255,10,168,59],[255,18,168,67],[255,20,168,68],[255,29,168,12],[256,0,168,78],[256,10,168,78],[256,17,168,85],[256,23,168,12],[257,0,168,12],[258,0,168,12],[259,0,168,12],[260,0,168,12],[261,0,168,12],[261,11,170,12],[261,40,170,13],[261,64,170,12],[262,0,172,14],[262,10,172,14],[262,13,172,17],[262,15,172,19],[262,28,172,19,"map"],[262,31,172,22],[263,0,172,22],[263,19,172,26],[263,25,172,30],[263,26,172,31,"mapView"],[263,33,172,26],[263,36,172,41,"map"],[263,39,172,22],[264,0,172,22],[264,11,170,12],[265,0,173,14],[265,10,173,14],[265,15,173,19],[265,17,173,21,"styles"],[265,23,173,27],[265,24,173,28,"map"],[265,27,170,12],[266,0,175,14],[266,10,175,14],[266,16,175,20],[266,18,175,22],[267,0,176,16,"latitude"],[267,12,176,16,"latitude"],[267,20,176,24],[267,22,176,26],[267,23,176,27],[267,28,176,32,"state"],[267,33,176,27],[267,34,176,38,"origin"],[267,40,176,27],[267,41,176,45,"latitude"],[267,49,176,27],[267,52,176,56],[267,57,176,61,"state"],[267,62,176,56],[267,63,176,67,"destination"],[267,74,176,56],[267,75,176,79,"latitude"],[267,83,176,26],[267,87,176,91],[267,88,175,22],[268,0,177,16,"longitude"],[268,12,177,16,"longitude"],[268,21,177,25],[268,23,177,27],[268,24,177,28],[268,29,177,33,"state"],[268,34,177,28],[268,35,177,39,"origin"],[268,41,177,28],[268,42,177,46,"longitude"],[268,51,177,28],[268,54,177,58],[268,59,177,63,"state"],[268,64,177,58],[268,65,177,69,"destination"],[268,76,177,58],[268,77,177,81,"longitude"],[268,86,177,27],[268,90,177,94],[268,91,175,22],[269,0,178,16,"latitudeDelta"],[269,12,178,16,"latitudeDelta"],[269,25,178,29],[269,27,178,31,"Math"],[269,31,178,35],[269,32,178,36,"abs"],[269,35,178,31],[269,36,178,40],[269,41,178,45,"state"],[269,46,178,40],[269,47,178,51,"origin"],[269,53,178,40],[269,54,178,58,"latitude"],[269,62,178,40],[269,65,178,69],[269,70,178,74,"state"],[269,75,178,69],[269,76,178,80,"destination"],[269,87,178,69],[269,88,178,92,"latitude"],[269,96,178,31],[269,100,178,104,"Math"],[269,104,178,108],[269,105,178,109,"abs"],[269,108,178,104],[269,109,178,113],[269,114,178,118,"state"],[269,119,178,113],[269,120,178,124,"origin"],[269,126,178,113],[269,127,178,131,"latitude"],[269,135,178,113],[269,138,178,142],[269,143,178,147,"state"],[269,148,178,142],[269,149,178,153,"destination"],[269,160,178,142],[269,161,178,165,"latitude"],[269,169,178,104],[269,173,178,177],[269,175,175,22],[270,0,179,16,"longitudeDelta"],[270,12,179,16,"longitudeDelta"],[270,26,179,30],[270,28,179,32,"Math"],[270,32,179,36],[270,33,179,37,"abs"],[270,36,179,32],[270,37,179,41],[270,42,179,46,"state"],[270,47,179,41],[270,48,179,52,"origin"],[270,54,179,41],[270,55,179,59,"longitude"],[270,64,179,41],[270,67,179,71],[270,72,179,76,"state"],[270,77,179,71],[270,78,179,82,"destination"],[270,89,179,71],[270,90,179,94,"longitude"],[270,99,179,32],[270,103,179,107,"Math"],[270,107,179,111],[270,108,179,112,"abs"],[270,111,179,107],[270,112,179,116],[270,117,179,121,"state"],[270,122,179,116],[270,123,179,127,"origin"],[270,129,179,116],[270,130,179,134,"longitude"],[270,139,179,116],[270,142,179,146],[270,147,179,151,"state"],[270,152,179,146],[270,153,179,157,"destination"],[270,164,179,146],[270,165,179,169,"longitude"],[270,174,179,107],[270,178,179,182],[271,0,175,22],[271,11,170,12],[272,0,182,14],[272,10,182,14],[272,24,182,28],[272,26,182,30],[272,30,170,12],[273,0,183,14],[273,10,183,14],[273,24,183,28],[273,26,183,30],[273,30,170,12],[274,0,184,14],[274,10,184,14],[274,28,184,32],[274,30,184,34],[274,34,170,12],[275,0,170,12],[276,0,170,12],[277,0,170,12],[278,0,170,12],[279,0,170,12],[279,11,188,12],[279,40,188,13],[279,64,188,12],[279,65,188,21],[279,71,188,12],[280,0,189,14],[280,10,189,14],[280,20,189,24],[280,22,189,26],[280,27,189,31,"state"],[280,32,189,26],[280,33,189,37,"destination"],[280,44,188,12],[281,0,188,12],[282,0,188,12],[283,0,188,12],[284,0,188,12],[285,0,188,12],[285,11,191,14],[285,40,191,15],[285,64,191,14],[285,65,191,23],[285,72,191,14],[286,0,191,31],[286,10,191,31],[286,17,191,38],[286,19,191,40],[286,24,191,45,"handleGetGoogleMapDirections"],[286,52,191,14],[287,0,191,14],[288,0,191,14],[289,0,191,14],[290,0,191,14],[291,0,191,14],[291,11,192,16],[291,40,192,17],[291,57,192,16],[292,0,192,16],[293,0,192,16],[294,0,192,16],[295,0,192,16],[296,0,192,16],[296,36,191,14],[296,37,188,12],[296,38,170,12],[296,40,196,12],[296,69,196,13],[296,93,196,12],[296,94,196,21],[296,100,196,12],[297,0,197,14],[297,10,197,14],[297,20,197,24],[297,22,197,26],[297,27,197,31,"state"],[297,32,197,26],[297,33,197,37,"origin"],[297,39,196,12],[298,0,196,12],[299,0,196,12],[300,0,196,12],[301,0,196,12],[302,0,196,12],[302,11,199,12],[302,40,199,13],[302,64,199,12],[302,65,199,21],[302,72,199,12],[303,0,199,12],[304,0,199,12],[305,0,199,12],[306,0,199,12],[307,0,199,12],[307,11,200,16],[307,40,200,17],[307,57,200,16],[308,0,200,16],[309,0,200,16],[310,0,200,16],[311,0,200,16],[312,0,200,16],[312,35,199,12],[312,36,196,12],[312,37,170,12],[312,39,204,12],[312,68,204,13],[312,102,204,12],[313,0,205,14],[313,10,205,14],[313,16,205,20],[313,18,205,22],[313,23,205,27,"state"],[313,28,205,22],[313,29,205,33,"origin"],[313,35,204,12],[314,0,206,14],[314,10,206,14],[314,21,206,25],[314,23,206,27],[314,28,206,32,"state"],[314,33,206,27],[314,34,206,38,"destination"],[314,45,204,12],[315,0,207,14],[315,10,207,14],[315,16,207,20],[315,18,207,22,"GOOGLE_MAPS_APIKEY"],[315,36,204,12],[316,0,204,12],[317,0,204,12],[318,0,204,12],[319,0,204,12],[320,0,204,12],[320,10,170,12],[320,11,168,12],[320,13,214,16],[320,42,214,17],[320,64,214,16],[321,0,215,20],[321,10,215,20],[321,15,215,25],[321,17,215,27,"styles"],[321,23,215,33],[321,24,215,34,"input"],[321,29,214,16],[322,0,216,20],[322,10,216,20],[322,22,216,32],[322,24,216,34],[322,46,216,35,"text"],[322,50,216,34],[323,0,216,34],[323,19,216,44],[323,25,216,48],[323,26,216,49,"setState"],[323,34,216,44],[323,35,216,58],[324,0,216,60,"originText"],[324,14,216,60,"originText"],[324,24,216,70],[324,26,216,72,"text"],[325,0,216,58],[325,13,216,44],[325,14,216,34],[326,0,216,34],[326,11,214,16],[327,0,217,20],[327,10,217,20],[327,21,217,31],[327,23,217,32],[327,31,214,16],[328,0,218,20],[328,10,218,20],[328,15,218,25],[328,17,218,27],[328,22,218,32,"state"],[328,27,218,27],[328,28,218,38,"originText"],[328,38,214,16],[329,0,214,16],[330,0,214,16],[331,0,214,16],[332,0,214,16],[333,0,214,16],[333,10,168,12],[333,12,221,17],[333,41,221,18],[333,63,221,17],[334,0,222,20],[334,10,222,20],[334,15,222,25],[334,17,222,27,"styles"],[334,23,222,33],[334,24,222,34,"input"],[334,29,221,17],[335,0,223,20],[335,10,223,20],[335,22,223,32],[335,24,223,34],[335,46,223,35,"text"],[335,50,223,34],[336,0,223,34],[336,19,223,44],[336,25,223,48],[336,26,223,49,"setState"],[336,34,223,44],[336,35,223,58],[337,0,223,60,"destinationText"],[337,14,223,60,"destinationText"],[337,29,223,75],[337,31,223,77,"text"],[338,0,223,58],[338,13,223,44],[338,14,223,34],[339,0,223,34],[339,11,221,17],[340,0,224,20],[340,10,224,20],[340,21,224,31],[340,23,224,32],[340,32,221,17],[341,0,225,20],[341,10,225,20],[341,15,225,25],[341,17,225,27],[341,22,225,32,"state"],[341,27,225,27],[341,28,225,38,"destinationText"],[341,43,221,17],[342,0,221,17],[343,0,221,17],[344,0,221,17],[345,0,221,17],[346,0,221,17],[346,10,168,12],[346,12,228,16],[346,41,228,17],[346,70,228,16],[347,0,228,34],[347,10,228,34],[347,15,228,39],[347,17,228,41,"styles"],[347,23,228,47],[347,24,228,48,"button"],[347,30,228,16],[348,0,228,56],[348,10,228,56],[348,17,228,63],[348,19,228,65],[348,24,228,70,"handleButton"],[348,36,228,16],[349,0,228,16],[350,0,228,16],[351,0,228,16],[352,0,228,16],[353,0,228,16],[353,11,230,20],[353,40,230,21],[353,57,230,20],[354,0,230,26],[354,10,230,26],[354,15,230,31],[354,17,230,33,"styles"],[354,23,230,39],[354,24,230,40,"buttonText"],[354,34,230,20],[355,0,230,20],[356,0,230,20],[357,0,230,20],[358,0,230,20],[359,0,230,20],[359,25,228,16],[359,26,168,12],[359,27,166,8],[360,0,238,5],[363,4,29,39,"Component"],[363,20],[368,0,242,0],[368,6,242,6,"styles"],[368,12,242,12],[368,15,242,15,"StyleSheet"],[368,39,242,26,"create"],[368,45,242,15],[368,46,242,33],[369,0,244,4,"container"],[369,4,244,4,"container"],[369,13,244,13],[369,15,244,15],[370,0,246,8,"flex"],[370,6,246,8,"flex"],[370,10,246,12],[370,12,246,14],[370,13,244,15],[371,0,247,8,"justifyContent"],[371,6,247,8,"justifyContent"],[371,20,247,22],[371,22,247,24],[371,32,244,15],[372,0,248,8,"alignItems"],[372,6,248,8,"alignItems"],[372,16,248,18],[372,18,248,20],[373,0,244,15],[373,5,242,33],[374,0,252,6,"map"],[374,4,252,6,"map"],[374,7,252,9],[374,9,252,11],[375,0,254,8,"position"],[375,6,254,8,"position"],[375,14,254,16],[375,16,254,18],[375,26,252,11],[376,0,255,8,"top"],[376,6,255,8,"top"],[376,9,255,11],[376,11,255,13],[376,12,252,11],[377,0,256,8,"left"],[377,6,256,8,"left"],[377,10,256,12],[377,12,256,14],[377,13,252,11],[378,0,257,8,"right"],[378,6,257,8,"right"],[378,11,257,13],[378,13,257,15],[378,14,252,11],[379,0,258,8,"bottom"],[379,6,258,8,"bottom"],[379,12,258,14],[379,14,258,16],[380,0,252,11],[380,5,242,33],[381,0,262,6,"button"],[381,4,262,6,"button"],[381,10,262,12],[381,12,262,14],[382,0,264,8,"width"],[382,6,264,8,"width"],[382,11,264,13],[382,13,264,15,"width"],[382,18,264,20],[382,21,264,23],[382,24,262,14],[383,0,265,8,"height"],[383,6,265,8,"height"],[383,12,265,14],[383,14,265,16],[383,16,262,14],[384,0,266,8,"backgroundColor"],[384,6,266,8,"backgroundColor"],[384,21,266,23],[384,23,266,25],[384,29,262,14],[385,0,267,8,"alignItems"],[385,6,267,8,"alignItems"],[385,16,267,18],[385,18,267,20],[385,26,262,14],[386,0,268,8,"justifyContent"],[386,6,268,8,"justifyContent"],[386,20,268,22],[386,22,268,24],[386,30,262,14],[387,0,269,8,"borderWidth"],[387,6,269,8,"borderWidth"],[387,17,269,19],[387,19,269,21],[387,20,262,14],[388,0,270,8,"borderColor"],[388,6,270,8,"borderColor"],[388,17,270,19],[388,19,270,21],[388,25,262,14],[389,0,271,8,"borderRadius"],[389,6,271,8,"borderRadius"],[389,18,271,20],[389,20,271,22],[389,21,262,14],[390,0,272,8,"marginBottom"],[390,6,272,8,"marginBottom"],[390,18,272,20],[390,20,272,22],[390,22,262,14],[391,0,273,8,"marginHorizontal"],[391,6,273,8,"marginHorizontal"],[391,22,273,24],[391,24,273,26],[392,0,262,14],[392,5,242,33],[393,0,277,6,"buttonText"],[393,4,277,6,"buttonText"],[393,14,277,16],[393,16,277,18],[394,0,279,8,"color"],[394,6,279,8,"color"],[394,11,279,13],[394,13,279,15],[394,19,277,18],[395,0,280,8,"fontWeight"],[395,6,280,8,"fontWeight"],[395,16,280,18],[395,18,280,20],[396,0,277,18],[396,5,242,33],[397,0,284,6,"inputContainer"],[397,4,284,6,"inputContainer"],[397,18,284,20],[397,20,284,22],[398,0,286,8,"width"],[398,6,286,8,"width"],[398,11,286,13],[398,13,286,15],[398,19,284,22],[399,0,287,8,"maxHeight"],[399,6,287,8,"maxHeight"],[399,15,287,17],[399,17,287,19],[400,0,284,22],[400,5,242,33],[401,0,291,6,"input"],[401,4,291,6,"input"],[401,9,291,11],[401,11,291,13],[402,0,293,8,"width"],[402,6,293,8,"width"],[402,11,293,13],[402,13,293,15,"width"],[402,18,293,20],[402,21,293,23],[402,23,291,13],[403,0,294,8,"maxHeight"],[403,6,294,8,"maxHeight"],[403,15,294,17],[403,17,294,19],[403,20,291,13],[404,0,295,8,"backgroundColor"],[404,6,295,8,"backgroundColor"],[404,21,295,23],[404,23,295,25],[404,29,291,13],[405,0,296,8,"marginBottom"],[405,6,296,8,"marginBottom"],[405,18,296,20],[405,20,296,22],[405,22,291,13],[406,0,297,8,"marginHorizontal"],[406,6,297,8,"marginHorizontal"],[406,22,297,24],[406,24,297,26],[407,0,291,13],[408,0,242,33],[408,3,242,15],[408,4,242,0]]},"type":"js/module"}]}