{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false}},{"name":"@babel/runtime/regenerator","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"./../../node_modules/react-transform-hmr/lib/index.js","data":{"isAsync":false}},{"name":"../../aws-exports","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"react-native-dialog-input","data":{"isAsync":false}},{"name":"react-native-maps","data":{"isAsync":false}},{"name":"react-native-maps-directions","data":{"isAsync":false}},{"name":"react-native-google-maps-directions","data":{"isAsync":false}},{"name":"aws-amplify","data":{"isAsync":false}},{"name":"react-native-geocoding","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/regenerator\"));\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/createClass\"));\n\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n\n  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/getPrototypeOf\"));\n\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"@babel/runtime/helpers/inherits\"));\n\n  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8], \"react\"));\n\n  var _index = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9], \"./../../node_modules/react-transform-hmr/lib/index.js\"));\n\n  var _awsExports = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10], \"../../aws-exports\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[11], \"react-native\");\n\n  var _reactNativeDialogInput = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12], \"react-native-dialog-input\"));\n\n  var _reactNativeMaps = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13], \"react-native-maps\"));\n\n  var _reactNativeMapsDirections = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14], \"react-native-maps-directions\"));\n\n  var _reactNativeGoogleMapsDirections = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15], \"react-native-google-maps-directions\"));\n\n  var _awsAmplify = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[16], \"aws-amplify\"));\n\n  var _reactNativeGeocoding = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17], \"react-native-geocoding\"));\n\n  var _temp,\n      _jsxFileName = \"/home/carlsen/Desktop/TCC/Modules/RoutesModules/Routes.js\";\n\n  var _components = {\n    MapScreen: {\n      displayName: \"MapScreen\"\n    }\n  };\n\n  var _node_modulesReactTransformHmrLibIndexJs2 = (0, _index.default)({\n    filename: \"/home/carlsen/Desktop/TCC/Modules/RoutesModules/Routes.js\",\n    components: _components,\n    locals: [module],\n    imports: [_react.default]\n  });\n\n  function _wrapComponent(id) {\n    return function (Component) {\n      return _node_modulesReactTransformHmrLibIndexJs2(Component, id);\n    };\n  }\n\n  var GOOGLE_MAPS_APIKEY = _awsExports.default.GOOGLEAPI;\n  var routeAPI = 'http://vrp-dev.us-east-1.elasticbeanstalk.com/api/v1/vrp/route=';\n  var arr = [];\n  var backgroundColor = '#007256';\n\n  var _Dimensions$get = _reactNative.Dimensions.get('window'),\n      height = _Dimensions$get.height,\n      width = _Dimensions$get.width;\n\n  var MapScreen = _wrapComponent(\"MapScreen\")((_temp = function (_Component) {\n    (0, _inherits2.default)(MapScreen, _Component);\n\n    function MapScreen() {\n      var _getPrototypeOf2;\n\n      var _this;\n\n      (0, _classCallCheck2.default)(this, MapScreen);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(MapScreen)).call.apply(_getPrototypeOf2, [this].concat(args)));\n      _this.state = {\n        isDialogVisible: false,\n        origin: {\n          latitude: 42.3616132,\n          longitude: -71.0672576\n        },\n        destination: {\n          latitude: 42.3730591,\n          longitude: -71.033754\n        },\n        waypoints: {\n          latitude: 0,\n          longitude: 0\n        },\n        originText: '',\n        destinationText: '',\n        waypointsText: '',\n        RouteName: '',\n        hasRoute: false,\n        arrWaypoints: []\n      };\n\n      _this.getLocation = function () {\n        navigator.geolocation.getCurrentPosition(function (position) {\n          var newOrigin = {\n            latitude: position.coords.latitude,\n            longitude: position.coords.longitude\n          };\n          console.log('new origin');\n          console.log(newOrigin);\n\n          _this.setState({\n            origin: newOrigin\n          });\n        }, function (err) {\n          console.log('error');\n          console.log(err);\n        }, {\n          enableHighAccuracy: true,\n          timeout: 2000,\n          maximumAge: 1000\n        });\n      };\n\n      _this.saveButton = function () {\n        _this.setState({\n          isDialogVisible: true\n        });\n      };\n\n      _this.handleButton = function () {\n        var auxArray = [];\n        var fullAPI = routeAPI + \"Campinas|Rio+Janeiro|Sao+Paulo\" + '/' + 1;\n        fetch(fullAPI).then(function (response) {\n          return response.json();\n        }).then(function (data) {\n          data.Route[0].forEach(function (item, indice, array) {\n            var str = item.replace(\"+\", \" \");\n\n            if (indice == 0) {\n              this.setState({\n                originText: str\n              });\n              this.setState({\n                destinationText: str\n              });\n            } else {\n              auxArray.push(str);\n            }\n          });\n        });\n\n        if (_this.state.originText != '') {\n          _reactNativeGeocoding.default.init(GOOGLE_MAPS_APIKEY);\n\n          _reactNativeGeocoding.default.from(_this.state.originText).then(function (json) {\n            var location = json.results[0].geometry.location;\n            console.log(location);\n\n            _this.setState({\n              origin: {\n                latitude: location.lat,\n                longitude: location.lng\n              }\n            });\n          }).catch(function (error) {\n            return console.warn(error);\n          });\n\n          auxArray.forEach(function (item, indice, array) {\n            var _this2 = this;\n\n            console.log(\"Array \" + item);\n\n            _reactNativeGeocoding.default.init(GOOGLE_MAPS_APIKEY);\n\n            _reactNativeGeocoding.default.from(item).then(function (json) {\n              var location = json.results[0].geometry.location;\n              console.log(location);\n\n              _this2.setState({\n                waypoints: {\n                  latitude: location.lat,\n                  longitude: location.lng\n                }\n              });\n\n              arr.push(_this2.state.waypoints);\n\n              _this2.setState({\n                arrWaypoints: arr\n              });\n            }).catch(function (error) {\n              return console.warn(error);\n            });\n          });\n        } else {\n          alert(\"Digite a origem ! \");\n        }\n\n        if (_this.state.destinationText != '') {\n          _reactNativeGeocoding.default.init(GOOGLE_MAPS_APIKEY);\n\n          _reactNativeGeocoding.default.from(_this.state.destinationText).then(function (json) {\n            var location = json.results[0].geometry.location;\n            console.log(location);\n\n            _this.setState({\n              destination: {\n                latitude: location.lat,\n                longitude: location.lng\n              }\n            });\n          }).catch(function (error) {\n            return console.warn(error);\n          });\n        } else {\n          alert(\"Digite o destino ! \");\n        }\n      };\n\n      _this.handleGetGoogleMapDirections = function () {\n        var data = {\n          source: _this.state.origin,\n          destination: _this.state.destination,\n          waypoints: _this.state.arrWaypoints,\n          params: [{\n            key: \"travelmode\",\n            value: \"driving\"\n          }]\n        };\n        (0, _reactNativeGoogleMapsDirections.default)(data);\n      };\n\n      return _this;\n    }\n\n    (0, _createClass2.default)(MapScreen, [{\n      key: \"requestLocationPermission\",\n      value: function requestLocationPermission() {\n        var granted;\n        return _regenerator.default.async(function requestLocationPermission$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return _regenerator.default.awrap(_reactNative.PermissionsAndroid.request(_reactNative.PermissionsAndroid.PERMISSIONS.ACCESS_FINE_LOCATION, {\n                  'title': 'App Location Permission',\n                  'message': 'Maps App needs access to your map ' + 'so you can be navigated.'\n                }));\n\n              case 3:\n                granted = _context.sent;\n\n                if (!(granted === _reactNative.PermissionsAndroid.RESULTS.GRANTED)) {\n                  _context.next = 9;\n                  break;\n                }\n\n                console.log(\"You can use the location\");\n                return _context.abrupt(\"return\", true);\n\n              case 9:\n                console.log(\"location permission denied\");\n                return _context.abrupt(\"return\", false);\n\n              case 11:\n                _context.next = 16;\n                break;\n\n              case 13:\n                _context.prev = 13;\n                _context.t0 = _context[\"catch\"](0);\n                console.warn(_context.t0);\n\n              case 16:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, null, [[0, 13]]);\n      }\n    }, {\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        var isGranted;\n        return _regenerator.default.async(function componentDidMount$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return _regenerator.default.awrap(this.requestLocationPermission());\n\n              case 2:\n                isGranted = _context2.sent;\n\n                if (isGranted) {\n                  this.getLocation();\n                }\n\n                this.getLocation();\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, null, this);\n      }\n    }, {\n      key: \"saveRoutes\",\n      value: function saveRoutes(api, path, objRoutes) {\n        var apiResponse;\n        return _regenerator.default.async(function saveRoutes$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                _context3.next = 3;\n                return _regenerator.default.awrap(_awsAmplify.API.put(api, path, objRoutes));\n\n              case 3:\n                apiResponse = _context3.sent;\n                console.log(\"response from saving routes: \" + apiResponse);\n                this.setState({\n                  apiResponse: apiResponse\n                });\n                return _context3.abrupt(\"return\", apiResponse);\n\n              case 9:\n                _context3.prev = 9;\n                _context3.t0 = _context3[\"catch\"](0);\n                console.log(_context3.t0);\n\n              case 12:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, null, this, [[0, 9]]);\n      }\n    }, {\n      key: \"getRoutes\",\n      value: function getRoutes(user) {\n        var path, _apiResponse;\n\n        return _regenerator.default.async(function getRoutes$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                path = \"/getRoute/object/\" + user;\n                _context4.prev = 1;\n                _context4.next = 4;\n                return _regenerator.default.awrap(_awsAmplify.API.get(\"getRoute\", path));\n\n              case 4:\n                _apiResponse = _context4.sent;\n                console.log(\"response from get routes: \" + _apiResponse.routeName);\n                this.setState({\n                  apiResponse: _apiResponse\n                });\n\n                if (_apiResponse.routeName != undefined) {\n                  this.setState({\n                    RouteName: _apiResponse.routeName\n                  });\n                  console.log(this.state.RouteName);\n                  this.setState({\n                    hasRoute: true\n                  });\n                  console.log(\"List Route: \" + this.state.RouteName);\n                } else {\n                  this.setState({\n                    hasRoute: false\n                  });\n                }\n\n                return _context4.abrupt(\"return\", _apiResponse);\n\n              case 11:\n                _context4.prev = 11;\n                _context4.t0 = _context4[\"catch\"](1);\n                console.log(_context4.t0);\n\n              case 14:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, null, this, [[1, 11]]);\n      }\n    }, {\n      key: \"sendInput\",\n      value: function sendInput(inputText) {\n        var user, origin, destination, waypoints, routeName, objRoutes, objRoutesAux;\n        return _regenerator.default.async(function sendInput$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return _regenerator.default.awrap(this.setState({\n                  isDialogVisible: false\n                }));\n\n              case 2:\n                user = _awsAmplify.Auth.user.username;\n                origin = this.state.originText;\n                destination = this.state.destinationText;\n                waypoints = this.state.waypointsText;\n                routeName = inputText;\n                _context5.next = 9;\n                return _regenerator.default.awrap({\n                  body: {\n                    \"routeName\": routeName,\n                    \"user\": user,\n                    \"origin\": origin,\n                    \"destination\": destination,\n                    \"waypoints\": waypoints\n                  }\n                });\n\n              case 9:\n                objRoutes = _context5.sent;\n                _context5.next = 12;\n                return _regenerator.default.awrap(this.saveRoutes(\"Routes\", \"/routes\", objRoutes));\n\n              case 12:\n                _context5.next = 14;\n                return _regenerator.default.awrap(this.getRoutes(user));\n\n              case 14:\n                _context5.next = 16;\n                return _regenerator.default.awrap({\n                  body: {\n                    \"user\": user,\n                    \"routeName\": this.state.RouteName\n                  }\n                });\n\n              case 16:\n                objRoutesAux = _context5.sent;\n                _context5.next = 19;\n                return _regenerator.default.awrap(this.state.hasRoute);\n\n              case 19:\n                _context5.t0 = _context5.sent;\n\n                if (!(_context5.t0 == true)) {\n                  _context5.next = 24;\n                  break;\n                }\n\n                objRoutesAux.body.routeName.push(routeName);\n                _context5.next = 25;\n                break;\n\n              case 24:\n                objRoutesAux.body.routeName = [routeName];\n\n              case 25:\n                _context5.next = 27;\n                return _regenerator.default.awrap(this.saveRoutes(\"getRoute\", \"/getRoute\", objRoutesAux));\n\n              case 27:\n                alert('Route saved successfully');\n\n              case 28:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, null, this);\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var _this3 = this;\n\n        return _react.default.createElement(_reactNative.KeyboardAvoidingView, {\n          style: styles.container,\n          behavior: \"padding\",\n          enabled: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 308\n          }\n        }, _react.default.createElement(_reactNativeMaps.default, {\n          ref: function ref(map) {\n            return _this3.mapView = map;\n          },\n          style: styles.map,\n          region: {\n            latitude: (this.state.origin.latitude + this.state.destination.latitude) / 2,\n            longitude: (this.state.origin.longitude + this.state.destination.longitude) / 2,\n            latitudeDelta: Math.abs(this.state.origin.latitude - this.state.destination.latitude) + Math.abs(this.state.origin.latitude - this.state.destination.latitude) * .1,\n            longitudeDelta: Math.abs(this.state.origin.longitude - this.state.destination.longitude) + Math.abs(this.state.origin.longitude - this.state.destination.longitude) * .1\n          },\n          loadingEnabled: true,\n          toolbarEnabled: true,\n          zoomControlEnabled: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 310\n          }\n        }, _react.default.createElement(_reactNativeMaps.default.Marker, {\n          coordinate: this.state.destination,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 328\n          }\n        }, _react.default.createElement(_reactNativeMaps.default.Callout, {\n          onPress: this.handleGetGoogleMapDirections,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 331\n          }\n        }, _react.default.createElement(_reactNative.Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 332\n          }\n        }, \"Press to Get Direction\"))), _react.default.createElement(_reactNativeMaps.default.Marker, {\n          coordinate: this.state.waypoints,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 336\n          }\n        }), _react.default.createElement(_reactNativeMaps.default.Marker, {\n          coordinate: this.state.origin,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 341\n          }\n        }, _react.default.createElement(_reactNativeMaps.default.Callout, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 344\n          }\n        }, _react.default.createElement(_reactNative.Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 345\n          }\n        }, \"This is where you are\"))), _react.default.createElement(_reactNativeMapsDirections.default, {\n          origin: this.state.origin,\n          waypoints: this.state.arrWaypoints,\n          destination: this.state.destination,\n          apikey: GOOGLE_MAPS_APIKEY,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 349\n          }\n        })), _react.default.createElement(_reactNativeDialogInput.default, {\n          isDialogVisible: this.state.isDialogVisible,\n          title: \"Route Name\",\n          message: \"Enter your route name\",\n          hintInput: \"Enter your route name\",\n          submitInput: function submitInput(inputText) {\n            _this3.sendInput(inputText);\n          },\n          closeDialog: function closeDialog() {\n            _this3.setState({\n              isDialogVisible: false\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 358\n          }\n        }), _react.default.createElement(_reactNative.TextInput, {\n          style: styles.input,\n          onChangeText: function onChangeText(text) {\n            return _this3.setState({\n              originText: text\n            });\n          },\n          placeholder: \"Origin\",\n          value: this.state.originText,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 366\n          }\n        }), _react.default.createElement(_reactNative.TextInput, {\n          style: styles.input,\n          onChangeText: function onChangeText(text) {\n            return _this3.setState({\n              destinationText: text\n            });\n          },\n          placeholder: \"Destination\",\n          value: this.state.destinationText,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 379\n          }\n        }), _react.default.createElement(_reactNative.TouchableOpacity, {\n          style: styles.button,\n          onPress: this.handleButton,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 386\n          }\n        }, _react.default.createElement(_reactNative.Text, {\n          style: styles.buttonText,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 388\n          }\n        }, \"Search Route\")), _react.default.createElement(_reactNative.TouchableOpacity, {\n          style: styles.button,\n          onPress: this.saveButton,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 392\n          }\n        }, _react.default.createElement(_reactNative.Text, {\n          style: styles.buttonText,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 394\n          }\n        }, \"Save Route\")));\n      }\n    }]);\n    return MapScreen;\n  }(_react.Component), _temp));\n\n  var _default2 = MapScreen;\n  exports.default = _default2;\n\n  var styles = _reactNative.StyleSheet.create({\n    container: {\n      flex: 1,\n      justifyContent: 'flex-end',\n      alignItems: 'flex-end'\n    },\n    map: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0\n    },\n    button: {\n      width: width - 100,\n      height: 40,\n      backgroundColor: '#FFF',\n      alignItems: 'center',\n      justifyContent: 'center',\n      borderWidth: 1,\n      borderColor: '#000',\n      borderRadius: 7,\n      marginBottom: 15,\n      marginHorizontal: 20\n    },\n    buttonText: {\n      color: '#000',\n      fontWeight: 'bold'\n    },\n    inputContainer: {\n      width: '100%',\n      maxHeight: 200\n    },\n    input: {\n      width: width - 40,\n      maxHeight: 200,\n      backgroundColor: '#FFF',\n      marginBottom: 15,\n      marginHorizontal: 20\n    }\n  });\n});","map":[[23,0,2,0],[27,0,3,0],[29,0,4,0],[31,0,15,0],[33,0,16,0],[35,0,17,0],[37,0,18,0],[39,0,20,0],[41,0,21,0],[65,0,23,0],[65,6,23,6,"GOOGLE_MAPS_APIKEY"],[65,24,23,24],[65,27,23,27,"AWSConfig"],[65,47,23,37,"GOOGLEAPI"],[65,56,23,0],[66,0,24,0],[66,6,24,6,"routeAPI"],[66,14,24,14],[66,17,24,17],[66,82,24,0],[67,0,25,0],[67,6,25,6,"arr"],[67,9,25,9],[67,12,25,12],[67,14,25,0],[68,0,27,0],[68,6,27,6,"backgroundColor"],[68,21,27,21],[68,24,27,24],[68,33,27,0],[70,24,29,26,"Dimensions"],[70,48,29,37,"get"],[70,51,29,26],[70,52,29,41],[70,60,29,26],[70,61],[71,6,29,8,"height"],[71,12],[71,31,29,8,"height"],[71,37],[72,6,29,16,"width"],[72,11],[72,30,29,16,"width"],[72,35],[89,12,33,4,"state"],[89,17],[89,20,33,12],[90,0,34,8,"isDialogVisible"],[90,8,34,8,"isDialogVisible"],[90,23,34,23],[90,25,34,24],[90,30,33,12],[91,0,35,8,"origin"],[91,8,35,8,"origin"],[91,14,35,14],[91,16,35,16],[92,0,35,18,"latitude"],[92,10,35,18,"latitude"],[92,18,35,26],[92,20,35,28],[92,30,35,16],[93,0,35,40,"longitude"],[93,10,35,40,"longitude"],[93,19,35,49],[93,21,35,51],[93,22,35,52],[94,0,35,16],[94,9,33,12],[95,0,36,8,"destination"],[95,8,36,8,"destination"],[95,19,36,19],[95,21,36,21],[96,0,36,23,"latitude"],[96,10,36,23,"latitude"],[96,18,36,31],[96,20,36,33],[96,30,36,21],[97,0,36,45,"longitude"],[97,10,36,45,"longitude"],[97,19,36,54],[97,21,36,56],[97,22,36,57],[98,0,36,21],[98,9,33,12],[99,0,37,8,"waypoints"],[99,8,37,8,"waypoints"],[99,17,37,17],[99,19,37,18],[100,0,37,20,"latitude"],[100,10,37,20,"latitude"],[100,18,37,28],[100,20,37,30],[100,21,37,18],[101,0,37,33,"longitude"],[101,10,37,33,"longitude"],[101,19,37,42],[101,21,37,44],[102,0,37,18],[102,9,33,12],[103,0,38,8,"originText"],[103,8,38,8,"originText"],[103,18,38,18],[103,20,38,20],[103,22,33,12],[104,0,39,8,"destinationText"],[104,8,39,8,"destinationText"],[104,23,39,23],[104,25,39,25],[104,27,33,12],[105,0,40,8,"waypointsText"],[105,8,40,8,"waypointsText"],[105,21,40,21],[105,23,40,22],[105,25,33,12],[106,0,41,8,"RouteName"],[106,8,41,8,"RouteName"],[106,17,41,17],[106,19,41,18],[106,21,33,12],[107,0,42,8,"hasRoute"],[107,8,42,8,"hasRoute"],[107,16,42,16],[107,18,42,18],[107,23,33,12],[108,0,43,8,"arrWaypoints"],[108,8,43,8,"arrWaypoints"],[108,20,43,20],[108,22,43,21],[109,0,33,12],[109,7],[111,12,84,6,"getLocation"],[111,23],[111,26,84,20],[111,38,84,26],[112,0,85,8,"navigator"],[112,8,85,8,"navigator"],[112,17,85,17],[112,18,85,18,"geolocation"],[112,29,85,8],[112,30,85,30,"getCurrentPosition"],[112,48,85,8],[112,49,85,49],[112,59,85,50,"position"],[112,67,85,49],[112,69,85,63],[113,0,86,12],[113,14,86,16,"newOrigin"],[113,23,86,25],[113,26,86,28],[114,0,87,16,"latitude"],[114,12,87,16,"latitude"],[114,20,87,24],[114,22,87,26,"position"],[114,30,87,34],[114,31,87,35,"coords"],[114,37,87,26],[114,38,87,42,"latitude"],[114,46,86,28],[115,0,88,16,"longitude"],[115,12,88,16,"longitude"],[115,21,88,25],[115,23,88,27,"position"],[115,31,88,35],[115,32,88,36,"coords"],[115,38,88,27],[115,39,88,43,"longitude"],[116,0,86,28],[116,11,86,12],[117,0,91,12,"console"],[117,10,91,12,"console"],[117,17,91,19],[117,18,91,20,"log"],[117,21,91,12],[117,22,91,24],[117,34,91,12],[118,0,92,12,"console"],[118,10,92,12,"console"],[118,17,92,19],[118,18,92,20,"log"],[118,21,92,12],[118,22,92,24,"newOrigin"],[118,31,92,12],[120,0,94,12],[120,16,94,17,"setState"],[120,24,94,12],[120,25,94,26],[121,0,95,16,"origin"],[121,12,95,16,"origin"],[121,18,95,22],[121,20,95,24,"newOrigin"],[122,0,94,26],[122,11,94,12],[123,0,98,9],[123,9,85,8],[123,11,98,11],[123,21,98,12,"err"],[123,24,98,11],[123,26,98,20],[124,0,99,12,"console"],[124,10,99,12,"console"],[124,17,99,19],[124,18,99,20,"log"],[124,21,99,12],[124,22,99,24],[124,29,99,12],[125,0,100,12,"console"],[125,10,100,12,"console"],[125,17,100,19],[125,18,100,20,"log"],[125,21,100,12],[125,22,100,24,"err"],[125,25,100,12],[126,0,102,9],[126,9,85,8],[126,11,102,11],[127,0,102,12,"enableHighAccuracy"],[127,10,102,12,"enableHighAccuracy"],[127,28,102,30],[127,30,102,32],[127,34,102,11],[128,0,102,38,"timeout"],[128,10,102,38,"timeout"],[128,17,102,45],[128,19,102,47],[128,23,102,11],[129,0,102,53,"maximumAge"],[129,10,102,53,"maximumAge"],[129,20,102,63],[129,22,102,65],[130,0,102,11],[130,9,85,8],[131,0,104,7],[131,7],[133,12,121,6,"saveButton"],[133,22],[133,25,121,19],[133,37,121,25],[134,0,122,10],[134,14,122,15,"setState"],[134,22,122,10],[134,23,122,24],[135,0,122,25,"isDialogVisible"],[135,10,122,25,"isDialogVisible"],[135,25,122,40],[135,27,122,41],[136,0,122,24],[136,9,122,10],[137,0,123,7],[137,7],[139,12,204,6,"handleButton"],[139,24],[139,27,204,21],[139,39,204,27],[140,0,205,8],[140,12,205,12,"auxArray"],[140,20,205,20],[140,23,205,23],[140,25,205,8],[141,0,206,8],[141,12,206,14,"fullAPI"],[141,19,206,21],[141,22,206,24,"routeAPI"],[141,30,206,32],[141,33,206,35],[141,65,206,24],[141,68,206,70],[141,71,206,24],[141,74,206,76],[141,75,206,8],[142,0,207,8,"fetch"],[142,8,207,8,"fetch"],[142,13,207,13],[142,14,207,14,"fullAPI"],[142,21,207,13],[142,22,207,8],[142,23,207,23,"then"],[142,27,207,8],[142,28,207,28],[142,38,207,28,"response"],[142,46,207,36],[143,0,207,36],[143,17,207,40,"response"],[143,25,207,48],[143,26,207,49,"json"],[143,30,207,40],[143,32,207,36],[144,0,207,36],[144,9,207,8],[144,11,207,57,"then"],[144,15,207,8],[144,16,207,62],[144,26,207,62,"data"],[144,30,207,66],[144,32,207,70],[145,0,208,8,"data"],[145,10,208,8,"data"],[145,14,208,12],[145,15,208,13,"Route"],[145,20,208,8],[145,21,208,19],[145,22,208,8],[145,24,208,22,"forEach"],[145,31,208,8],[145,32,208,30],[145,42,208,40,"item"],[145,46,208,30],[145,48,208,46,"indice"],[145,54,208,30],[145,56,208,54,"array"],[145,61,208,30],[145,63,208,61],[146,0,209,10],[146,16,209,14,"str"],[146,19,209,17],[146,22,209,20,"item"],[146,26,209,24],[146,27,209,25,"replace"],[146,34,209,20],[146,35,209,33],[146,38,209,20],[146,40,209,37],[146,43,209,20],[146,44,209,10],[148,0,210,10],[148,16,210,13,"indice"],[148,22,210,19],[148,26,210,23],[148,27,210,10],[148,29,210,25],[149,0,212,11],[149,19,212,16,"setState"],[149,27,212,11],[149,28,212,25],[150,0,212,26,"originText"],[150,16,212,26,"originText"],[150,26,212,36],[150,28,212,37,"str"],[151,0,212,25],[151,15,212,11],[152,0,213,11],[152,19,213,16,"setState"],[152,27,213,11],[152,28,213,25],[153,0,213,26,"destinationText"],[153,16,213,26,"destinationText"],[153,31,213,41],[153,33,213,42,"str"],[154,0,213,25],[154,15,213,11],[155,0,216,11],[155,13,210,10],[155,19,216,15],[156,0,217,12,"auxArray"],[156,14,217,12,"auxArray"],[156,22,217,20],[156,23,217,21,"push"],[156,27,217,12],[156,28,217,26,"str"],[156,31,217,12],[157,0,218,11],[158,0,219,9],[158,11,208,8],[159,0,221,9],[159,9,207,8],[161,0,224,8],[161,12,224,11],[161,18,224,16,"state"],[161,23,224,11],[161,24,224,22,"originText"],[161,34,224,11],[161,38,224,36],[161,40,224,8],[161,42,224,40],[162,0,226,12,"Geocoder"],[162,40,226,21,"init"],[162,44,226,12],[162,45,226,26,"GOOGLE_MAPS_APIKEY"],[162,63,226,12],[164,0,228,12,"Geocoder"],[164,40,228,21,"from"],[164,44,228,12],[164,45,228,26],[164,51,228,31,"state"],[164,56,228,26],[164,57,228,37,"originText"],[164,67,228,12],[164,69,229,17,"then"],[164,73,228,12],[164,74,229,22],[164,84,229,22,"json"],[164,88,229,26],[164,90,229,30],[165,0,230,20],[165,16,230,24,"location"],[165,24,230,32],[165,27,230,35,"json"],[165,31,230,39],[165,32,230,40,"results"],[165,39,230,35],[165,40,230,48],[165,41,230,35],[165,43,230,51,"geometry"],[165,51,230,35],[165,52,230,60,"location"],[165,60,230,20],[166,0,231,20,"console"],[166,12,231,20,"console"],[166,19,231,27],[166,20,231,28,"log"],[166,23,231,20],[166,24,231,32,"location"],[166,32,231,20],[168,0,232,20],[168,18,232,25,"setState"],[168,26,232,20],[168,27,232,34],[169,0,232,36,"origin"],[169,14,232,36,"origin"],[169,20,232,42],[169,22,232,44],[170,0,232,46,"latitude"],[170,16,232,46,"latitude"],[170,24,232,54],[170,26,232,56,"location"],[170,34,232,64],[170,35,232,65,"lat"],[170,38,232,44],[171,0,232,70,"longitude"],[171,16,232,70,"longitude"],[171,25,232,79],[171,27,232,81,"location"],[171,35,232,89],[171,36,232,90,"lng"],[172,0,232,44],[173,0,232,34],[173,13,232,20],[174,0,234,13],[174,11,228,12],[174,13,235,13,"catch"],[174,18,228,12],[174,19,235,19],[174,29,235,19,"error"],[174,34,235,24],[175,0,235,24],[175,19,235,28,"console"],[175,26,235,35],[175,27,235,36,"warn"],[175,31,235,28],[175,32,235,41,"error"],[175,37,235,28],[175,38,235,24],[176,0,235,24],[176,11,228,12],[178,0,236,12,"auxArray"],[178,10,236,12,"auxArray"],[178,18,236,20],[178,19,236,21,"forEach"],[178,26,236,12],[178,27,236,29],[178,37,236,39,"item"],[178,41,236,29],[178,43,236,45,"indice"],[178,49,236,29],[178,51,236,53,"array"],[178,56,236,29],[178,58,236,60],[179,0,236,60],[181,0,237,14,"console"],[181,12,237,14,"console"],[181,19,237,21],[181,20,237,22,"log"],[181,23,237,14],[181,24,237,26],[181,35,237,37,"item"],[181,39,237,14],[183,0,238,14,"Geocoder"],[183,42,238,23,"init"],[183,46,238,14],[183,47,238,28,"GOOGLE_MAPS_APIKEY"],[183,65,238,14],[185,0,239,14,"Geocoder"],[185,42,239,23,"from"],[185,46,239,14],[185,47,239,28,"item"],[185,51,239,14],[185,53,240,15,"then"],[185,57,239,14],[185,58,240,20],[185,68,240,20,"json"],[185,72,240,24],[185,74,240,28],[186,0,241,18],[186,18,241,22,"location"],[186,26,241,30],[186,29,241,33,"json"],[186,33,241,37],[186,34,241,38,"results"],[186,41,241,33],[186,42,241,46],[186,43,241,33],[186,45,241,49,"geometry"],[186,53,241,33],[186,54,241,58,"location"],[186,62,241,18],[187,0,242,18,"console"],[187,14,242,18,"console"],[187,21,242,25],[187,22,242,26,"log"],[187,25,242,18],[187,26,242,30,"location"],[187,34,242,18],[189,0,243,18],[189,14,243,18],[189,20,243,22],[189,21,243,23,"setState"],[189,29,243,18],[189,30,243,32],[190,0,243,34,"waypoints"],[190,16,243,34,"waypoints"],[190,25,243,43],[190,27,243,45],[191,0,243,47,"latitude"],[191,18,243,47,"latitude"],[191,26,243,55],[191,28,243,57,"location"],[191,36,243,65],[191,37,243,66,"lat"],[191,40,243,45],[192,0,243,71,"longitude"],[192,18,243,71,"longitude"],[192,27,243,80],[192,29,243,82,"location"],[192,37,243,90],[192,38,243,91,"lng"],[193,0,243,45],[194,0,243,32],[194,15,243,18],[196,0,244,18,"arr"],[196,14,244,18,"arr"],[196,17,244,21],[196,18,244,22,"push"],[196,22,244,18],[196,23,244,27],[196,29,244,31],[196,30,244,32,"state"],[196,35,244,27],[196,36,244,38,"waypoints"],[196,45,244,18],[198,0,245,18],[198,14,245,18],[198,20,245,22],[198,21,245,23,"setState"],[198,29,245,18],[198,30,245,32],[199,0,245,33,"arrWaypoints"],[199,16,245,33,"arrWaypoints"],[199,28,245,45],[199,30,245,46,"arr"],[200,0,245,32],[200,15,245,18],[201,0,247,11],[201,13,239,14],[201,15,248,11,"catch"],[201,20,239,14],[201,21,248,17],[201,31,248,17,"error"],[201,36,248,22],[202,0,248,22],[202,21,248,26,"console"],[202,28,248,33],[202,29,248,34,"warn"],[202,33,248,26],[202,34,248,39,"error"],[202,39,248,26],[202,40,248,22],[203,0,248,22],[203,13,239,14],[204,0,250,13],[204,11,236,12],[205,0,253,9],[205,9,224,8],[205,15,255,13],[206,0,257,12,"alert"],[206,10,257,12,"alert"],[206,15,257,17],[206,16,257,18],[206,36,257,17],[206,37,257,12],[207,0,259,9],[209,0,261,8],[209,12,261,11],[209,18,261,16,"state"],[209,23,261,11],[209,24,261,22,"destinationText"],[209,39,261,11],[209,43,261,41],[209,45,261,8],[209,47,261,45],[210,0,263,12,"Geocoder"],[210,40,263,21,"init"],[210,44,263,12],[210,45,263,26,"GOOGLE_MAPS_APIKEY"],[210,63,263,12],[212,0,265,12,"Geocoder"],[212,40,265,21,"from"],[212,44,265,12],[212,45,265,26],[212,51,265,31,"state"],[212,56,265,26],[212,57,265,37,"destinationText"],[212,72,265,12],[212,74,266,13,"then"],[212,78,265,12],[212,79,266,18],[212,89,266,18,"json"],[212,93,266,22],[212,95,266,26],[213,0,267,16],[213,16,267,20,"location"],[213,24,267,28],[213,27,267,31,"json"],[213,31,267,35],[213,32,267,36,"results"],[213,39,267,31],[213,40,267,44],[213,41,267,31],[213,43,267,47,"geometry"],[213,51,267,31],[213,52,267,56,"location"],[213,60,267,16],[214,0,268,16,"console"],[214,12,268,16,"console"],[214,19,268,23],[214,20,268,24,"log"],[214,23,268,16],[214,24,268,28,"location"],[214,32,268,16],[216,0,269,16],[216,18,269,21,"setState"],[216,26,269,16],[216,27,269,30],[217,0,269,32,"destination"],[217,14,269,32,"destination"],[217,25,269,43],[217,27,269,45],[218,0,269,47,"latitude"],[218,16,269,47,"latitude"],[218,24,269,55],[218,26,269,57,"location"],[218,34,269,65],[218,35,269,66,"lat"],[218,38,269,45],[219,0,269,71,"longitude"],[219,16,269,71,"longitude"],[219,25,269,80],[219,27,269,82,"location"],[219,35,269,90],[219,36,269,91,"lng"],[220,0,269,45],[221,0,269,30],[221,13,269,16],[222,0,271,13],[222,11,265,12],[222,13,272,13,"catch"],[222,18,265,12],[222,19,272,19],[222,29,272,19,"error"],[222,34,272,24],[223,0,272,24],[223,19,272,28,"console"],[223,26,272,35],[223,27,272,36,"warn"],[223,31,272,28],[223,32,272,41,"error"],[223,37,272,28],[223,38,272,24],[224,0,272,24],[224,11,265,12],[225,0,273,9],[225,9,261,8],[225,15,275,13],[226,0,277,12,"alert"],[226,10,277,12,"alert"],[226,15,277,17],[226,16,277,18],[226,37,277,17],[226,38,277,12],[227,0,279,9],[228,0,281,7],[228,7],[230,12,285,6,"handleGetGoogleMapDirections"],[230,40],[230,43,285,37],[230,55,285,43],[231,0,287,8],[231,12,287,14,"data"],[231,16,287,18],[231,19,287,21],[232,0,289,12,"source"],[232,10,289,12,"source"],[232,16,289,18],[232,18,289,20],[232,24,289,25,"state"],[232,29,289,20],[232,30,289,31,"origin"],[232,36,287,21],[233,0,290,12,"destination"],[233,10,290,12,"destination"],[233,21,290,23],[233,23,290,25],[233,29,290,30,"state"],[233,34,290,25],[233,35,290,36,"destination"],[233,46,287,21],[234,0,291,12,"waypoints"],[234,10,291,12,"waypoints"],[234,19,291,21],[234,21,291,23],[234,27,291,28,"state"],[234,32,291,23],[234,33,291,34,"arrWaypoints"],[234,45,287,21],[235,0,292,12,"params"],[235,10,292,12,"params"],[235,16,292,18],[235,18,292,20],[235,19,293,16],[236,0,294,18,"key"],[236,12,294,18,"key"],[236,15,294,21],[236,17,294,23],[236,29,293,16],[237,0,295,18,"value"],[237,12,295,18,"value"],[237,17,295,23],[237,19,295,25],[238,0,293,16],[238,11,292,20],[239,0,287,21],[239,9,287,8],[240,0,301,8],[240,54,301,22,"data"],[240,58,301,8],[241,0,303,7],[241,7],[256,50,60,34,"PermissionsAndroid"],[256,82,60,53,"request"],[256,89,60,34],[256,90,61,16,"PermissionsAndroid"],[256,122,61,35,"PERMISSIONS"],[256,133,61,16],[256,134,61,47,"ACCESS_FINE_LOCATION"],[256,154,60,34],[256,156,62,16],[257,0,63,20],[257,27,63,29],[257,52,62,16],[258,0,64,20],[258,29,64,31],[258,68,65,24],[259,0,62,16],[259,17,60,34],[259,18],[262,0,60,18,"granted"],[262,16,60,18,"granted"],[262,23],[264,22,69,16,"granted"],[264,29,69,23],[264,34,69,28,"PermissionsAndroid"],[264,66,69,47,"RESULTS"],[264,73,69,28],[264,74,69,55,"GRANTED"],[264,81],[269,0,70,16,"console"],[269,16,70,16,"console"],[269,23,70,23],[269,24,70,24,"log"],[269,27,70,16],[269,28,70,28],[269,54,70,16],[270,49,71,23],[270,53],[273,0,74,16,"console"],[273,16,74,16,"console"],[273,23,74,23],[273,24,74,24,"log"],[273,27,74,16],[273,28,74,28],[273,56,74,16],[274,49,75,23],[274,54],[283,0,79,12,"console"],[283,16,79,12,"console"],[283,23,79,19],[283,24,79,20,"warn"],[283,28,79,12],[301,50,107,30],[301,55,107,35,"requestLocationPermission"],[301,80,107,30],[301,82],[304,0,107,12,"isGranted"],[304,16,107,12,"isGranted"],[304,25],[306,0,109,8],[306,20,109,12,"isGranted"],[306,29,109,8],[306,31,109,23],[307,0,110,12],[307,23,110,17,"getLocation"],[307,34,110,12],[308,0,111,9],[310,0,113,8],[310,21,113,13,"getLocation"],[310,32,113,8],[321,33,126,24,"api"],[321,36],[321,38,126,28,"path"],[321,42],[321,44,126,33,"objRoutes"],[321,53],[329,50,128,36,"API"],[329,66,128,40,"put"],[329,69,128,36],[329,70,128,44,"api"],[329,73,128,36],[329,75,128,49,"path"],[329,79,128,36],[329,81,128,55,"objRoutes"],[329,90,128,36],[329,91],[332,0,128,16,"apiResponse"],[332,16,128,16,"apiResponse"],[332,27],[333,0,129,10,"console"],[333,16,129,10,"console"],[333,23,129,17],[333,24,129,18,"log"],[333,27,129,10],[333,28,129,22],[333,62,129,56,"apiResponse"],[333,73,129,10],[334,0,130,10],[334,21,130,15,"setState"],[334,29,130,10],[334,30,130,24],[335,0,130,25,"apiResponse"],[335,18,130,25,"apiResponse"],[335,29,130,36],[335,31,130,25,"apiResponse"],[336,0,130,24],[336,17,130,10],[337,50,131,17,"apiResponse"],[337,61],[342,0,133,10,"console"],[342,16,133,10,"console"],[342,23,133,17],[342,24,133,18,"log"],[342,27,133,10],[353,32,138,22,"user"],[353,36],[360,0,139,12,"path"],[360,16,139,12,"path"],[360,20],[360,23,139,19],[360,45,139,41,"user"],[360,49],[363,50,141,36,"API"],[363,66,141,40,"get"],[363,69,141,36],[363,70,141,44],[363,80,141,36],[363,82,141,56,"path"],[363,86,141,36],[363,87],[366,0,141,16,"apiResponse"],[366,16,141,16,"apiResponse"],[366,28],[367,0,142,10,"console"],[367,16,142,10,"console"],[367,23,142,17],[367,24,142,18,"log"],[367,27,142,10],[367,28,142,22],[367,59,142,53,"apiResponse"],[367,71,142,64],[367,72,142,65,"routeName"],[367,81,142,10],[368,0,143,10],[368,21,143,15,"setState"],[368,29,143,10],[368,30,143,24],[369,0,143,25,"apiResponse"],[369,18,143,25,"apiResponse"],[369,29,143,36],[369,31,143,25,"apiResponse"],[370,0,143,24],[370,17,143,10],[372,0,144,10],[372,20,144,13,"apiResponse"],[372,32,144,24],[372,33,144,25,"routeName"],[372,42,144,13],[372,46,144,38,"undefined"],[372,55,144,10],[372,57,144,49],[373,0,145,12],[373,23,145,17,"setState"],[373,31,145,12],[373,32,145,26],[374,0,145,27,"RouteName"],[374,20,145,27,"RouteName"],[374,29,145,36],[374,31,145,37,"apiResponse"],[374,43,145,48],[374,44,145,49,"routeName"],[375,0,145,26],[375,19,145,12],[376,0,146,12,"console"],[376,18,146,12,"console"],[376,25,146,19],[376,26,146,20,"log"],[376,29,146,12],[376,30,146,24],[376,35,146,29,"state"],[376,40,146,24],[376,41,146,35,"RouteName"],[376,50,146,12],[377,0,147,12],[377,23,147,17,"setState"],[377,31,147,12],[377,32,147,26],[378,0,147,27,"hasRoute"],[378,20,147,27,"hasRoute"],[378,28,147,35],[378,30,147,36],[379,0,147,26],[379,19,147,12],[380,0,148,12,"console"],[380,18,148,12,"console"],[380,25,148,19],[380,26,148,20,"log"],[380,29,148,12],[380,30,148,24],[380,47,148,41],[380,52,148,46,"state"],[380,57,148,41],[380,58,148,52,"RouteName"],[380,67,148,12],[381,0,149,11],[381,17,144,10],[381,23,149,15],[382,0,150,12],[382,23,150,17,"setState"],[382,31,150,12],[382,32,150,26],[383,0,150,27,"hasRoute"],[383,20,150,27,"hasRoute"],[383,28,150,35],[383,30,150,36],[384,0,150,26],[384,19,150,12],[385,0,152,11],[387,50,153,17,"apiResponse"],[387,62],[392,0,155,10,"console"],[392,16,155,10,"console"],[392,23,155,17],[392,24,155,18,"log"],[392,27,155,10],[403,32,162,24,"inputText"],[403,41],[410,50,163,14],[410,55,163,19,"setState"],[410,63,163,14],[410,64,163,28],[411,0,163,29,"isDialogVisible"],[411,18,163,29,"isDialogVisible"],[411,33,163,44],[411,35,163,45],[412,0,163,28],[412,17,163,14],[412,18],[415,0,165,12,"user"],[415,16,165,12,"user"],[415,20],[415,23,165,19,"Auth"],[415,40,165,24,"user"],[415,44,165,19],[415,45,165,29,"username"],[415,53],[416,0,166,12,"origin"],[416,16,166,12,"origin"],[416,22],[416,25,166,21],[416,30,166,26,"state"],[416,35,166,21],[416,36,166,32,"originText"],[416,46],[417,0,167,12,"destination"],[417,16,167,12,"destination"],[417,27],[417,30,167,26],[417,35,167,31,"state"],[417,40,167,26],[417,41,167,37,"destinationText"],[417,56],[418,0,168,12,"waypoints"],[418,16,168,12,"waypoints"],[418,25],[418,28,168,24],[418,33,168,29,"state"],[418,38,168,24],[418,39,168,35,"waypointsText"],[418,52],[419,0,169,12,"routeName"],[419,16,169,12,"routeName"],[419,25],[419,28,169,24,"inputText"],[419,37],[421,50,171,31],[422,0,172,10,"body"],[422,18,172,10,"body"],[422,22,172,14],[422,24,172,16],[423,0,173,12],[423,33,173,25,"routeName"],[423,42,172,16],[424,0,174,12],[424,28,174,20,"user"],[424,32,172,16],[425,0,175,12],[425,30,175,21,"origin"],[425,36,172,16],[426,0,176,12],[426,35,176,27,"destination"],[426,46,172,16],[427,0,177,12],[427,33,177,24,"waypoints"],[428,0,172,16],[429,0,171,31],[429,17],[432,0,171,13,"objRoutes"],[432,16,171,13,"objRoutes"],[432,25],[434,50,182,14],[434,55,182,19,"saveRoutes"],[434,65,182,14],[434,66,182,30],[434,74,182,14],[434,76,182,39],[434,85,182,14],[434,87,182,49,"objRoutes"],[434,96,182,14],[434,97],[438,50,184,14],[438,55,184,19,"getRoutes"],[438,64,184,14],[438,65,184,29,"user"],[438,69,184,14],[438,70],[442,50,186,33],[443,0,187,10,"body"],[443,18,187,10,"body"],[443,22,187,14],[443,24,187,16],[444,0,188,12],[444,28,188,20,"user"],[444,32,187,16],[445,0,189,12],[445,33,189,25],[445,38,189,30,"state"],[445,43,189,25],[445,44,189,36,"RouteName"],[446,0,187,16],[447,0,186,33],[447,17],[450,0,186,12,"objRoutesAux"],[450,16,186,12,"objRoutesAux"],[450,28],[452,50,193,18],[452,55,193,23,"state"],[452,60,193,18],[452,61,193,29,"hasRoute"],[452,69],[457,38,193,41],[457,42],[462,0,194,10,"objRoutesAux"],[462,16,194,10,"objRoutesAux"],[462,28,194,22],[462,29,194,23,"body"],[462,33,194,10],[462,34,194,28,"routeName"],[462,43,194,10],[462,44,194,38,"push"],[462,48,194,10],[462,49,194,43,"routeName"],[462,58,194,10],[467,0,196,10,"objRoutesAux"],[467,16,196,10,"objRoutesAux"],[467,28,196,22],[467,29,196,23,"body"],[467,33,196,10],[467,34,196,28,"routeName"],[467,43,196,10],[467,46,196,40],[467,47,196,41,"routeName"],[467,56,196,40],[467,57,196,10],[471,50,200,14],[471,55,200,19,"saveRoutes"],[471,65,200,14],[471,66,200,30],[471,76,200,14],[471,78,200,41],[471,89,200,14],[471,91,200,53,"objRoutesAux"],[471,103,200,14],[471,104],[474,0,201,8,"alert"],[474,16,201,8,"alert"],[474,21,201,13],[474,22,201,14],[474,48,201,13],[474,49,201,8],[485,31,305,13],[486,0,305,13],[488,0,306,8],[488,15,308,12],[488,44,308,13],[488,77,308,12],[489,0,308,34],[489,10,308,34],[489,15,308,39],[489,17,308,41,"styles"],[489,23,308,47],[489,24,308,48,"container"],[489,33,308,12],[490,0,308,59],[490,10,308,59],[490,18,308,67],[490,20,308,68],[490,29,308,12],[491,0,308,78],[491,10,308,78],[491,17,308,85],[491,23,308,12],[492,0,308,12],[493,0,308,12],[494,0,308,12],[495,0,308,12],[496,0,308,12],[496,11,310,12],[496,40,310,13],[496,64,310,12],[497,0,312,14],[497,10,312,14],[497,13,312,17],[497,15,312,19],[497,28,312,19,"map"],[497,31,312,22],[498,0,312,22],[498,19,312,26],[498,25,312,30],[498,26,312,31,"mapView"],[498,33,312,26],[498,36,312,41,"map"],[498,39,312,22],[499,0,312,22],[499,11,310,12],[500,0,313,14],[500,10,313,14],[500,15,313,19],[500,17,313,21,"styles"],[500,23,313,27],[500,24,313,28,"map"],[500,27,310,12],[501,0,315,14],[501,10,315,14],[501,16,315,20],[501,18,315,22],[502,0,316,16,"latitude"],[502,12,316,16,"latitude"],[502,20,316,24],[502,22,316,26],[502,23,316,27],[502,28,316,32,"state"],[502,33,316,27],[502,34,316,38,"origin"],[502,40,316,27],[502,41,316,45,"latitude"],[502,49,316,27],[502,52,316,56],[502,57,316,61,"state"],[502,62,316,56],[502,63,316,67,"destination"],[502,74,316,56],[502,75,316,79,"latitude"],[502,83,316,26],[502,87,316,91],[502,88,315,22],[503,0,317,16,"longitude"],[503,12,317,16,"longitude"],[503,21,317,25],[503,23,317,27],[503,24,317,28],[503,29,317,33,"state"],[503,34,317,28],[503,35,317,39,"origin"],[503,41,317,28],[503,42,317,46,"longitude"],[503,51,317,28],[503,54,317,58],[503,59,317,63,"state"],[503,64,317,58],[503,65,317,69,"destination"],[503,76,317,58],[503,77,317,81,"longitude"],[503,86,317,27],[503,90,317,94],[503,91,315,22],[504,0,318,16,"latitudeDelta"],[504,12,318,16,"latitudeDelta"],[504,25,318,29],[504,27,318,31,"Math"],[504,31,318,35],[504,32,318,36,"abs"],[504,35,318,31],[504,36,318,40],[504,41,318,45,"state"],[504,46,318,40],[504,47,318,51,"origin"],[504,53,318,40],[504,54,318,58,"latitude"],[504,62,318,40],[504,65,318,69],[504,70,318,74,"state"],[504,75,318,69],[504,76,318,80,"destination"],[504,87,318,69],[504,88,318,92,"latitude"],[504,96,318,31],[504,100,318,104,"Math"],[504,104,318,108],[504,105,318,109,"abs"],[504,108,318,104],[504,109,318,113],[504,114,318,118,"state"],[504,119,318,113],[504,120,318,124,"origin"],[504,126,318,113],[504,127,318,131,"latitude"],[504,135,318,113],[504,138,318,142],[504,143,318,147,"state"],[504,148,318,142],[504,149,318,153,"destination"],[504,160,318,142],[504,161,318,165,"latitude"],[504,169,318,104],[504,173,318,177],[504,175,315,22],[505,0,319,16,"longitudeDelta"],[505,12,319,16,"longitudeDelta"],[505,26,319,30],[505,28,319,32,"Math"],[505,32,319,36],[505,33,319,37,"abs"],[505,36,319,32],[505,37,319,41],[505,42,319,46,"state"],[505,47,319,41],[505,48,319,52,"origin"],[505,54,319,41],[505,55,319,59,"longitude"],[505,64,319,41],[505,67,319,71],[505,72,319,76,"state"],[505,77,319,71],[505,78,319,82,"destination"],[505,89,319,71],[505,90,319,94,"longitude"],[505,99,319,32],[505,103,319,107,"Math"],[505,107,319,111],[505,108,319,112,"abs"],[505,111,319,107],[505,112,319,116],[505,117,319,121,"state"],[505,122,319,116],[505,123,319,127,"origin"],[505,129,319,116],[505,130,319,134,"longitude"],[505,139,319,116],[505,142,319,146],[505,147,319,151,"state"],[505,152,319,146],[505,153,319,157,"destination"],[505,164,319,146],[505,165,319,169,"longitude"],[505,174,319,107],[505,178,319,182],[506,0,315,22],[506,11,310,12],[507,0,322,14],[507,10,322,14],[507,24,322,28],[507,26,322,30],[507,30,310,12],[508,0,323,14],[508,10,323,14],[508,24,323,28],[508,26,323,30],[508,30,310,12],[509,0,324,14],[509,10,324,14],[509,28,324,32],[509,30,324,34],[509,34,310,12],[510,0,310,12],[511,0,310,12],[512,0,310,12],[513,0,310,12],[514,0,310,12],[514,11,328,12],[514,40,328,13],[514,64,328,12],[514,65,328,21],[514,71,328,12],[515,0,329,14],[515,10,329,14],[515,20,329,24],[515,22,329,26],[515,27,329,31,"state"],[515,32,329,26],[515,33,329,37,"destination"],[515,44,328,12],[516,0,328,12],[517,0,328,12],[518,0,328,12],[519,0,328,12],[520,0,328,12],[520,11,331,14],[520,40,331,15],[520,64,331,14],[520,65,331,23],[520,72,331,14],[521,0,331,31],[521,10,331,31],[521,17,331,38],[521,19,331,40],[521,24,331,45,"handleGetGoogleMapDirections"],[521,52,331,14],[522,0,331,14],[523,0,331,14],[524,0,331,14],[525,0,331,14],[526,0,331,14],[526,11,332,16],[526,40,332,17],[526,57,332,16],[527,0,332,16],[528,0,332,16],[529,0,332,16],[530,0,332,16],[531,0,332,16],[531,36,331,14],[531,37,328,12],[531,38,310,12],[531,40,336,12],[531,69,336,13],[531,93,336,12],[531,94,336,21],[531,100,336,12],[532,0,337,14],[532,10,337,14],[532,20,337,24],[532,22,337,26],[532,27,337,31,"state"],[532,32,337,26],[532,33,337,37,"waypoints"],[532,42,336,12],[533,0,336,12],[534,0,336,12],[535,0,336,12],[536,0,336,12],[537,0,336,12],[537,10,310,12],[537,12,341,12],[537,41,341,13],[537,65,341,12],[537,66,341,21],[537,72,341,12],[538,0,342,14],[538,10,342,14],[538,20,342,24],[538,22,342,26],[538,27,342,31,"state"],[538,32,342,26],[538,33,342,37,"origin"],[538,39,341,12],[539,0,341,12],[540,0,341,12],[541,0,341,12],[542,0,341,12],[543,0,341,12],[543,11,344,12],[543,40,344,13],[543,64,344,12],[543,65,344,21],[543,72,344,12],[544,0,344,12],[545,0,344,12],[546,0,344,12],[547,0,344,12],[548,0,344,12],[548,11,345,16],[548,40,345,17],[548,57,345,16],[549,0,345,16],[550,0,345,16],[551,0,345,16],[552,0,345,16],[553,0,345,16],[553,35,344,12],[553,36,341,12],[553,37,310,12],[553,39,349,12],[553,68,349,13],[553,102,349,12],[554,0,350,14],[554,10,350,14],[554,16,350,20],[554,18,350,22],[554,23,350,27,"state"],[554,28,350,22],[554,29,350,33,"origin"],[554,35,349,12],[555,0,351,14],[555,10,351,14],[555,19,351,23],[555,21,351,25],[555,26,351,30,"state"],[555,31,351,25],[555,32,351,36,"arrWaypoints"],[555,44,349,12],[556,0,352,14],[556,10,352,14],[556,21,352,25],[556,23,352,27],[556,28,352,32,"state"],[556,33,352,27],[556,34,352,38,"destination"],[556,45,349,12],[557,0,353,14],[557,10,353,14],[557,16,353,20],[557,18,353,22,"GOOGLE_MAPS_APIKEY"],[557,36,349,12],[558,0,349,12],[559,0,349,12],[560,0,349,12],[561,0,349,12],[562,0,349,12],[562,10,310,12],[562,11,308,12],[562,13,358,12],[562,42,358,13],[562,73,358,12],[563,0,358,25],[563,10,358,25],[563,25,358,40],[563,27,358,42],[563,32,358,47,"state"],[563,37,358,42],[563,38,358,53,"isDialogVisible"],[563,53,358,12],[564,0,359,12],[564,10,359,12],[564,15,359,17],[564,17,359,19],[564,29,358,12],[565,0,360,12],[565,10,360,12],[565,17,360,19],[565,19,360,21],[565,42,358,12],[566,0,361,12],[566,10,361,12],[566,19,361,21],[566,21,361,24],[566,44,358,12],[567,0,362,12],[567,10,362,12],[567,21,362,23],[567,23,362,26],[567,44,362,27,"inputText"],[567,53,362,26],[567,55,362,41],[568,0,362,42],[568,12,362,42],[568,18,362,46],[568,19,362,47,"sendInput"],[568,28,362,42],[568,29,362,57,"inputText"],[568,38,362,42],[569,0,362,68],[569,11,358,12],[570,0,363,12],[570,10,363,12],[570,21,363,23],[570,23,363,26],[570,46,363,32],[571,0,363,34],[571,12,363,34],[571,18,363,38],[571,19,363,39,"setState"],[571,27,363,34],[571,28,363,48],[572,0,363,49,"isDialogVisible"],[572,14,363,49,"isDialogVisible"],[572,29,363,64],[572,31,363,65],[573,0,363,48],[573,13,363,34],[574,0,363,73],[574,11,358,12],[575,0,358,12],[576,0,358,12],[577,0,358,12],[578,0,358,12],[579,0,358,12],[579,10,308,12],[579,12,366,16],[579,41,366,17],[579,63,366,16],[580,0,367,20],[580,10,367,20],[580,15,367,25],[580,17,367,27,"styles"],[580,23,367,33],[580,24,367,34,"input"],[580,29,366,16],[581,0,368,20],[581,10,368,20],[581,22,368,32],[581,24,368,34],[581,46,368,35,"text"],[581,50,368,34],[582,0,368,34],[582,19,368,44],[582,25,368,48],[582,26,368,49,"setState"],[582,34,368,44],[582,35,368,58],[583,0,368,60,"originText"],[583,14,368,60,"originText"],[583,24,368,70],[583,26,368,72,"text"],[584,0,368,58],[584,13,368,44],[584,14,368,34],[585,0,368,34],[585,11,366,16],[586,0,369,20],[586,10,369,20],[586,21,369,31],[586,23,369,32],[586,31,366,16],[587,0,370,20],[587,10,370,20],[587,15,370,25],[587,17,370,27],[587,22,370,32,"state"],[587,27,370,27],[587,28,370,38,"originText"],[587,38,366,16],[588,0,366,16],[589,0,366,16],[590,0,366,16],[591,0,366,16],[592,0,366,16],[592,10,308,12],[592,12,379,17],[592,41,379,18],[592,63,379,17],[593,0,380,20],[593,10,380,20],[593,15,380,25],[593,17,380,27,"styles"],[593,23,380,33],[593,24,380,34,"input"],[593,29,379,17],[594,0,381,20],[594,10,381,20],[594,22,381,32],[594,24,381,34],[594,46,381,35,"text"],[594,50,381,34],[595,0,381,34],[595,19,381,44],[595,25,381,48],[595,26,381,49,"setState"],[595,34,381,44],[595,35,381,58],[596,0,381,60,"destinationText"],[596,14,381,60,"destinationText"],[596,29,381,75],[596,31,381,77,"text"],[597,0,381,58],[597,13,381,44],[597,14,381,34],[598,0,381,34],[598,11,379,17],[599,0,382,20],[599,10,382,20],[599,21,382,31],[599,23,382,32],[599,36,379,17],[600,0,383,20],[600,10,383,20],[600,15,383,25],[600,17,383,27],[600,22,383,32,"state"],[600,27,383,27],[600,28,383,38,"destinationText"],[600,43,379,17],[601,0,379,17],[602,0,379,17],[603,0,379,17],[604,0,379,17],[605,0,379,17],[605,10,308,12],[605,12,386,16],[605,41,386,17],[605,70,386,16],[606,0,386,34],[606,10,386,34],[606,15,386,39],[606,17,386,41,"styles"],[606,23,386,47],[606,24,386,48,"button"],[606,30,386,16],[607,0,386,56],[607,10,386,56],[607,17,386,63],[607,19,386,65],[607,24,386,70,"handleButton"],[607,36,386,16],[608,0,386,16],[609,0,386,16],[610,0,386,16],[611,0,386,16],[612,0,386,16],[612,11,388,20],[612,40,388,21],[612,57,388,20],[613,0,388,26],[613,10,388,26],[613,15,388,31],[613,17,388,33,"styles"],[613,23,388,39],[613,24,388,40,"buttonText"],[613,34,388,20],[614,0,388,20],[615,0,388,20],[616,0,388,20],[617,0,388,20],[618,0,388,20],[618,26,386,16],[618,27,308,12],[618,29,392,16],[618,58,392,17],[618,87,392,16],[619,0,392,34],[619,10,392,34],[619,15,392,39],[619,17,392,41,"styles"],[619,23,392,47],[619,24,392,48,"button"],[619,30,392,16],[620,0,392,56],[620,10,392,56],[620,17,392,63],[620,19,392,65],[620,24,392,70,"saveButton"],[620,34,392,16],[621,0,392,16],[622,0,392,16],[623,0,392,16],[624,0,392,16],[625,0,392,16],[625,11,394,20],[625,40,394,21],[625,57,394,20],[626,0,394,26],[626,10,394,26],[626,15,394,31],[626,17,394,33,"styles"],[626,23,394,39],[626,24,394,40,"buttonText"],[626,34,394,20],[627,0,394,20],[628,0,394,20],[629,0,394,20],[630,0,394,20],[631,0,394,20],[631,24,392,16],[631,25,308,12],[631,26,306,8],[632,0,402,5],[635,4,31,39,"Component"],[635,20],[640,0,406,0],[640,6,406,6,"styles"],[640,12,406,12],[640,15,406,15,"StyleSheet"],[640,39,406,26,"create"],[640,45,406,15],[640,46,406,33],[641,0,408,4,"container"],[641,4,408,4,"container"],[641,13,408,13],[641,15,408,15],[642,0,410,8,"flex"],[642,6,410,8,"flex"],[642,10,410,12],[642,12,410,14],[642,13,408,15],[643,0,411,8,"justifyContent"],[643,6,411,8,"justifyContent"],[643,20,411,22],[643,22,411,24],[643,32,408,15],[644,0,412,8,"alignItems"],[644,6,412,8,"alignItems"],[644,16,412,18],[644,18,412,20],[645,0,408,15],[645,5,406,33],[646,0,416,6,"map"],[646,4,416,6,"map"],[646,7,416,9],[646,9,416,11],[647,0,418,8,"position"],[647,6,418,8,"position"],[647,14,418,16],[647,16,418,18],[647,26,416,11],[648,0,419,8,"top"],[648,6,419,8,"top"],[648,9,419,11],[648,11,419,13],[648,12,416,11],[649,0,420,8,"left"],[649,6,420,8,"left"],[649,10,420,12],[649,12,420,14],[649,13,416,11],[650,0,421,8,"right"],[650,6,421,8,"right"],[650,11,421,13],[650,13,421,15],[650,14,416,11],[651,0,422,8,"bottom"],[651,6,422,8,"bottom"],[651,12,422,14],[651,14,422,16],[652,0,416,11],[652,5,406,33],[653,0,426,6,"button"],[653,4,426,6,"button"],[653,10,426,12],[653,12,426,14],[654,0,428,8,"width"],[654,6,428,8,"width"],[654,11,428,13],[654,13,428,15,"width"],[654,18,428,20],[654,21,428,23],[654,24,426,14],[655,0,429,8,"height"],[655,6,429,8,"height"],[655,12,429,14],[655,14,429,16],[655,16,426,14],[656,0,430,8,"backgroundColor"],[656,6,430,8,"backgroundColor"],[656,21,430,23],[656,23,430,25],[656,29,426,14],[657,0,431,8,"alignItems"],[657,6,431,8,"alignItems"],[657,16,431,18],[657,18,431,20],[657,26,426,14],[658,0,432,8,"justifyContent"],[658,6,432,8,"justifyContent"],[658,20,432,22],[658,22,432,24],[658,30,426,14],[659,0,433,8,"borderWidth"],[659,6,433,8,"borderWidth"],[659,17,433,19],[659,19,433,21],[659,20,426,14],[660,0,434,8,"borderColor"],[660,6,434,8,"borderColor"],[660,17,434,19],[660,19,434,21],[660,25,426,14],[661,0,435,8,"borderRadius"],[661,6,435,8,"borderRadius"],[661,18,435,20],[661,20,435,22],[661,21,426,14],[662,0,436,8,"marginBottom"],[662,6,436,8,"marginBottom"],[662,18,436,20],[662,20,436,22],[662,22,426,14],[663,0,437,8,"marginHorizontal"],[663,6,437,8,"marginHorizontal"],[663,22,437,24],[663,24,437,26],[664,0,426,14],[664,5,406,33],[665,0,441,6,"buttonText"],[665,4,441,6,"buttonText"],[665,14,441,16],[665,16,441,18],[666,0,443,8,"color"],[666,6,443,8,"color"],[666,11,443,13],[666,13,443,15],[666,19,441,18],[667,0,444,8,"fontWeight"],[667,6,444,8,"fontWeight"],[667,16,444,18],[667,18,444,20],[668,0,441,18],[668,5,406,33],[669,0,448,6,"inputContainer"],[669,4,448,6,"inputContainer"],[669,18,448,20],[669,20,448,22],[670,0,450,8,"width"],[670,6,450,8,"width"],[670,11,450,13],[670,13,450,15],[670,19,448,22],[671,0,451,8,"maxHeight"],[671,6,451,8,"maxHeight"],[671,15,451,17],[671,17,451,19],[672,0,448,22],[672,5,406,33],[673,0,455,6,"input"],[673,4,455,6,"input"],[673,9,455,11],[673,11,455,13],[674,0,457,8,"width"],[674,6,457,8,"width"],[674,11,457,13],[674,13,457,15,"width"],[674,18,457,20],[674,21,457,23],[674,23,455,13],[675,0,458,8,"maxHeight"],[675,6,458,8,"maxHeight"],[675,15,458,17],[675,17,458,19],[675,20,455,13],[676,0,459,8,"backgroundColor"],[676,6,459,8,"backgroundColor"],[676,21,459,23],[676,23,459,25],[676,29,455,13],[677,0,460,8,"marginBottom"],[677,6,460,8,"marginBottom"],[677,18,460,20],[677,20,460,22],[677,22,455,13],[678,0,461,8,"marginHorizontal"],[678,6,461,8,"marginHorizontal"],[678,22,461,24],[678,24,461,26],[679,0,455,13],[680,0,406,33],[680,3,406,15],[680,4,406,0]]},"type":"js/module"}]}