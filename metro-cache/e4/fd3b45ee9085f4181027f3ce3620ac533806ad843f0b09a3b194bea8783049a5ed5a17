{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false}},{"name":"@babel/runtime/regenerator","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"./../../node_modules/react-transform-hmr/lib/index.js","data":{"isAsync":false}},{"name":"../../aws-exports","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"react-native-dialog-input","data":{"isAsync":false}},{"name":"react-native-maps","data":{"isAsync":false}},{"name":"react-native-maps-directions","data":{"isAsync":false}},{"name":"react-native-google-maps-directions","data":{"isAsync":false}},{"name":"aws-amplify","data":{"isAsync":false}},{"name":"react-native-geocoding","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/regenerator\"));\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/createClass\"));\n\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n\n  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/getPrototypeOf\"));\n\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"@babel/runtime/helpers/inherits\"));\n\n  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8], \"react\"));\n\n  var _index = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9], \"./../../node_modules/react-transform-hmr/lib/index.js\"));\n\n  var _awsExports = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10], \"../../aws-exports\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[11], \"react-native\");\n\n  var _reactNativeDialogInput = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12], \"react-native-dialog-input\"));\n\n  var _reactNativeMaps = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13], \"react-native-maps\"));\n\n  var _reactNativeMapsDirections = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14], \"react-native-maps-directions\"));\n\n  var _reactNativeGoogleMapsDirections = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15], \"react-native-google-maps-directions\"));\n\n  var _awsAmplify = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[16], \"aws-amplify\"));\n\n  var _reactNativeGeocoding = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17], \"react-native-geocoding\"));\n\n  var _temp,\n      _jsxFileName = \"/home/carlsen/Desktop/TCC/Modules/RoutesModules/Routes.js\";\n\n  var _components = {\n    MapScreen: {\n      displayName: \"MapScreen\"\n    }\n  };\n\n  var _node_modulesReactTransformHmrLibIndexJs2 = (0, _index.default)({\n    filename: \"/home/carlsen/Desktop/TCC/Modules/RoutesModules/Routes.js\",\n    components: _components,\n    locals: [module],\n    imports: [_react.default]\n  });\n\n  function _wrapComponent(id) {\n    return function (Component) {\n      return _node_modulesReactTransformHmrLibIndexJs2(Component, id);\n    };\n  }\n\n  var GOOGLE_MAPS_APIKEY = _awsExports.default.GOOGLEAPI;\n  var routeAPI = 'http://vrp-dev.us-east-1.elasticbeanstalk.com/api/v1/vrp/route=';\n  var arr = [];\n  var backgroundColor = '#007256';\n\n  var _Dimensions$get = _reactNative.Dimensions.get('window'),\n      height = _Dimensions$get.height,\n      width = _Dimensions$get.width;\n\n  var MapScreen = _wrapComponent(\"MapScreen\")((_temp = function (_Component) {\n    (0, _inherits2.default)(MapScreen, _Component);\n\n    function MapScreen() {\n      var _getPrototypeOf2;\n\n      var _this;\n\n      (0, _classCallCheck2.default)(this, MapScreen);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(MapScreen)).call.apply(_getPrototypeOf2, [this].concat(args)));\n      _this.state = {\n        isDialogVisible: false,\n        origin: {\n          latitude: 42.3616132,\n          longitude: -71.0672576\n        },\n        destination: {\n          latitude: 42.3730591,\n          longitude: -71.033754\n        },\n        waypoints: {\n          latitude: 0,\n          longitude: 0\n        },\n        originText: '',\n        destinationText: '',\n        waypointsText: '',\n        RouteName: '',\n        hasRoute: false,\n        arrWaypoints: []\n      };\n\n      _this.getLocation = function () {\n        navigator.geolocation.getCurrentPosition(function (position) {\n          var newOrigin = {\n            latitude: position.coords.latitude,\n            longitude: position.coords.longitude\n          };\n          console.log('new origin');\n          console.log(newOrigin);\n\n          _this.setState({\n            origin: newOrigin\n          });\n        }, function (err) {\n          console.log('error');\n          console.log(err);\n        }, {\n          enableHighAccuracy: true,\n          timeout: 2000,\n          maximumAge: 1000\n        });\n      };\n\n      _this.saveButton = function () {\n        _this.setState({\n          isDialogVisible: true\n        });\n      };\n\n      _this.handleButton = function () {\n        var auxArray = [];\n        var fullAPI = routeAPI + \"Campinas|Rio+Janeiro|Sao+Paulo\" + '/' + 1;\n        fetch(fullAPI).then(function (response) {\n          return response.json();\n        }).then(function (data) {\n          data.Route[0].forEach(function (item, indice, array) {\n            var str = item.replace(\"+\", \" \");\n\n            if (indice == 0) {\n              this.setState({\n                originText: str\n              });\n              this.setState({\n                destinationText: str\n              });\n            } else {\n              auxArray.push(str);\n            }\n          });\n        });\n\n        if (_this.state.originText != '') {\n          _reactNativeGeocoding.default.init(GOOGLE_MAPS_APIKEY);\n\n          _reactNativeGeocoding.default.from(_this.state.originText).then(function (json) {\n            var location = json.results[0].geometry.location;\n            console.log(location);\n\n            _this.setState({\n              origin: {\n                latitude: location.lat,\n                longitude: location.lng\n              }\n            });\n          }).catch(function (error) {\n            return console.warn(error);\n          });\n\n          console.log(auxArray);\n          auxArray.forEach(function (item, indice, array) {\n            var _this2 = this;\n\n            console.log(\"Array \" + item);\n\n            _reactNativeGeocoding.default.init(GOOGLE_MAPS_APIKEY);\n\n            _reactNativeGeocoding.default.from(item).then(function (json) {\n              var location = json.results[0].geometry.location;\n              console.log(location);\n\n              _this2.setState({\n                waypoints: {\n                  latitude: location.lat,\n                  longitude: location.lng\n                }\n              });\n\n              arr.push(_this2.state.waypoints);\n\n              _this2.setState({\n                arrWaypoints: arr\n              });\n            }).catch(function (error) {\n              return console.warn(error);\n            });\n          });\n        } else {\n          alert(\"Digite a origem ! \");\n        }\n\n        if (_this.state.destinationText != '') {\n          _reactNativeGeocoding.default.init(GOOGLE_MAPS_APIKEY);\n\n          _reactNativeGeocoding.default.from(_this.state.destinationText).then(function (json) {\n            var location = json.results[0].geometry.location;\n            console.log(location);\n\n            _this.setState({\n              destination: {\n                latitude: location.lat,\n                longitude: location.lng\n              }\n            });\n          }).catch(function (error) {\n            return console.warn(error);\n          });\n        } else {\n          alert(\"Digite o destino ! \");\n        }\n      };\n\n      _this.handleGetGoogleMapDirections = function () {\n        var data = {\n          source: _this.state.origin,\n          destination: _this.state.destination,\n          waypoints: _this.state.arrWaypoints,\n          params: [{\n            key: \"travelmode\",\n            value: \"driving\"\n          }]\n        };\n        (0, _reactNativeGoogleMapsDirections.default)(data);\n      };\n\n      return _this;\n    }\n\n    (0, _createClass2.default)(MapScreen, [{\n      key: \"requestLocationPermission\",\n      value: function requestLocationPermission() {\n        var granted;\n        return _regenerator.default.async(function requestLocationPermission$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return _regenerator.default.awrap(_reactNative.PermissionsAndroid.request(_reactNative.PermissionsAndroid.PERMISSIONS.ACCESS_FINE_LOCATION, {\n                  'title': 'App Location Permission',\n                  'message': 'Maps App needs access to your map ' + 'so you can be navigated.'\n                }));\n\n              case 3:\n                granted = _context.sent;\n\n                if (!(granted === _reactNative.PermissionsAndroid.RESULTS.GRANTED)) {\n                  _context.next = 9;\n                  break;\n                }\n\n                console.log(\"You can use the location\");\n                return _context.abrupt(\"return\", true);\n\n              case 9:\n                console.log(\"location permission denied\");\n                return _context.abrupt(\"return\", false);\n\n              case 11:\n                _context.next = 16;\n                break;\n\n              case 13:\n                _context.prev = 13;\n                _context.t0 = _context[\"catch\"](0);\n                console.warn(_context.t0);\n\n              case 16:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, null, [[0, 13]]);\n      }\n    }, {\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        var isGranted;\n        return _regenerator.default.async(function componentDidMount$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return _regenerator.default.awrap(this.requestLocationPermission());\n\n              case 2:\n                isGranted = _context2.sent;\n\n                if (isGranted) {\n                  this.getLocation();\n                }\n\n                this.getLocation();\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, null, this);\n      }\n    }, {\n      key: \"saveRoutes\",\n      value: function saveRoutes(api, path, objRoutes) {\n        var apiResponse;\n        return _regenerator.default.async(function saveRoutes$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                _context3.next = 3;\n                return _regenerator.default.awrap(_awsAmplify.API.put(api, path, objRoutes));\n\n              case 3:\n                apiResponse = _context3.sent;\n                console.log(\"response from saving routes: \" + apiResponse);\n                this.setState({\n                  apiResponse: apiResponse\n                });\n                return _context3.abrupt(\"return\", apiResponse);\n\n              case 9:\n                _context3.prev = 9;\n                _context3.t0 = _context3[\"catch\"](0);\n                console.log(_context3.t0);\n\n              case 12:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, null, this, [[0, 9]]);\n      }\n    }, {\n      key: \"getRoutes\",\n      value: function getRoutes(user) {\n        var path, _apiResponse;\n\n        return _regenerator.default.async(function getRoutes$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                path = \"/getRoute/object/\" + user;\n                _context4.prev = 1;\n                _context4.next = 4;\n                return _regenerator.default.awrap(_awsAmplify.API.get(\"getRoute\", path));\n\n              case 4:\n                _apiResponse = _context4.sent;\n                console.log(\"response from get routes: \" + _apiResponse.routeName);\n                this.setState({\n                  apiResponse: _apiResponse\n                });\n\n                if (_apiResponse.routeName != undefined) {\n                  this.setState({\n                    RouteName: _apiResponse.routeName\n                  });\n                  console.log(this.state.RouteName);\n                  this.setState({\n                    hasRoute: true\n                  });\n                  console.log(\"List Route: \" + this.state.RouteName);\n                } else {\n                  this.setState({\n                    hasRoute: false\n                  });\n                }\n\n                return _context4.abrupt(\"return\", _apiResponse);\n\n              case 11:\n                _context4.prev = 11;\n                _context4.t0 = _context4[\"catch\"](1);\n                console.log(_context4.t0);\n\n              case 14:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, null, this, [[1, 11]]);\n      }\n    }, {\n      key: \"sendInput\",\n      value: function sendInput(inputText) {\n        var user, origin, destination, waypoints, routeName, objRoutes, objRoutesAux;\n        return _regenerator.default.async(function sendInput$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return _regenerator.default.awrap(this.setState({\n                  isDialogVisible: false\n                }));\n\n              case 2:\n                user = _awsAmplify.Auth.user.username;\n                origin = this.state.originText;\n                destination = this.state.destinationText;\n                waypoints = this.state.waypointsText;\n                routeName = inputText;\n                _context5.next = 9;\n                return _regenerator.default.awrap({\n                  body: {\n                    \"routeName\": routeName,\n                    \"user\": user,\n                    \"origin\": origin,\n                    \"destination\": destination,\n                    \"waypoints\": waypoints\n                  }\n                });\n\n              case 9:\n                objRoutes = _context5.sent;\n                _context5.next = 12;\n                return _regenerator.default.awrap(this.saveRoutes(\"Routes\", \"/routes\", objRoutes));\n\n              case 12:\n                _context5.next = 14;\n                return _regenerator.default.awrap(this.getRoutes(user));\n\n              case 14:\n                _context5.next = 16;\n                return _regenerator.default.awrap({\n                  body: {\n                    \"user\": user,\n                    \"routeName\": this.state.RouteName\n                  }\n                });\n\n              case 16:\n                objRoutesAux = _context5.sent;\n                _context5.next = 19;\n                return _regenerator.default.awrap(this.state.hasRoute);\n\n              case 19:\n                _context5.t0 = _context5.sent;\n\n                if (!(_context5.t0 == true)) {\n                  _context5.next = 24;\n                  break;\n                }\n\n                objRoutesAux.body.routeName.push(routeName);\n                _context5.next = 25;\n                break;\n\n              case 24:\n                objRoutesAux.body.routeName = [routeName];\n\n              case 25:\n                _context5.next = 27;\n                return _regenerator.default.awrap(this.saveRoutes(\"getRoute\", \"/getRoute\", objRoutesAux));\n\n              case 27:\n                alert('Route saved successfully');\n\n              case 28:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, null, this);\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var _this3 = this;\n\n        return _react.default.createElement(_reactNative.KeyboardAvoidingView, {\n          style: styles.container,\n          behavior: \"padding\",\n          enabled: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 310\n          }\n        }, _react.default.createElement(_reactNativeMaps.default, {\n          ref: function ref(map) {\n            return _this3.mapView = map;\n          },\n          style: styles.map,\n          region: {\n            latitude: (this.state.origin.latitude + this.state.destination.latitude) / 2,\n            longitude: (this.state.origin.longitude + this.state.destination.longitude) / 2,\n            latitudeDelta: Math.abs(this.state.origin.latitude - this.state.destination.latitude) + Math.abs(this.state.origin.latitude - this.state.destination.latitude) * .1,\n            longitudeDelta: Math.abs(this.state.origin.longitude - this.state.destination.longitude) + Math.abs(this.state.origin.longitude - this.state.destination.longitude) * .1\n          },\n          loadingEnabled: true,\n          toolbarEnabled: true,\n          zoomControlEnabled: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 312\n          }\n        }, _react.default.createElement(_reactNativeMaps.default.Marker, {\n          coordinate: this.state.destination,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 330\n          }\n        }, _react.default.createElement(_reactNativeMaps.default.Callout, {\n          onPress: this.handleGetGoogleMapDirections,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 333\n          }\n        }, _react.default.createElement(_reactNative.Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 334\n          }\n        }, \"Press to Get Direction\"))), _react.default.createElement(_reactNativeMaps.default.Marker, {\n          coordinate: this.state.waypoints,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 338\n          }\n        }), _react.default.createElement(_reactNativeMaps.default.Marker, {\n          coordinate: this.state.origin,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 343\n          }\n        }, _react.default.createElement(_reactNativeMaps.default.Callout, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 346\n          }\n        }, _react.default.createElement(_reactNative.Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 347\n          }\n        }, \"This is where you are\"))), _react.default.createElement(_reactNativeMapsDirections.default, {\n          origin: this.state.origin,\n          waypoints: this.state.arrWaypoints,\n          destination: this.state.destination,\n          apikey: GOOGLE_MAPS_APIKEY,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 351\n          }\n        })), _react.default.createElement(_reactNativeDialogInput.default, {\n          isDialogVisible: this.state.isDialogVisible,\n          title: \"Route Name\",\n          message: \"Enter your route name\",\n          hintInput: \"Enter your route name\",\n          submitInput: function submitInput(inputText) {\n            _this3.sendInput(inputText);\n          },\n          closeDialog: function closeDialog() {\n            _this3.setState({\n              isDialogVisible: false\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 360\n          }\n        }), _react.default.createElement(_reactNative.TextInput, {\n          style: styles.input,\n          onChangeText: function onChangeText(text) {\n            return _this3.setState({\n              originText: text\n            });\n          },\n          placeholder: \"Origin\",\n          value: this.state.originText,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 368\n          }\n        }), _react.default.createElement(_reactNative.TextInput, {\n          style: styles.input,\n          onChangeText: function onChangeText(text) {\n            return _this3.setState({\n              destinationText: text\n            });\n          },\n          placeholder: \"Destination\",\n          value: this.state.destinationText,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 381\n          }\n        }), _react.default.createElement(_reactNative.TouchableOpacity, {\n          style: styles.button,\n          onPress: this.handleButton,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 388\n          }\n        }, _react.default.createElement(_reactNative.Text, {\n          style: styles.buttonText,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 390\n          }\n        }, \"Search Route\")), _react.default.createElement(_reactNative.TouchableOpacity, {\n          style: styles.button,\n          onPress: this.saveButton,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 394\n          }\n        }, _react.default.createElement(_reactNative.Text, {\n          style: styles.buttonText,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 396\n          }\n        }, \"Save Route\")));\n      }\n    }]);\n    return MapScreen;\n  }(_react.Component), _temp));\n\n  var _default2 = MapScreen;\n  exports.default = _default2;\n\n  var styles = _reactNative.StyleSheet.create({\n    container: {\n      flex: 1,\n      justifyContent: 'flex-end',\n      alignItems: 'flex-end'\n    },\n    map: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0\n    },\n    button: {\n      width: width - 100,\n      height: 40,\n      backgroundColor: '#FFF',\n      alignItems: 'center',\n      justifyContent: 'center',\n      borderWidth: 1,\n      borderColor: '#000',\n      borderRadius: 7,\n      marginBottom: 15,\n      marginHorizontal: 20\n    },\n    buttonText: {\n      color: '#000',\n      fontWeight: 'bold'\n    },\n    inputContainer: {\n      width: '100%',\n      maxHeight: 200\n    },\n    input: {\n      width: width - 40,\n      maxHeight: 200,\n      backgroundColor: '#FFF',\n      marginBottom: 15,\n      marginHorizontal: 20\n    }\n  });\n});","map":[[23,0,2,0],[27,0,3,0],[29,0,4,0],[31,0,15,0],[33,0,16,0],[35,0,17,0],[37,0,18,0],[39,0,20,0],[41,0,21,0],[65,0,23,0],[65,6,23,6,"GOOGLE_MAPS_APIKEY"],[65,24,23,24],[65,27,23,27,"AWSConfig"],[65,47,23,37,"GOOGLEAPI"],[65,56,23,0],[66,0,24,0],[66,6,24,6,"routeAPI"],[66,14,24,14],[66,17,24,17],[66,82,24,0],[67,0,25,0],[67,6,25,6,"arr"],[67,9,25,9],[67,12,25,12],[67,14,25,0],[68,0,27,0],[68,6,27,6,"backgroundColor"],[68,21,27,21],[68,24,27,24],[68,33,27,0],[70,24,29,26,"Dimensions"],[70,48,29,37,"get"],[70,51,29,26],[70,52,29,41],[70,60,29,26],[70,61],[71,6,29,8,"height"],[71,12],[71,31,29,8,"height"],[71,37],[72,6,29,16,"width"],[72,11],[72,30,29,16,"width"],[72,35],[89,12,33,4,"state"],[89,17],[89,20,33,12],[90,0,34,8,"isDialogVisible"],[90,8,34,8,"isDialogVisible"],[90,23,34,23],[90,25,34,24],[90,30,33,12],[91,0,35,8,"origin"],[91,8,35,8,"origin"],[91,14,35,14],[91,16,35,16],[92,0,35,18,"latitude"],[92,10,35,18,"latitude"],[92,18,35,26],[92,20,35,28],[92,30,35,16],[93,0,35,40,"longitude"],[93,10,35,40,"longitude"],[93,19,35,49],[93,21,35,51],[93,22,35,52],[94,0,35,16],[94,9,33,12],[95,0,36,8,"destination"],[95,8,36,8,"destination"],[95,19,36,19],[95,21,36,21],[96,0,36,23,"latitude"],[96,10,36,23,"latitude"],[96,18,36,31],[96,20,36,33],[96,30,36,21],[97,0,36,45,"longitude"],[97,10,36,45,"longitude"],[97,19,36,54],[97,21,36,56],[97,22,36,57],[98,0,36,21],[98,9,33,12],[99,0,37,8,"waypoints"],[99,8,37,8,"waypoints"],[99,17,37,17],[99,19,37,18],[100,0,37,20,"latitude"],[100,10,37,20,"latitude"],[100,18,37,28],[100,20,37,30],[100,21,37,18],[101,0,37,33,"longitude"],[101,10,37,33,"longitude"],[101,19,37,42],[101,21,37,44],[102,0,37,18],[102,9,33,12],[103,0,38,8,"originText"],[103,8,38,8,"originText"],[103,18,38,18],[103,20,38,20],[103,22,33,12],[104,0,39,8,"destinationText"],[104,8,39,8,"destinationText"],[104,23,39,23],[104,25,39,25],[104,27,33,12],[105,0,40,8,"waypointsText"],[105,8,40,8,"waypointsText"],[105,21,40,21],[105,23,40,22],[105,25,33,12],[106,0,41,8,"RouteName"],[106,8,41,8,"RouteName"],[106,17,41,17],[106,19,41,18],[106,21,33,12],[107,0,42,8,"hasRoute"],[107,8,42,8,"hasRoute"],[107,16,42,16],[107,18,42,18],[107,23,33,12],[108,0,43,8,"arrWaypoints"],[108,8,43,8,"arrWaypoints"],[108,20,43,20],[108,22,43,21],[109,0,33,12],[109,7],[111,12,84,6,"getLocation"],[111,23],[111,26,84,20],[111,38,84,26],[112,0,85,8,"navigator"],[112,8,85,8,"navigator"],[112,17,85,17],[112,18,85,18,"geolocation"],[112,29,85,8],[112,30,85,30,"getCurrentPosition"],[112,48,85,8],[112,49,85,49],[112,59,85,50,"position"],[112,67,85,49],[112,69,85,63],[113,0,86,12],[113,14,86,16,"newOrigin"],[113,23,86,25],[113,26,86,28],[114,0,87,16,"latitude"],[114,12,87,16,"latitude"],[114,20,87,24],[114,22,87,26,"position"],[114,30,87,34],[114,31,87,35,"coords"],[114,37,87,26],[114,38,87,42,"latitude"],[114,46,86,28],[115,0,88,16,"longitude"],[115,12,88,16,"longitude"],[115,21,88,25],[115,23,88,27,"position"],[115,31,88,35],[115,32,88,36,"coords"],[115,38,88,27],[115,39,88,43,"longitude"],[116,0,86,28],[116,11,86,12],[117,0,91,12,"console"],[117,10,91,12,"console"],[117,17,91,19],[117,18,91,20,"log"],[117,21,91,12],[117,22,91,24],[117,34,91,12],[118,0,92,12,"console"],[118,10,92,12,"console"],[118,17,92,19],[118,18,92,20,"log"],[118,21,92,12],[118,22,92,24,"newOrigin"],[118,31,92,12],[120,0,94,12],[120,16,94,17,"setState"],[120,24,94,12],[120,25,94,26],[121,0,95,16,"origin"],[121,12,95,16,"origin"],[121,18,95,22],[121,20,95,24,"newOrigin"],[122,0,94,26],[122,11,94,12],[123,0,98,9],[123,9,85,8],[123,11,98,11],[123,21,98,12,"err"],[123,24,98,11],[123,26,98,20],[124,0,99,12,"console"],[124,10,99,12,"console"],[124,17,99,19],[124,18,99,20,"log"],[124,21,99,12],[124,22,99,24],[124,29,99,12],[125,0,100,12,"console"],[125,10,100,12,"console"],[125,17,100,19],[125,18,100,20,"log"],[125,21,100,12],[125,22,100,24,"err"],[125,25,100,12],[126,0,102,9],[126,9,85,8],[126,11,102,11],[127,0,102,12,"enableHighAccuracy"],[127,10,102,12,"enableHighAccuracy"],[127,28,102,30],[127,30,102,32],[127,34,102,11],[128,0,102,38,"timeout"],[128,10,102,38,"timeout"],[128,17,102,45],[128,19,102,47],[128,23,102,11],[129,0,102,53,"maximumAge"],[129,10,102,53,"maximumAge"],[129,20,102,63],[129,22,102,65],[130,0,102,11],[130,9,85,8],[131,0,104,7],[131,7],[133,12,121,6,"saveButton"],[133,22],[133,25,121,19],[133,37,121,25],[134,0,122,10],[134,14,122,15,"setState"],[134,22,122,10],[134,23,122,24],[135,0,122,25,"isDialogVisible"],[135,10,122,25,"isDialogVisible"],[135,25,122,40],[135,27,122,41],[136,0,122,24],[136,9,122,10],[137,0,123,7],[137,7],[139,12,204,6,"handleButton"],[139,24],[139,27,204,21],[139,39,204,27],[140,0,205,8],[140,12,205,12,"auxArray"],[140,20,205,20],[140,23,205,23],[140,25,205,8],[141,0,206,8],[141,12,206,14,"fullAPI"],[141,19,206,21],[141,22,206,24,"routeAPI"],[141,30,206,32],[141,33,206,35],[141,65,206,24],[141,68,206,70],[141,71,206,24],[141,74,206,76],[141,75,206,8],[142,0,207,8,"fetch"],[142,8,207,8,"fetch"],[142,13,207,13],[142,14,207,14,"fullAPI"],[142,21,207,13],[142,22,207,8],[142,23,207,23,"then"],[142,27,207,8],[142,28,207,28],[142,38,207,28,"response"],[142,46,207,36],[143,0,207,36],[143,17,207,40,"response"],[143,25,207,48],[143,26,207,49,"json"],[143,30,207,40],[143,32,207,36],[144,0,207,36],[144,9,207,8],[144,11,207,57,"then"],[144,15,207,8],[144,16,207,62],[144,26,207,62,"data"],[144,30,207,66],[144,32,207,70],[145,0,208,8,"data"],[145,10,208,8,"data"],[145,14,208,12],[145,15,208,13,"Route"],[145,20,208,8],[145,21,208,19],[145,22,208,8],[145,24,208,22,"forEach"],[145,31,208,8],[145,32,208,30],[145,42,208,40,"item"],[145,46,208,30],[145,48,208,46,"indice"],[145,54,208,30],[145,56,208,54,"array"],[145,61,208,30],[145,63,208,61],[146,0,209,10],[146,16,209,14,"str"],[146,19,209,17],[146,22,209,20,"item"],[146,26,209,24],[146,27,209,25,"replace"],[146,34,209,20],[146,35,209,33],[146,38,209,20],[146,40,209,37],[146,43,209,20],[146,44,209,10],[148,0,210,10],[148,16,210,13,"indice"],[148,22,210,19],[148,26,210,23],[148,27,210,10],[148,29,210,25],[149,0,212,11],[149,19,212,16,"setState"],[149,27,212,11],[149,28,212,25],[150,0,212,26,"originText"],[150,16,212,26,"originText"],[150,26,212,36],[150,28,212,37,"str"],[151,0,212,25],[151,15,212,11],[152,0,213,11],[152,19,213,16,"setState"],[152,27,213,11],[152,28,213,25],[153,0,213,26,"destinationText"],[153,16,213,26,"destinationText"],[153,31,213,41],[153,33,213,42,"str"],[154,0,213,25],[154,15,213,11],[155,0,216,11],[155,13,210,10],[155,19,216,15],[156,0,217,12,"auxArray"],[156,14,217,12,"auxArray"],[156,22,217,20],[156,23,217,21,"push"],[156,27,217,12],[156,28,217,26,"str"],[156,31,217,12],[157,0,218,11],[158,0,219,9],[158,11,208,8],[159,0,221,9],[159,9,207,8],[161,0,224,8],[161,12,224,11],[161,18,224,16,"state"],[161,23,224,11],[161,24,224,22,"originText"],[161,34,224,11],[161,38,224,36],[161,40,224,8],[161,42,224,40],[162,0,226,12,"Geocoder"],[162,40,226,21,"init"],[162,44,226,12],[162,45,226,26,"GOOGLE_MAPS_APIKEY"],[162,63,226,12],[164,0,228,12,"Geocoder"],[164,40,228,21,"from"],[164,44,228,12],[164,45,228,26],[164,51,228,31,"state"],[164,56,228,26],[164,57,228,37,"originText"],[164,67,228,12],[164,69,229,17,"then"],[164,73,228,12],[164,74,229,22],[164,84,229,22,"json"],[164,88,229,26],[164,90,229,30],[165,0,230,20],[165,16,230,24,"location"],[165,24,230,32],[165,27,230,35,"json"],[165,31,230,39],[165,32,230,40,"results"],[165,39,230,35],[165,40,230,48],[165,41,230,35],[165,43,230,51,"geometry"],[165,51,230,35],[165,52,230,60,"location"],[165,60,230,20],[166,0,231,20,"console"],[166,12,231,20,"console"],[166,19,231,27],[166,20,231,28,"log"],[166,23,231,20],[166,24,231,32,"location"],[166,32,231,20],[168,0,232,20],[168,18,232,25,"setState"],[168,26,232,20],[168,27,232,34],[169,0,232,36,"origin"],[169,14,232,36,"origin"],[169,20,232,42],[169,22,232,44],[170,0,232,46,"latitude"],[170,16,232,46,"latitude"],[170,24,232,54],[170,26,232,56,"location"],[170,34,232,64],[170,35,232,65,"lat"],[170,38,232,44],[171,0,232,70,"longitude"],[171,16,232,70,"longitude"],[171,25,232,79],[171,27,232,81,"location"],[171,35,232,89],[171,36,232,90,"lng"],[172,0,232,44],[173,0,232,34],[173,13,232,20],[174,0,234,13],[174,11,228,12],[174,13,235,13,"catch"],[174,18,228,12],[174,19,235,19],[174,29,235,19,"error"],[174,34,235,24],[175,0,235,24],[175,19,235,28,"console"],[175,26,235,35],[175,27,235,36,"warn"],[175,31,235,28],[175,32,235,41,"error"],[175,37,235,28],[175,38,235,24],[176,0,235,24],[176,11,228,12],[178,0,236,12,"console"],[178,10,236,12,"console"],[178,17,236,19],[178,18,236,20,"log"],[178,21,236,12],[178,22,236,24,"auxArray"],[178,30,236,12],[179,0,238,12,"auxArray"],[179,10,238,12,"auxArray"],[179,18,238,20],[179,19,238,21,"forEach"],[179,26,238,12],[179,27,238,29],[179,37,238,39,"item"],[179,41,238,29],[179,43,238,45,"indice"],[179,49,238,29],[179,51,238,53,"array"],[179,56,238,29],[179,58,238,60],[180,0,238,60],[182,0,239,14,"console"],[182,12,239,14,"console"],[182,19,239,21],[182,20,239,22,"log"],[182,23,239,14],[182,24,239,26],[182,35,239,37,"item"],[182,39,239,14],[184,0,240,14,"Geocoder"],[184,42,240,23,"init"],[184,46,240,14],[184,47,240,28,"GOOGLE_MAPS_APIKEY"],[184,65,240,14],[186,0,241,14,"Geocoder"],[186,42,241,23,"from"],[186,46,241,14],[186,47,241,28,"item"],[186,51,241,14],[186,53,242,15,"then"],[186,57,241,14],[186,58,242,20],[186,68,242,20,"json"],[186,72,242,24],[186,74,242,28],[187,0,243,18],[187,18,243,22,"location"],[187,26,243,30],[187,29,243,33,"json"],[187,33,243,37],[187,34,243,38,"results"],[187,41,243,33],[187,42,243,46],[187,43,243,33],[187,45,243,49,"geometry"],[187,53,243,33],[187,54,243,58,"location"],[187,62,243,18],[188,0,244,18,"console"],[188,14,244,18,"console"],[188,21,244,25],[188,22,244,26,"log"],[188,25,244,18],[188,26,244,30,"location"],[188,34,244,18],[190,0,245,18],[190,14,245,18],[190,20,245,22],[190,21,245,23,"setState"],[190,29,245,18],[190,30,245,32],[191,0,245,34,"waypoints"],[191,16,245,34,"waypoints"],[191,25,245,43],[191,27,245,45],[192,0,245,47,"latitude"],[192,18,245,47,"latitude"],[192,26,245,55],[192,28,245,57,"location"],[192,36,245,65],[192,37,245,66,"lat"],[192,40,245,45],[193,0,245,71,"longitude"],[193,18,245,71,"longitude"],[193,27,245,80],[193,29,245,82,"location"],[193,37,245,90],[193,38,245,91,"lng"],[194,0,245,45],[195,0,245,32],[195,15,245,18],[197,0,246,18,"arr"],[197,14,246,18,"arr"],[197,17,246,21],[197,18,246,22,"push"],[197,22,246,18],[197,23,246,27],[197,29,246,31],[197,30,246,32,"state"],[197,35,246,27],[197,36,246,38,"waypoints"],[197,45,246,18],[199,0,247,18],[199,14,247,18],[199,20,247,22],[199,21,247,23,"setState"],[199,29,247,18],[199,30,247,32],[200,0,247,33,"arrWaypoints"],[200,16,247,33,"arrWaypoints"],[200,28,247,45],[200,30,247,46,"arr"],[201,0,247,32],[201,15,247,18],[202,0,249,11],[202,13,241,14],[202,15,250,11,"catch"],[202,20,241,14],[202,21,250,17],[202,31,250,17,"error"],[202,36,250,22],[203,0,250,22],[203,21,250,26,"console"],[203,28,250,33],[203,29,250,34,"warn"],[203,33,250,26],[203,34,250,39,"error"],[203,39,250,26],[203,40,250,22],[204,0,250,22],[204,13,241,14],[205,0,252,13],[205,11,238,12],[206,0,255,9],[206,9,224,8],[206,15,257,13],[207,0,259,12,"alert"],[207,10,259,12,"alert"],[207,15,259,17],[207,16,259,18],[207,36,259,17],[207,37,259,12],[208,0,261,9],[210,0,263,8],[210,12,263,11],[210,18,263,16,"state"],[210,23,263,11],[210,24,263,22,"destinationText"],[210,39,263,11],[210,43,263,41],[210,45,263,8],[210,47,263,45],[211,0,265,12,"Geocoder"],[211,40,265,21,"init"],[211,44,265,12],[211,45,265,26,"GOOGLE_MAPS_APIKEY"],[211,63,265,12],[213,0,267,12,"Geocoder"],[213,40,267,21,"from"],[213,44,267,12],[213,45,267,26],[213,51,267,31,"state"],[213,56,267,26],[213,57,267,37,"destinationText"],[213,72,267,12],[213,74,268,13,"then"],[213,78,267,12],[213,79,268,18],[213,89,268,18,"json"],[213,93,268,22],[213,95,268,26],[214,0,269,16],[214,16,269,20,"location"],[214,24,269,28],[214,27,269,31,"json"],[214,31,269,35],[214,32,269,36,"results"],[214,39,269,31],[214,40,269,44],[214,41,269,31],[214,43,269,47,"geometry"],[214,51,269,31],[214,52,269,56,"location"],[214,60,269,16],[215,0,270,16,"console"],[215,12,270,16,"console"],[215,19,270,23],[215,20,270,24,"log"],[215,23,270,16],[215,24,270,28,"location"],[215,32,270,16],[217,0,271,16],[217,18,271,21,"setState"],[217,26,271,16],[217,27,271,30],[218,0,271,32,"destination"],[218,14,271,32,"destination"],[218,25,271,43],[218,27,271,45],[219,0,271,47,"latitude"],[219,16,271,47,"latitude"],[219,24,271,55],[219,26,271,57,"location"],[219,34,271,65],[219,35,271,66,"lat"],[219,38,271,45],[220,0,271,71,"longitude"],[220,16,271,71,"longitude"],[220,25,271,80],[220,27,271,82,"location"],[220,35,271,90],[220,36,271,91,"lng"],[221,0,271,45],[222,0,271,30],[222,13,271,16],[223,0,273,13],[223,11,267,12],[223,13,274,13,"catch"],[223,18,267,12],[223,19,274,19],[223,29,274,19,"error"],[223,34,274,24],[224,0,274,24],[224,19,274,28,"console"],[224,26,274,35],[224,27,274,36,"warn"],[224,31,274,28],[224,32,274,41,"error"],[224,37,274,28],[224,38,274,24],[225,0,274,24],[225,11,267,12],[226,0,275,9],[226,9,263,8],[226,15,277,13],[227,0,279,12,"alert"],[227,10,279,12,"alert"],[227,15,279,17],[227,16,279,18],[227,37,279,17],[227,38,279,12],[228,0,281,9],[229,0,283,7],[229,7],[231,12,287,6,"handleGetGoogleMapDirections"],[231,40],[231,43,287,37],[231,55,287,43],[232,0,289,8],[232,12,289,14,"data"],[232,16,289,18],[232,19,289,21],[233,0,291,12,"source"],[233,10,291,12,"source"],[233,16,291,18],[233,18,291,20],[233,24,291,25,"state"],[233,29,291,20],[233,30,291,31,"origin"],[233,36,289,21],[234,0,292,12,"destination"],[234,10,292,12,"destination"],[234,21,292,23],[234,23,292,25],[234,29,292,30,"state"],[234,34,292,25],[234,35,292,36,"destination"],[234,46,289,21],[235,0,293,12,"waypoints"],[235,10,293,12,"waypoints"],[235,19,293,21],[235,21,293,23],[235,27,293,28,"state"],[235,32,293,23],[235,33,293,34,"arrWaypoints"],[235,45,289,21],[236,0,294,12,"params"],[236,10,294,12,"params"],[236,16,294,18],[236,18,294,20],[236,19,295,16],[237,0,296,18,"key"],[237,12,296,18,"key"],[237,15,296,21],[237,17,296,23],[237,29,295,16],[238,0,297,18,"value"],[238,12,297,18,"value"],[238,17,297,23],[238,19,297,25],[239,0,295,16],[239,11,294,20],[240,0,289,21],[240,9,289,8],[241,0,303,8],[241,54,303,22,"data"],[241,58,303,8],[242,0,305,7],[242,7],[257,50,60,34,"PermissionsAndroid"],[257,82,60,53,"request"],[257,89,60,34],[257,90,61,16,"PermissionsAndroid"],[257,122,61,35,"PERMISSIONS"],[257,133,61,16],[257,134,61,47,"ACCESS_FINE_LOCATION"],[257,154,60,34],[257,156,62,16],[258,0,63,20],[258,27,63,29],[258,52,62,16],[259,0,64,20],[259,29,64,31],[259,68,65,24],[260,0,62,16],[260,17,60,34],[260,18],[263,0,60,18,"granted"],[263,16,60,18,"granted"],[263,23],[265,22,69,16,"granted"],[265,29,69,23],[265,34,69,28,"PermissionsAndroid"],[265,66,69,47,"RESULTS"],[265,73,69,28],[265,74,69,55,"GRANTED"],[265,81],[270,0,70,16,"console"],[270,16,70,16,"console"],[270,23,70,23],[270,24,70,24,"log"],[270,27,70,16],[270,28,70,28],[270,54,70,16],[271,49,71,23],[271,53],[274,0,74,16,"console"],[274,16,74,16,"console"],[274,23,74,23],[274,24,74,24,"log"],[274,27,74,16],[274,28,74,28],[274,56,74,16],[275,49,75,23],[275,54],[284,0,79,12,"console"],[284,16,79,12,"console"],[284,23,79,19],[284,24,79,20,"warn"],[284,28,79,12],[302,50,107,30],[302,55,107,35,"requestLocationPermission"],[302,80,107,30],[302,82],[305,0,107,12,"isGranted"],[305,16,107,12,"isGranted"],[305,25],[307,0,109,8],[307,20,109,12,"isGranted"],[307,29,109,8],[307,31,109,23],[308,0,110,12],[308,23,110,17,"getLocation"],[308,34,110,12],[309,0,111,9],[311,0,113,8],[311,21,113,13,"getLocation"],[311,32,113,8],[322,33,126,24,"api"],[322,36],[322,38,126,28,"path"],[322,42],[322,44,126,33,"objRoutes"],[322,53],[330,50,128,36,"API"],[330,66,128,40,"put"],[330,69,128,36],[330,70,128,44,"api"],[330,73,128,36],[330,75,128,49,"path"],[330,79,128,36],[330,81,128,55,"objRoutes"],[330,90,128,36],[330,91],[333,0,128,16,"apiResponse"],[333,16,128,16,"apiResponse"],[333,27],[334,0,129,10,"console"],[334,16,129,10,"console"],[334,23,129,17],[334,24,129,18,"log"],[334,27,129,10],[334,28,129,22],[334,62,129,56,"apiResponse"],[334,73,129,10],[335,0,130,10],[335,21,130,15,"setState"],[335,29,130,10],[335,30,130,24],[336,0,130,25,"apiResponse"],[336,18,130,25,"apiResponse"],[336,29,130,36],[336,31,130,25,"apiResponse"],[337,0,130,24],[337,17,130,10],[338,50,131,17,"apiResponse"],[338,61],[343,0,133,10,"console"],[343,16,133,10,"console"],[343,23,133,17],[343,24,133,18,"log"],[343,27,133,10],[354,32,138,22,"user"],[354,36],[361,0,139,12,"path"],[361,16,139,12,"path"],[361,20],[361,23,139,19],[361,45,139,41,"user"],[361,49],[364,50,141,36,"API"],[364,66,141,40,"get"],[364,69,141,36],[364,70,141,44],[364,80,141,36],[364,82,141,56,"path"],[364,86,141,36],[364,87],[367,0,141,16,"apiResponse"],[367,16,141,16,"apiResponse"],[367,28],[368,0,142,10,"console"],[368,16,142,10,"console"],[368,23,142,17],[368,24,142,18,"log"],[368,27,142,10],[368,28,142,22],[368,59,142,53,"apiResponse"],[368,71,142,64],[368,72,142,65,"routeName"],[368,81,142,10],[369,0,143,10],[369,21,143,15,"setState"],[369,29,143,10],[369,30,143,24],[370,0,143,25,"apiResponse"],[370,18,143,25,"apiResponse"],[370,29,143,36],[370,31,143,25,"apiResponse"],[371,0,143,24],[371,17,143,10],[373,0,144,10],[373,20,144,13,"apiResponse"],[373,32,144,24],[373,33,144,25,"routeName"],[373,42,144,13],[373,46,144,38,"undefined"],[373,55,144,10],[373,57,144,49],[374,0,145,12],[374,23,145,17,"setState"],[374,31,145,12],[374,32,145,26],[375,0,145,27,"RouteName"],[375,20,145,27,"RouteName"],[375,29,145,36],[375,31,145,37,"apiResponse"],[375,43,145,48],[375,44,145,49,"routeName"],[376,0,145,26],[376,19,145,12],[377,0,146,12,"console"],[377,18,146,12,"console"],[377,25,146,19],[377,26,146,20,"log"],[377,29,146,12],[377,30,146,24],[377,35,146,29,"state"],[377,40,146,24],[377,41,146,35,"RouteName"],[377,50,146,12],[378,0,147,12],[378,23,147,17,"setState"],[378,31,147,12],[378,32,147,26],[379,0,147,27,"hasRoute"],[379,20,147,27,"hasRoute"],[379,28,147,35],[379,30,147,36],[380,0,147,26],[380,19,147,12],[381,0,148,12,"console"],[381,18,148,12,"console"],[381,25,148,19],[381,26,148,20,"log"],[381,29,148,12],[381,30,148,24],[381,47,148,41],[381,52,148,46,"state"],[381,57,148,41],[381,58,148,52,"RouteName"],[381,67,148,12],[382,0,149,11],[382,17,144,10],[382,23,149,15],[383,0,150,12],[383,23,150,17,"setState"],[383,31,150,12],[383,32,150,26],[384,0,150,27,"hasRoute"],[384,20,150,27,"hasRoute"],[384,28,150,35],[384,30,150,36],[385,0,150,26],[385,19,150,12],[386,0,152,11],[388,50,153,17,"apiResponse"],[388,62],[393,0,155,10,"console"],[393,16,155,10,"console"],[393,23,155,17],[393,24,155,18,"log"],[393,27,155,10],[404,32,162,24,"inputText"],[404,41],[411,50,163,14],[411,55,163,19,"setState"],[411,63,163,14],[411,64,163,28],[412,0,163,29,"isDialogVisible"],[412,18,163,29,"isDialogVisible"],[412,33,163,44],[412,35,163,45],[413,0,163,28],[413,17,163,14],[413,18],[416,0,165,12,"user"],[416,16,165,12,"user"],[416,20],[416,23,165,19,"Auth"],[416,40,165,24,"user"],[416,44,165,19],[416,45,165,29,"username"],[416,53],[417,0,166,12,"origin"],[417,16,166,12,"origin"],[417,22],[417,25,166,21],[417,30,166,26,"state"],[417,35,166,21],[417,36,166,32,"originText"],[417,46],[418,0,167,12,"destination"],[418,16,167,12,"destination"],[418,27],[418,30,167,26],[418,35,167,31,"state"],[418,40,167,26],[418,41,167,37,"destinationText"],[418,56],[419,0,168,12,"waypoints"],[419,16,168,12,"waypoints"],[419,25],[419,28,168,24],[419,33,168,29,"state"],[419,38,168,24],[419,39,168,35,"waypointsText"],[419,52],[420,0,169,12,"routeName"],[420,16,169,12,"routeName"],[420,25],[420,28,169,24,"inputText"],[420,37],[422,50,171,31],[423,0,172,10,"body"],[423,18,172,10,"body"],[423,22,172,14],[423,24,172,16],[424,0,173,12],[424,33,173,25,"routeName"],[424,42,172,16],[425,0,174,12],[425,28,174,20,"user"],[425,32,172,16],[426,0,175,12],[426,30,175,21,"origin"],[426,36,172,16],[427,0,176,12],[427,35,176,27,"destination"],[427,46,172,16],[428,0,177,12],[428,33,177,24,"waypoints"],[429,0,172,16],[430,0,171,31],[430,17],[433,0,171,13,"objRoutes"],[433,16,171,13,"objRoutes"],[433,25],[435,50,182,14],[435,55,182,19,"saveRoutes"],[435,65,182,14],[435,66,182,30],[435,74,182,14],[435,76,182,39],[435,85,182,14],[435,87,182,49,"objRoutes"],[435,96,182,14],[435,97],[439,50,184,14],[439,55,184,19,"getRoutes"],[439,64,184,14],[439,65,184,29,"user"],[439,69,184,14],[439,70],[443,50,186,33],[444,0,187,10,"body"],[444,18,187,10,"body"],[444,22,187,14],[444,24,187,16],[445,0,188,12],[445,28,188,20,"user"],[445,32,187,16],[446,0,189,12],[446,33,189,25],[446,38,189,30,"state"],[446,43,189,25],[446,44,189,36,"RouteName"],[447,0,187,16],[448,0,186,33],[448,17],[451,0,186,12,"objRoutesAux"],[451,16,186,12,"objRoutesAux"],[451,28],[453,50,193,18],[453,55,193,23,"state"],[453,60,193,18],[453,61,193,29,"hasRoute"],[453,69],[458,38,193,41],[458,42],[463,0,194,10,"objRoutesAux"],[463,16,194,10,"objRoutesAux"],[463,28,194,22],[463,29,194,23,"body"],[463,33,194,10],[463,34,194,28,"routeName"],[463,43,194,10],[463,44,194,38,"push"],[463,48,194,10],[463,49,194,43,"routeName"],[463,58,194,10],[468,0,196,10,"objRoutesAux"],[468,16,196,10,"objRoutesAux"],[468,28,196,22],[468,29,196,23,"body"],[468,33,196,10],[468,34,196,28,"routeName"],[468,43,196,10],[468,46,196,40],[468,47,196,41,"routeName"],[468,56,196,40],[468,57,196,10],[472,50,200,14],[472,55,200,19,"saveRoutes"],[472,65,200,14],[472,66,200,30],[472,76,200,14],[472,78,200,41],[472,89,200,14],[472,91,200,53,"objRoutesAux"],[472,103,200,14],[472,104],[475,0,201,8,"alert"],[475,16,201,8,"alert"],[475,21,201,13],[475,22,201,14],[475,48,201,13],[475,49,201,8],[486,31,307,13],[487,0,307,13],[489,0,308,8],[489,15,310,12],[489,44,310,13],[489,77,310,12],[490,0,310,34],[490,10,310,34],[490,15,310,39],[490,17,310,41,"styles"],[490,23,310,47],[490,24,310,48,"container"],[490,33,310,12],[491,0,310,59],[491,10,310,59],[491,18,310,67],[491,20,310,68],[491,29,310,12],[492,0,310,78],[492,10,310,78],[492,17,310,85],[492,23,310,12],[493,0,310,12],[494,0,310,12],[495,0,310,12],[496,0,310,12],[497,0,310,12],[497,11,312,12],[497,40,312,13],[497,64,312,12],[498,0,314,14],[498,10,314,14],[498,13,314,17],[498,15,314,19],[498,28,314,19,"map"],[498,31,314,22],[499,0,314,22],[499,19,314,26],[499,25,314,30],[499,26,314,31,"mapView"],[499,33,314,26],[499,36,314,41,"map"],[499,39,314,22],[500,0,314,22],[500,11,312,12],[501,0,315,14],[501,10,315,14],[501,15,315,19],[501,17,315,21,"styles"],[501,23,315,27],[501,24,315,28,"map"],[501,27,312,12],[502,0,317,14],[502,10,317,14],[502,16,317,20],[502,18,317,22],[503,0,318,16,"latitude"],[503,12,318,16,"latitude"],[503,20,318,24],[503,22,318,26],[503,23,318,27],[503,28,318,32,"state"],[503,33,318,27],[503,34,318,38,"origin"],[503,40,318,27],[503,41,318,45,"latitude"],[503,49,318,27],[503,52,318,56],[503,57,318,61,"state"],[503,62,318,56],[503,63,318,67,"destination"],[503,74,318,56],[503,75,318,79,"latitude"],[503,83,318,26],[503,87,318,91],[503,88,317,22],[504,0,319,16,"longitude"],[504,12,319,16,"longitude"],[504,21,319,25],[504,23,319,27],[504,24,319,28],[504,29,319,33,"state"],[504,34,319,28],[504,35,319,39,"origin"],[504,41,319,28],[504,42,319,46,"longitude"],[504,51,319,28],[504,54,319,58],[504,59,319,63,"state"],[504,64,319,58],[504,65,319,69,"destination"],[504,76,319,58],[504,77,319,81,"longitude"],[504,86,319,27],[504,90,319,94],[504,91,317,22],[505,0,320,16,"latitudeDelta"],[505,12,320,16,"latitudeDelta"],[505,25,320,29],[505,27,320,31,"Math"],[505,31,320,35],[505,32,320,36,"abs"],[505,35,320,31],[505,36,320,40],[505,41,320,45,"state"],[505,46,320,40],[505,47,320,51,"origin"],[505,53,320,40],[505,54,320,58,"latitude"],[505,62,320,40],[505,65,320,69],[505,70,320,74,"state"],[505,75,320,69],[505,76,320,80,"destination"],[505,87,320,69],[505,88,320,92,"latitude"],[505,96,320,31],[505,100,320,104,"Math"],[505,104,320,108],[505,105,320,109,"abs"],[505,108,320,104],[505,109,320,113],[505,114,320,118,"state"],[505,119,320,113],[505,120,320,124,"origin"],[505,126,320,113],[505,127,320,131,"latitude"],[505,135,320,113],[505,138,320,142],[505,143,320,147,"state"],[505,148,320,142],[505,149,320,153,"destination"],[505,160,320,142],[505,161,320,165,"latitude"],[505,169,320,104],[505,173,320,177],[505,175,317,22],[506,0,321,16,"longitudeDelta"],[506,12,321,16,"longitudeDelta"],[506,26,321,30],[506,28,321,32,"Math"],[506,32,321,36],[506,33,321,37,"abs"],[506,36,321,32],[506,37,321,41],[506,42,321,46,"state"],[506,47,321,41],[506,48,321,52,"origin"],[506,54,321,41],[506,55,321,59,"longitude"],[506,64,321,41],[506,67,321,71],[506,72,321,76,"state"],[506,77,321,71],[506,78,321,82,"destination"],[506,89,321,71],[506,90,321,94,"longitude"],[506,99,321,32],[506,103,321,107,"Math"],[506,107,321,111],[506,108,321,112,"abs"],[506,111,321,107],[506,112,321,116],[506,117,321,121,"state"],[506,122,321,116],[506,123,321,127,"origin"],[506,129,321,116],[506,130,321,134,"longitude"],[506,139,321,116],[506,142,321,146],[506,147,321,151,"state"],[506,152,321,146],[506,153,321,157,"destination"],[506,164,321,146],[506,165,321,169,"longitude"],[506,174,321,107],[506,178,321,182],[507,0,317,22],[507,11,312,12],[508,0,324,14],[508,10,324,14],[508,24,324,28],[508,26,324,30],[508,30,312,12],[509,0,325,14],[509,10,325,14],[509,24,325,28],[509,26,325,30],[509,30,312,12],[510,0,326,14],[510,10,326,14],[510,28,326,32],[510,30,326,34],[510,34,312,12],[511,0,312,12],[512,0,312,12],[513,0,312,12],[514,0,312,12],[515,0,312,12],[515,11,330,12],[515,40,330,13],[515,64,330,12],[515,65,330,21],[515,71,330,12],[516,0,331,14],[516,10,331,14],[516,20,331,24],[516,22,331,26],[516,27,331,31,"state"],[516,32,331,26],[516,33,331,37,"destination"],[516,44,330,12],[517,0,330,12],[518,0,330,12],[519,0,330,12],[520,0,330,12],[521,0,330,12],[521,11,333,14],[521,40,333,15],[521,64,333,14],[521,65,333,23],[521,72,333,14],[522,0,333,31],[522,10,333,31],[522,17,333,38],[522,19,333,40],[522,24,333,45,"handleGetGoogleMapDirections"],[522,52,333,14],[523,0,333,14],[524,0,333,14],[525,0,333,14],[526,0,333,14],[527,0,333,14],[527,11,334,16],[527,40,334,17],[527,57,334,16],[528,0,334,16],[529,0,334,16],[530,0,334,16],[531,0,334,16],[532,0,334,16],[532,36,333,14],[532,37,330,12],[532,38,312,12],[532,40,338,12],[532,69,338,13],[532,93,338,12],[532,94,338,21],[532,100,338,12],[533,0,339,14],[533,10,339,14],[533,20,339,24],[533,22,339,26],[533,27,339,31,"state"],[533,32,339,26],[533,33,339,37,"waypoints"],[533,42,338,12],[534,0,338,12],[535,0,338,12],[536,0,338,12],[537,0,338,12],[538,0,338,12],[538,10,312,12],[538,12,343,12],[538,41,343,13],[538,65,343,12],[538,66,343,21],[538,72,343,12],[539,0,344,14],[539,10,344,14],[539,20,344,24],[539,22,344,26],[539,27,344,31,"state"],[539,32,344,26],[539,33,344,37,"origin"],[539,39,343,12],[540,0,343,12],[541,0,343,12],[542,0,343,12],[543,0,343,12],[544,0,343,12],[544,11,346,12],[544,40,346,13],[544,64,346,12],[544,65,346,21],[544,72,346,12],[545,0,346,12],[546,0,346,12],[547,0,346,12],[548,0,346,12],[549,0,346,12],[549,11,347,16],[549,40,347,17],[549,57,347,16],[550,0,347,16],[551,0,347,16],[552,0,347,16],[553,0,347,16],[554,0,347,16],[554,35,346,12],[554,36,343,12],[554,37,312,12],[554,39,351,12],[554,68,351,13],[554,102,351,12],[555,0,352,14],[555,10,352,14],[555,16,352,20],[555,18,352,22],[555,23,352,27,"state"],[555,28,352,22],[555,29,352,33,"origin"],[555,35,351,12],[556,0,353,14],[556,10,353,14],[556,19,353,23],[556,21,353,25],[556,26,353,30,"state"],[556,31,353,25],[556,32,353,36,"arrWaypoints"],[556,44,351,12],[557,0,354,14],[557,10,354,14],[557,21,354,25],[557,23,354,27],[557,28,354,32,"state"],[557,33,354,27],[557,34,354,38,"destination"],[557,45,351,12],[558,0,355,14],[558,10,355,14],[558,16,355,20],[558,18,355,22,"GOOGLE_MAPS_APIKEY"],[558,36,351,12],[559,0,351,12],[560,0,351,12],[561,0,351,12],[562,0,351,12],[563,0,351,12],[563,10,312,12],[563,11,310,12],[563,13,360,12],[563,42,360,13],[563,73,360,12],[564,0,360,25],[564,10,360,25],[564,25,360,40],[564,27,360,42],[564,32,360,47,"state"],[564,37,360,42],[564,38,360,53,"isDialogVisible"],[564,53,360,12],[565,0,361,12],[565,10,361,12],[565,15,361,17],[565,17,361,19],[565,29,360,12],[566,0,362,12],[566,10,362,12],[566,17,362,19],[566,19,362,21],[566,42,360,12],[567,0,363,12],[567,10,363,12],[567,19,363,21],[567,21,363,24],[567,44,360,12],[568,0,364,12],[568,10,364,12],[568,21,364,23],[568,23,364,26],[568,44,364,27,"inputText"],[568,53,364,26],[568,55,364,41],[569,0,364,42],[569,12,364,42],[569,18,364,46],[569,19,364,47,"sendInput"],[569,28,364,42],[569,29,364,57,"inputText"],[569,38,364,42],[570,0,364,68],[570,11,360,12],[571,0,365,12],[571,10,365,12],[571,21,365,23],[571,23,365,26],[571,46,365,32],[572,0,365,34],[572,12,365,34],[572,18,365,38],[572,19,365,39,"setState"],[572,27,365,34],[572,28,365,48],[573,0,365,49,"isDialogVisible"],[573,14,365,49,"isDialogVisible"],[573,29,365,64],[573,31,365,65],[574,0,365,48],[574,13,365,34],[575,0,365,73],[575,11,360,12],[576,0,360,12],[577,0,360,12],[578,0,360,12],[579,0,360,12],[580,0,360,12],[580,10,310,12],[580,12,368,16],[580,41,368,17],[580,63,368,16],[581,0,369,20],[581,10,369,20],[581,15,369,25],[581,17,369,27,"styles"],[581,23,369,33],[581,24,369,34,"input"],[581,29,368,16],[582,0,370,20],[582,10,370,20],[582,22,370,32],[582,24,370,34],[582,46,370,35,"text"],[582,50,370,34],[583,0,370,34],[583,19,370,44],[583,25,370,48],[583,26,370,49,"setState"],[583,34,370,44],[583,35,370,58],[584,0,370,60,"originText"],[584,14,370,60,"originText"],[584,24,370,70],[584,26,370,72,"text"],[585,0,370,58],[585,13,370,44],[585,14,370,34],[586,0,370,34],[586,11,368,16],[587,0,371,20],[587,10,371,20],[587,21,371,31],[587,23,371,32],[587,31,368,16],[588,0,372,20],[588,10,372,20],[588,15,372,25],[588,17,372,27],[588,22,372,32,"state"],[588,27,372,27],[588,28,372,38,"originText"],[588,38,368,16],[589,0,368,16],[590,0,368,16],[591,0,368,16],[592,0,368,16],[593,0,368,16],[593,10,310,12],[593,12,381,17],[593,41,381,18],[593,63,381,17],[594,0,382,20],[594,10,382,20],[594,15,382,25],[594,17,382,27,"styles"],[594,23,382,33],[594,24,382,34,"input"],[594,29,381,17],[595,0,383,20],[595,10,383,20],[595,22,383,32],[595,24,383,34],[595,46,383,35,"text"],[595,50,383,34],[596,0,383,34],[596,19,383,44],[596,25,383,48],[596,26,383,49,"setState"],[596,34,383,44],[596,35,383,58],[597,0,383,60,"destinationText"],[597,14,383,60,"destinationText"],[597,29,383,75],[597,31,383,77,"text"],[598,0,383,58],[598,13,383,44],[598,14,383,34],[599,0,383,34],[599,11,381,17],[600,0,384,20],[600,10,384,20],[600,21,384,31],[600,23,384,32],[600,36,381,17],[601,0,385,20],[601,10,385,20],[601,15,385,25],[601,17,385,27],[601,22,385,32,"state"],[601,27,385,27],[601,28,385,38,"destinationText"],[601,43,381,17],[602,0,381,17],[603,0,381,17],[604,0,381,17],[605,0,381,17],[606,0,381,17],[606,10,310,12],[606,12,388,16],[606,41,388,17],[606,70,388,16],[607,0,388,34],[607,10,388,34],[607,15,388,39],[607,17,388,41,"styles"],[607,23,388,47],[607,24,388,48,"button"],[607,30,388,16],[608,0,388,56],[608,10,388,56],[608,17,388,63],[608,19,388,65],[608,24,388,70,"handleButton"],[608,36,388,16],[609,0,388,16],[610,0,388,16],[611,0,388,16],[612,0,388,16],[613,0,388,16],[613,11,390,20],[613,40,390,21],[613,57,390,20],[614,0,390,26],[614,10,390,26],[614,15,390,31],[614,17,390,33,"styles"],[614,23,390,39],[614,24,390,40,"buttonText"],[614,34,390,20],[615,0,390,20],[616,0,390,20],[617,0,390,20],[618,0,390,20],[619,0,390,20],[619,26,388,16],[619,27,310,12],[619,29,394,16],[619,58,394,17],[619,87,394,16],[620,0,394,34],[620,10,394,34],[620,15,394,39],[620,17,394,41,"styles"],[620,23,394,47],[620,24,394,48,"button"],[620,30,394,16],[621,0,394,56],[621,10,394,56],[621,17,394,63],[621,19,394,65],[621,24,394,70,"saveButton"],[621,34,394,16],[622,0,394,16],[623,0,394,16],[624,0,394,16],[625,0,394,16],[626,0,394,16],[626,11,396,20],[626,40,396,21],[626,57,396,20],[627,0,396,26],[627,10,396,26],[627,15,396,31],[627,17,396,33,"styles"],[627,23,396,39],[627,24,396,40,"buttonText"],[627,34,396,20],[628,0,396,20],[629,0,396,20],[630,0,396,20],[631,0,396,20],[632,0,396,20],[632,24,394,16],[632,25,310,12],[632,26,308,8],[633,0,404,5],[636,4,31,39,"Component"],[636,20],[641,0,408,0],[641,6,408,6,"styles"],[641,12,408,12],[641,15,408,15,"StyleSheet"],[641,39,408,26,"create"],[641,45,408,15],[641,46,408,33],[642,0,410,4,"container"],[642,4,410,4,"container"],[642,13,410,13],[642,15,410,15],[643,0,412,8,"flex"],[643,6,412,8,"flex"],[643,10,412,12],[643,12,412,14],[643,13,410,15],[644,0,413,8,"justifyContent"],[644,6,413,8,"justifyContent"],[644,20,413,22],[644,22,413,24],[644,32,410,15],[645,0,414,8,"alignItems"],[645,6,414,8,"alignItems"],[645,16,414,18],[645,18,414,20],[646,0,410,15],[646,5,408,33],[647,0,418,6,"map"],[647,4,418,6,"map"],[647,7,418,9],[647,9,418,11],[648,0,420,8,"position"],[648,6,420,8,"position"],[648,14,420,16],[648,16,420,18],[648,26,418,11],[649,0,421,8,"top"],[649,6,421,8,"top"],[649,9,421,11],[649,11,421,13],[649,12,418,11],[650,0,422,8,"left"],[650,6,422,8,"left"],[650,10,422,12],[650,12,422,14],[650,13,418,11],[651,0,423,8,"right"],[651,6,423,8,"right"],[651,11,423,13],[651,13,423,15],[651,14,418,11],[652,0,424,8,"bottom"],[652,6,424,8,"bottom"],[652,12,424,14],[652,14,424,16],[653,0,418,11],[653,5,408,33],[654,0,428,6,"button"],[654,4,428,6,"button"],[654,10,428,12],[654,12,428,14],[655,0,430,8,"width"],[655,6,430,8,"width"],[655,11,430,13],[655,13,430,15,"width"],[655,18,430,20],[655,21,430,23],[655,24,428,14],[656,0,431,8,"height"],[656,6,431,8,"height"],[656,12,431,14],[656,14,431,16],[656,16,428,14],[657,0,432,8,"backgroundColor"],[657,6,432,8,"backgroundColor"],[657,21,432,23],[657,23,432,25],[657,29,428,14],[658,0,433,8,"alignItems"],[658,6,433,8,"alignItems"],[658,16,433,18],[658,18,433,20],[658,26,428,14],[659,0,434,8,"justifyContent"],[659,6,434,8,"justifyContent"],[659,20,434,22],[659,22,434,24],[659,30,428,14],[660,0,435,8,"borderWidth"],[660,6,435,8,"borderWidth"],[660,17,435,19],[660,19,435,21],[660,20,428,14],[661,0,436,8,"borderColor"],[661,6,436,8,"borderColor"],[661,17,436,19],[661,19,436,21],[661,25,428,14],[662,0,437,8,"borderRadius"],[662,6,437,8,"borderRadius"],[662,18,437,20],[662,20,437,22],[662,21,428,14],[663,0,438,8,"marginBottom"],[663,6,438,8,"marginBottom"],[663,18,438,20],[663,20,438,22],[663,22,428,14],[664,0,439,8,"marginHorizontal"],[664,6,439,8,"marginHorizontal"],[664,22,439,24],[664,24,439,26],[665,0,428,14],[665,5,408,33],[666,0,443,6,"buttonText"],[666,4,443,6,"buttonText"],[666,14,443,16],[666,16,443,18],[667,0,445,8,"color"],[667,6,445,8,"color"],[667,11,445,13],[667,13,445,15],[667,19,443,18],[668,0,446,8,"fontWeight"],[668,6,446,8,"fontWeight"],[668,16,446,18],[668,18,446,20],[669,0,443,18],[669,5,408,33],[670,0,450,6,"inputContainer"],[670,4,450,6,"inputContainer"],[670,18,450,20],[670,20,450,22],[671,0,452,8,"width"],[671,6,452,8,"width"],[671,11,452,13],[671,13,452,15],[671,19,450,22],[672,0,453,8,"maxHeight"],[672,6,453,8,"maxHeight"],[672,15,453,17],[672,17,453,19],[673,0,450,22],[673,5,408,33],[674,0,457,6,"input"],[674,4,457,6,"input"],[674,9,457,11],[674,11,457,13],[675,0,459,8,"width"],[675,6,459,8,"width"],[675,11,459,13],[675,13,459,15,"width"],[675,18,459,20],[675,21,459,23],[675,23,457,13],[676,0,460,8,"maxHeight"],[676,6,460,8,"maxHeight"],[676,15,460,17],[676,17,460,19],[676,20,457,13],[677,0,461,8,"backgroundColor"],[677,6,461,8,"backgroundColor"],[677,21,461,23],[677,23,461,25],[677,29,457,13],[678,0,462,8,"marginBottom"],[678,6,462,8,"marginBottom"],[678,18,462,20],[678,20,462,22],[678,22,457,13],[679,0,463,8,"marginHorizontal"],[679,6,463,8,"marginHorizontal"],[679,22,463,24],[679,24,463,26],[680,0,457,13],[681,0,408,33],[681,3,408,15],[681,4,408,0]]},"type":"js/module"}]}