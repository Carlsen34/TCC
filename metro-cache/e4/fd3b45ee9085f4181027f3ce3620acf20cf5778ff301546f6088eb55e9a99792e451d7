{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false}},{"name":"@babel/runtime/regenerator","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"./../../node_modules/react-transform-hmr/lib/index.js","data":{"isAsync":false}},{"name":"../../aws-exports","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"react-native-dialog-input","data":{"isAsync":false}},{"name":"react-native-maps","data":{"isAsync":false}},{"name":"react-native-maps-directions","data":{"isAsync":false}},{"name":"react-native-google-maps-directions","data":{"isAsync":false}},{"name":"aws-amplify","data":{"isAsync":false}},{"name":"react-native-geocoding","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/regenerator\"));\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/createClass\"));\n\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n\n  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/getPrototypeOf\"));\n\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"@babel/runtime/helpers/inherits\"));\n\n  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8], \"react\"));\n\n  var _index = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9], \"./../../node_modules/react-transform-hmr/lib/index.js\"));\n\n  var _awsExports = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10], \"../../aws-exports\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[11], \"react-native\");\n\n  var _reactNativeDialogInput = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12], \"react-native-dialog-input\"));\n\n  var _reactNativeMaps = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13], \"react-native-maps\"));\n\n  var _reactNativeMapsDirections = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14], \"react-native-maps-directions\"));\n\n  var _reactNativeGoogleMapsDirections = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15], \"react-native-google-maps-directions\"));\n\n  var _awsAmplify = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[16], \"aws-amplify\"));\n\n  var _reactNativeGeocoding = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17], \"react-native-geocoding\"));\n\n  var _temp,\n      _jsxFileName = \"/home/carlsen/Desktop/TCC/Modules/RoutesModules/Routes.js\";\n\n  var _components = {\n    MapScreen: {\n      displayName: \"MapScreen\"\n    }\n  };\n\n  var _node_modulesReactTransformHmrLibIndexJs2 = (0, _index.default)({\n    filename: \"/home/carlsen/Desktop/TCC/Modules/RoutesModules/Routes.js\",\n    components: _components,\n    locals: [module],\n    imports: [_react.default]\n  });\n\n  function _wrapComponent(id) {\n    return function (Component) {\n      return _node_modulesReactTransformHmrLibIndexJs2(Component, id);\n    };\n  }\n\n  var GOOGLE_MAPS_APIKEY = _awsExports.default.GOOGLEAPI;\n  var routeAPI = 'http://vrp-dev.us-east-1.elasticbeanstalk.com/api/v1/vrp/route=';\n  var arr = [];\n  var backgroundColor = '#007256';\n\n  var _Dimensions$get = _reactNative.Dimensions.get('window'),\n      height = _Dimensions$get.height,\n      width = _Dimensions$get.width;\n\n  var MapScreen = _wrapComponent(\"MapScreen\")((_temp = function (_Component) {\n    (0, _inherits2.default)(MapScreen, _Component);\n\n    function MapScreen() {\n      var _getPrototypeOf2;\n\n      var _this;\n\n      (0, _classCallCheck2.default)(this, MapScreen);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(MapScreen)).call.apply(_getPrototypeOf2, [this].concat(args)));\n      _this.state = {\n        isDialogVisible: false,\n        origin: {\n          latitude: 42.3616132,\n          longitude: -71.0672576\n        },\n        destination: {\n          latitude: 42.3730591,\n          longitude: -71.033754\n        },\n        waypoints: {\n          latitude: 0,\n          longitude: 0\n        },\n        originText: '',\n        destinationText: '',\n        waypointsText: '',\n        RouteName: '',\n        hasRoute: false,\n        arrWaypoints: []\n      };\n\n      _this.getLocation = function () {\n        navigator.geolocation.getCurrentPosition(function (position) {\n          var newOrigin = {\n            latitude: position.coords.latitude,\n            longitude: position.coords.longitude\n          };\n          console.log('new origin');\n          console.log(newOrigin);\n\n          _this.setState({\n            origin: newOrigin\n          });\n        }, function (err) {\n          console.log('error');\n          console.log(err);\n        }, {\n          enableHighAccuracy: true,\n          timeout: 2000,\n          maximumAge: 1000\n        });\n      };\n\n      _this.saveButton = function () {\n        _this.setState({\n          isDialogVisible: true\n        });\n      };\n\n      _this.handleButton = function () {\n        var fullAPI = routeAPI + \"Campinas|Rio+Janeiro|Sao+Paulo\" + '/' + 1;\n        fetch(fullAPI).then(function (response) {\n          return response.json();\n        }).then(function (data) {\n          data.Route[0].forEach(function (item, indice, array) {\n            var arrayAux = [];\n            var str = item.replace(\"+\", \" \");\n            arrayAux.push(str);\n            console.log(str);\n            console.log(array.length);\n            console.log(arrayAux);\n          });\n        });\n      };\n\n      _this.handleGetGoogleMapDirections = function () {\n        var data = {\n          source: _this.state.origin,\n          destination: _this.state.destination,\n          waypoints: _this.state.arrWaypoints,\n          params: [{\n            key: \"travelmode\",\n            value: \"driving\"\n          }]\n        };\n        (0, _reactNativeGoogleMapsDirections.default)(data);\n      };\n\n      return _this;\n    }\n\n    (0, _createClass2.default)(MapScreen, [{\n      key: \"requestLocationPermission\",\n      value: function requestLocationPermission() {\n        var granted;\n        return _regenerator.default.async(function requestLocationPermission$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return _regenerator.default.awrap(_reactNative.PermissionsAndroid.request(_reactNative.PermissionsAndroid.PERMISSIONS.ACCESS_FINE_LOCATION, {\n                  'title': 'App Location Permission',\n                  'message': 'Maps App needs access to your map ' + 'so you can be navigated.'\n                }));\n\n              case 3:\n                granted = _context.sent;\n\n                if (!(granted === _reactNative.PermissionsAndroid.RESULTS.GRANTED)) {\n                  _context.next = 9;\n                  break;\n                }\n\n                console.log(\"You can use the location\");\n                return _context.abrupt(\"return\", true);\n\n              case 9:\n                console.log(\"location permission denied\");\n                return _context.abrupt(\"return\", false);\n\n              case 11:\n                _context.next = 16;\n                break;\n\n              case 13:\n                _context.prev = 13;\n                _context.t0 = _context[\"catch\"](0);\n                console.warn(_context.t0);\n\n              case 16:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, null, [[0, 13]]);\n      }\n    }, {\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        var isGranted;\n        return _regenerator.default.async(function componentDidMount$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return _regenerator.default.awrap(this.requestLocationPermission());\n\n              case 2:\n                isGranted = _context2.sent;\n\n                if (isGranted) {\n                  this.getLocation();\n                }\n\n                this.getLocation();\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, null, this);\n      }\n    }, {\n      key: \"saveRoutes\",\n      value: function saveRoutes(api, path, objRoutes) {\n        var apiResponse;\n        return _regenerator.default.async(function saveRoutes$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                _context3.next = 3;\n                return _regenerator.default.awrap(_awsAmplify.API.put(api, path, objRoutes));\n\n              case 3:\n                apiResponse = _context3.sent;\n                console.log(\"response from saving routes: \" + apiResponse);\n                this.setState({\n                  apiResponse: apiResponse\n                });\n                return _context3.abrupt(\"return\", apiResponse);\n\n              case 9:\n                _context3.prev = 9;\n                _context3.t0 = _context3[\"catch\"](0);\n                console.log(_context3.t0);\n\n              case 12:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, null, this, [[0, 9]]);\n      }\n    }, {\n      key: \"getRoutes\",\n      value: function getRoutes(user) {\n        var path, _apiResponse;\n\n        return _regenerator.default.async(function getRoutes$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                path = \"/getRoute/object/\" + user;\n                _context4.prev = 1;\n                _context4.next = 4;\n                return _regenerator.default.awrap(_awsAmplify.API.get(\"getRoute\", path));\n\n              case 4:\n                _apiResponse = _context4.sent;\n                console.log(\"response from get routes: \" + _apiResponse.routeName);\n                this.setState({\n                  apiResponse: _apiResponse\n                });\n\n                if (_apiResponse.routeName != undefined) {\n                  this.setState({\n                    RouteName: _apiResponse.routeName\n                  });\n                  console.log(this.state.RouteName);\n                  this.setState({\n                    hasRoute: true\n                  });\n                  console.log(\"List Route: \" + this.state.RouteName);\n                } else {\n                  this.setState({\n                    hasRoute: false\n                  });\n                }\n\n                return _context4.abrupt(\"return\", _apiResponse);\n\n              case 11:\n                _context4.prev = 11;\n                _context4.t0 = _context4[\"catch\"](1);\n                console.log(_context4.t0);\n\n              case 14:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, null, this, [[1, 11]]);\n      }\n    }, {\n      key: \"sendInput\",\n      value: function sendInput(inputText) {\n        var user, origin, destination, waypoints, routeName, objRoutes, objRoutesAux;\n        return _regenerator.default.async(function sendInput$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return _regenerator.default.awrap(this.setState({\n                  isDialogVisible: false\n                }));\n\n              case 2:\n                user = _awsAmplify.Auth.user.username;\n                origin = this.state.originText;\n                destination = this.state.destinationText;\n                waypoints = this.state.waypointsText;\n                routeName = inputText;\n                _context5.next = 9;\n                return _regenerator.default.awrap({\n                  body: {\n                    \"routeName\": routeName,\n                    \"user\": user,\n                    \"origin\": origin,\n                    \"destination\": destination,\n                    \"waypoints\": waypoints\n                  }\n                });\n\n              case 9:\n                objRoutes = _context5.sent;\n                _context5.next = 12;\n                return _regenerator.default.awrap(this.saveRoutes(\"Routes\", \"/routes\", objRoutes));\n\n              case 12:\n                _context5.next = 14;\n                return _regenerator.default.awrap(this.getRoutes(user));\n\n              case 14:\n                _context5.next = 16;\n                return _regenerator.default.awrap({\n                  body: {\n                    \"user\": user,\n                    \"routeName\": this.state.RouteName\n                  }\n                });\n\n              case 16:\n                objRoutesAux = _context5.sent;\n                _context5.next = 19;\n                return _regenerator.default.awrap(this.state.hasRoute);\n\n              case 19:\n                _context5.t0 = _context5.sent;\n\n                if (!(_context5.t0 == true)) {\n                  _context5.next = 24;\n                  break;\n                }\n\n                objRoutesAux.body.routeName.push(routeName);\n                _context5.next = 25;\n                break;\n\n              case 24:\n                objRoutesAux.body.routeName = [routeName];\n\n              case 25:\n                _context5.next = 27;\n                return _regenerator.default.awrap(this.saveRoutes(\"getRoute\", \"/getRoute\", objRoutesAux));\n\n              case 27:\n                alert('Route saved successfully');\n\n              case 28:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, null, this);\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var _this2 = this;\n\n        return _react.default.createElement(_reactNative.KeyboardAvoidingView, {\n          style: styles.container,\n          behavior: \"padding\",\n          enabled: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 261\n          }\n        }, _react.default.createElement(_reactNativeMaps.default, {\n          ref: function ref(map) {\n            return _this2.mapView = map;\n          },\n          style: styles.map,\n          region: {\n            latitude: (this.state.origin.latitude + this.state.destination.latitude) / 2,\n            longitude: (this.state.origin.longitude + this.state.destination.longitude) / 2,\n            latitudeDelta: Math.abs(this.state.origin.latitude - this.state.destination.latitude) + Math.abs(this.state.origin.latitude - this.state.destination.latitude) * .1,\n            longitudeDelta: Math.abs(this.state.origin.longitude - this.state.destination.longitude) + Math.abs(this.state.origin.longitude - this.state.destination.longitude) * .1\n          },\n          loadingEnabled: true,\n          toolbarEnabled: true,\n          zoomControlEnabled: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 263\n          }\n        }, _react.default.createElement(_reactNativeMaps.default.Marker, {\n          coordinate: this.state.destination,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 281\n          }\n        }, _react.default.createElement(_reactNativeMaps.default.Callout, {\n          onPress: this.handleGetGoogleMapDirections,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 284\n          }\n        }, _react.default.createElement(_reactNative.Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 285\n          }\n        }, \"Press to Get Direction\"))), _react.default.createElement(_reactNativeMaps.default.Marker, {\n          coordinate: this.state.waypoints,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 289\n          }\n        }), _react.default.createElement(_reactNativeMaps.default.Marker, {\n          coordinate: this.state.origin,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 294\n          }\n        }, _react.default.createElement(_reactNativeMaps.default.Callout, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 297\n          }\n        }, _react.default.createElement(_reactNative.Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 298\n          }\n        }, \"This is where you are\"))), _react.default.createElement(_reactNativeMapsDirections.default, {\n          origin: this.state.origin,\n          waypoints: this.state.arrWaypoints,\n          destination: this.state.destination,\n          apikey: GOOGLE_MAPS_APIKEY,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 302\n          }\n        })), _react.default.createElement(_reactNativeDialogInput.default, {\n          isDialogVisible: this.state.isDialogVisible,\n          title: \"Route Name\",\n          message: \"Enter your route name\",\n          hintInput: \"Enter your route name\",\n          submitInput: function submitInput(inputText) {\n            _this2.sendInput(inputText);\n          },\n          closeDialog: function closeDialog() {\n            _this2.setState({\n              isDialogVisible: false\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 311\n          }\n        }), _react.default.createElement(_reactNative.TextInput, {\n          style: styles.input,\n          onChangeText: function onChangeText(text) {\n            return _this2.setState({\n              originText: text\n            });\n          },\n          placeholder: \"Origin\",\n          value: this.state.originText,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 319\n          }\n        }), _react.default.createElement(_reactNative.TextInput, {\n          style: styles.input,\n          onChangeText: function onChangeText(text) {\n            return _this2.setState({\n              destinationText: text\n            });\n          },\n          placeholder: \"Destination\",\n          value: this.state.destinationText,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 332\n          }\n        }), _react.default.createElement(_reactNative.TouchableOpacity, {\n          style: styles.button,\n          onPress: this.handleButton,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 339\n          }\n        }, _react.default.createElement(_reactNative.Text, {\n          style: styles.buttonText,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 341\n          }\n        }, \"Search Route\")), _react.default.createElement(_reactNative.TouchableOpacity, {\n          style: styles.button,\n          onPress: this.saveButton,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 345\n          }\n        }, _react.default.createElement(_reactNative.Text, {\n          style: styles.buttonText,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 347\n          }\n        }, \"Save Route\")));\n      }\n    }]);\n    return MapScreen;\n  }(_react.Component), _temp));\n\n  var _default2 = MapScreen;\n  exports.default = _default2;\n\n  var styles = _reactNative.StyleSheet.create({\n    container: {\n      flex: 1,\n      justifyContent: 'flex-end',\n      alignItems: 'flex-end'\n    },\n    map: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0\n    },\n    button: {\n      width: width - 100,\n      height: 40,\n      backgroundColor: '#FFF',\n      alignItems: 'center',\n      justifyContent: 'center',\n      borderWidth: 1,\n      borderColor: '#000',\n      borderRadius: 7,\n      marginBottom: 15,\n      marginHorizontal: 20\n    },\n    buttonText: {\n      color: '#000',\n      fontWeight: 'bold'\n    },\n    inputContainer: {\n      width: '100%',\n      maxHeight: 200\n    },\n    input: {\n      width: width - 40,\n      maxHeight: 200,\n      backgroundColor: '#FFF',\n      marginBottom: 15,\n      marginHorizontal: 20\n    }\n  });\n});","map":[[23,0,2,0],[27,0,3,0],[29,0,4,0],[31,0,15,0],[33,0,16,0],[35,0,17,0],[37,0,18,0],[39,0,20,0],[41,0,21,0],[65,0,23,0],[65,6,23,6,"GOOGLE_MAPS_APIKEY"],[65,24,23,24],[65,27,23,27,"AWSConfig"],[65,47,23,37,"GOOGLEAPI"],[65,56,23,0],[66,0,24,0],[66,6,24,6,"routeAPI"],[66,14,24,14],[66,17,24,17],[66,82,24,0],[67,0,25,0],[67,6,25,6,"arr"],[67,9,25,9],[67,12,25,12],[67,14,25,0],[68,0,27,0],[68,6,27,6,"backgroundColor"],[68,21,27,21],[68,24,27,24],[68,33,27,0],[70,24,29,26,"Dimensions"],[70,48,29,37,"get"],[70,51,29,26],[70,52,29,41],[70,60,29,26],[70,61],[71,6,29,8,"height"],[71,12],[71,31,29,8,"height"],[71,37],[72,6,29,16,"width"],[72,11],[72,30,29,16,"width"],[72,35],[89,12,33,4,"state"],[89,17],[89,20,33,12],[90,0,34,8,"isDialogVisible"],[90,8,34,8,"isDialogVisible"],[90,23,34,23],[90,25,34,24],[90,30,33,12],[91,0,35,8,"origin"],[91,8,35,8,"origin"],[91,14,35,14],[91,16,35,16],[92,0,35,18,"latitude"],[92,10,35,18,"latitude"],[92,18,35,26],[92,20,35,28],[92,30,35,16],[93,0,35,40,"longitude"],[93,10,35,40,"longitude"],[93,19,35,49],[93,21,35,51],[93,22,35,52],[94,0,35,16],[94,9,33,12],[95,0,36,8,"destination"],[95,8,36,8,"destination"],[95,19,36,19],[95,21,36,21],[96,0,36,23,"latitude"],[96,10,36,23,"latitude"],[96,18,36,31],[96,20,36,33],[96,30,36,21],[97,0,36,45,"longitude"],[97,10,36,45,"longitude"],[97,19,36,54],[97,21,36,56],[97,22,36,57],[98,0,36,21],[98,9,33,12],[99,0,37,8,"waypoints"],[99,8,37,8,"waypoints"],[99,17,37,17],[99,19,37,18],[100,0,37,20,"latitude"],[100,10,37,20,"latitude"],[100,18,37,28],[100,20,37,30],[100,21,37,18],[101,0,37,33,"longitude"],[101,10,37,33,"longitude"],[101,19,37,42],[101,21,37,44],[102,0,37,18],[102,9,33,12],[103,0,38,8,"originText"],[103,8,38,8,"originText"],[103,18,38,18],[103,20,38,20],[103,22,33,12],[104,0,39,8,"destinationText"],[104,8,39,8,"destinationText"],[104,23,39,23],[104,25,39,25],[104,27,33,12],[105,0,40,8,"waypointsText"],[105,8,40,8,"waypointsText"],[105,21,40,21],[105,23,40,22],[105,25,33,12],[106,0,41,8,"RouteName"],[106,8,41,8,"RouteName"],[106,17,41,17],[106,19,41,18],[106,21,33,12],[107,0,42,8,"hasRoute"],[107,8,42,8,"hasRoute"],[107,16,42,16],[107,18,42,18],[107,23,33,12],[108,0,43,8,"arrWaypoints"],[108,8,43,8,"arrWaypoints"],[108,20,43,20],[108,22,43,21],[109,0,33,12],[109,7],[111,12,84,6,"getLocation"],[111,23],[111,26,84,20],[111,38,84,26],[112,0,85,8,"navigator"],[112,8,85,8,"navigator"],[112,17,85,17],[112,18,85,18,"geolocation"],[112,29,85,8],[112,30,85,30,"getCurrentPosition"],[112,48,85,8],[112,49,85,49],[112,59,85,50,"position"],[112,67,85,49],[112,69,85,63],[113,0,86,12],[113,14,86,16,"newOrigin"],[113,23,86,25],[113,26,86,28],[114,0,87,16,"latitude"],[114,12,87,16,"latitude"],[114,20,87,24],[114,22,87,26,"position"],[114,30,87,34],[114,31,87,35,"coords"],[114,37,87,26],[114,38,87,42,"latitude"],[114,46,86,28],[115,0,88,16,"longitude"],[115,12,88,16,"longitude"],[115,21,88,25],[115,23,88,27,"position"],[115,31,88,35],[115,32,88,36,"coords"],[115,38,88,27],[115,39,88,43,"longitude"],[116,0,86,28],[116,11,86,12],[117,0,91,12,"console"],[117,10,91,12,"console"],[117,17,91,19],[117,18,91,20,"log"],[117,21,91,12],[117,22,91,24],[117,34,91,12],[118,0,92,12,"console"],[118,10,92,12,"console"],[118,17,92,19],[118,18,92,20,"log"],[118,21,92,12],[118,22,92,24,"newOrigin"],[118,31,92,12],[120,0,94,12],[120,16,94,17,"setState"],[120,24,94,12],[120,25,94,26],[121,0,95,16,"origin"],[121,12,95,16,"origin"],[121,18,95,22],[121,20,95,24,"newOrigin"],[122,0,94,26],[122,11,94,12],[123,0,98,9],[123,9,85,8],[123,11,98,11],[123,21,98,12,"err"],[123,24,98,11],[123,26,98,20],[124,0,99,12,"console"],[124,10,99,12,"console"],[124,17,99,19],[124,18,99,20,"log"],[124,21,99,12],[124,22,99,24],[124,29,99,12],[125,0,100,12,"console"],[125,10,100,12,"console"],[125,17,100,19],[125,18,100,20,"log"],[125,21,100,12],[125,22,100,24,"err"],[125,25,100,12],[126,0,102,9],[126,9,85,8],[126,11,102,11],[127,0,102,12,"enableHighAccuracy"],[127,10,102,12,"enableHighAccuracy"],[127,28,102,30],[127,30,102,32],[127,34,102,11],[128,0,102,38,"timeout"],[128,10,102,38,"timeout"],[128,17,102,45],[128,19,102,47],[128,23,102,11],[129,0,102,53,"maximumAge"],[129,10,102,53,"maximumAge"],[129,20,102,63],[129,22,102,65],[130,0,102,11],[130,9,85,8],[131,0,104,7],[131,7],[133,12,121,6,"saveButton"],[133,22],[133,25,121,19],[133,37,121,25],[134,0,122,10],[134,14,122,15,"setState"],[134,22,122,10],[134,23,122,24],[135,0,122,25,"isDialogVisible"],[135,10,122,25,"isDialogVisible"],[135,25,122,40],[135,27,122,41],[136,0,122,24],[136,9,122,10],[137,0,123,7],[137,7],[139,12,204,8,"handleButton"],[139,24],[139,27,204,23],[139,39,204,29],[140,0,205,8],[140,12,205,14,"fullAPI"],[140,19,205,21],[140,22,205,24,"routeAPI"],[140,30,205,32],[140,33,205,35],[140,65,205,24],[140,68,205,70],[140,71,205,24],[140,74,205,76],[140,75,205,8],[141,0,206,8,"fetch"],[141,8,206,8,"fetch"],[141,13,206,13],[141,14,206,14,"fullAPI"],[141,21,206,13],[141,22,206,8],[141,23,206,23,"then"],[141,27,206,8],[141,28,206,28],[141,38,206,28,"response"],[141,46,206,36],[142,0,206,36],[142,17,206,40,"response"],[142,25,206,48],[142,26,206,49,"json"],[142,30,206,40],[142,32,206,36],[143,0,206,36],[143,9,206,8],[143,11,206,57,"then"],[143,15,206,8],[143,16,206,62],[143,26,206,62,"data"],[143,30,206,66],[143,32,206,70],[144,0,208,8,"data"],[144,10,208,8,"data"],[144,14,208,12],[144,15,208,13,"Route"],[144,20,208,8],[144,21,208,19],[144,22,208,8],[144,24,208,22,"forEach"],[144,31,208,8],[144,32,208,30],[144,42,208,40,"item"],[144,46,208,30],[144,48,208,46,"indice"],[144,54,208,30],[144,56,208,54,"array"],[144,61,208,30],[144,63,208,61],[145,0,209,9],[145,16,209,13,"arrayAux"],[145,24,209,21],[145,27,209,24],[145,29,209,9],[146,0,210,9],[146,16,210,13,"str"],[146,19,210,16],[146,22,210,19,"item"],[146,26,210,23],[146,27,210,24,"replace"],[146,34,210,19],[146,35,210,32],[146,38,210,19],[146,40,210,36],[146,43,210,19],[146,44,210,9],[147,0,211,9,"arrayAux"],[147,12,211,9,"arrayAux"],[147,20,211,17],[147,21,211,18,"push"],[147,25,211,9],[147,26,211,23,"str"],[147,29,211,9],[148,0,212,9,"console"],[148,12,212,9,"console"],[148,19,212,16],[148,20,212,17,"log"],[148,23,212,9],[148,24,212,21,"str"],[148,27,212,9],[149,0,213,9,"console"],[149,12,213,9,"console"],[149,19,213,16],[149,20,213,17,"log"],[149,23,213,9],[149,24,213,21,"array"],[149,29,213,26],[149,30,213,27,"length"],[149,36,213,9],[150,0,214,9,"console"],[150,12,214,9,"console"],[150,19,214,16],[150,20,214,17,"log"],[150,23,214,9],[150,24,214,21,"arrayAux"],[150,32,214,9],[151,0,230,9],[151,11,208,8],[152,0,232,9],[152,9,206,8],[153,0,234,7],[153,7],[155,12,238,6,"handleGetGoogleMapDirections"],[155,40],[155,43,238,37],[155,55,238,43],[156,0,240,8],[156,12,240,14,"data"],[156,16,240,18],[156,19,240,21],[157,0,242,12,"source"],[157,10,242,12,"source"],[157,16,242,18],[157,18,242,20],[157,24,242,25,"state"],[157,29,242,20],[157,30,242,31,"origin"],[157,36,240,21],[158,0,243,12,"destination"],[158,10,243,12,"destination"],[158,21,243,23],[158,23,243,25],[158,29,243,30,"state"],[158,34,243,25],[158,35,243,36,"destination"],[158,46,240,21],[159,0,244,12,"waypoints"],[159,10,244,12,"waypoints"],[159,19,244,21],[159,21,244,23],[159,27,244,28,"state"],[159,32,244,23],[159,33,244,34,"arrWaypoints"],[159,45,240,21],[160,0,245,12,"params"],[160,10,245,12,"params"],[160,16,245,18],[160,18,245,20],[160,19,246,16],[161,0,247,18,"key"],[161,12,247,18,"key"],[161,15,247,21],[161,17,247,23],[161,29,246,16],[162,0,248,18,"value"],[162,12,248,18,"value"],[162,17,248,23],[162,19,248,25],[163,0,246,16],[163,11,245,20],[164,0,240,21],[164,9,240,8],[165,0,254,8],[165,54,254,22,"data"],[165,58,254,8],[166,0,256,7],[166,7],[181,50,60,34,"PermissionsAndroid"],[181,82,60,53,"request"],[181,89,60,34],[181,90,61,16,"PermissionsAndroid"],[181,122,61,35,"PERMISSIONS"],[181,133,61,16],[181,134,61,47,"ACCESS_FINE_LOCATION"],[181,154,60,34],[181,156,62,16],[182,0,63,20],[182,27,63,29],[182,52,62,16],[183,0,64,20],[183,29,64,31],[183,68,65,24],[184,0,62,16],[184,17,60,34],[184,18],[187,0,60,18,"granted"],[187,16,60,18,"granted"],[187,23],[189,22,69,16,"granted"],[189,29,69,23],[189,34,69,28,"PermissionsAndroid"],[189,66,69,47,"RESULTS"],[189,73,69,28],[189,74,69,55,"GRANTED"],[189,81],[194,0,70,16,"console"],[194,16,70,16,"console"],[194,23,70,23],[194,24,70,24,"log"],[194,27,70,16],[194,28,70,28],[194,54,70,16],[195,49,71,23],[195,53],[198,0,74,16,"console"],[198,16,74,16,"console"],[198,23,74,23],[198,24,74,24,"log"],[198,27,74,16],[198,28,74,28],[198,56,74,16],[199,49,75,23],[199,54],[208,0,79,12,"console"],[208,16,79,12,"console"],[208,23,79,19],[208,24,79,20,"warn"],[208,28,79,12],[226,50,107,30],[226,55,107,35,"requestLocationPermission"],[226,80,107,30],[226,82],[229,0,107,12,"isGranted"],[229,16,107,12,"isGranted"],[229,25],[231,0,109,8],[231,20,109,12,"isGranted"],[231,29,109,8],[231,31,109,23],[232,0,110,12],[232,23,110,17,"getLocation"],[232,34,110,12],[233,0,111,9],[235,0,113,8],[235,21,113,13,"getLocation"],[235,32,113,8],[246,33,126,24,"api"],[246,36],[246,38,126,28,"path"],[246,42],[246,44,126,33,"objRoutes"],[246,53],[254,50,128,36,"API"],[254,66,128,40,"put"],[254,69,128,36],[254,70,128,44,"api"],[254,73,128,36],[254,75,128,49,"path"],[254,79,128,36],[254,81,128,55,"objRoutes"],[254,90,128,36],[254,91],[257,0,128,16,"apiResponse"],[257,16,128,16,"apiResponse"],[257,27],[258,0,129,10,"console"],[258,16,129,10,"console"],[258,23,129,17],[258,24,129,18,"log"],[258,27,129,10],[258,28,129,22],[258,62,129,56,"apiResponse"],[258,73,129,10],[259,0,130,10],[259,21,130,15,"setState"],[259,29,130,10],[259,30,130,24],[260,0,130,25,"apiResponse"],[260,18,130,25,"apiResponse"],[260,29,130,36],[260,31,130,25,"apiResponse"],[261,0,130,24],[261,17,130,10],[262,50,131,17,"apiResponse"],[262,61],[267,0,133,10,"console"],[267,16,133,10,"console"],[267,23,133,17],[267,24,133,18,"log"],[267,27,133,10],[278,32,138,22,"user"],[278,36],[285,0,139,12,"path"],[285,16,139,12,"path"],[285,20],[285,23,139,19],[285,45,139,41,"user"],[285,49],[288,50,141,36,"API"],[288,66,141,40,"get"],[288,69,141,36],[288,70,141,44],[288,80,141,36],[288,82,141,56,"path"],[288,86,141,36],[288,87],[291,0,141,16,"apiResponse"],[291,16,141,16,"apiResponse"],[291,28],[292,0,142,10,"console"],[292,16,142,10,"console"],[292,23,142,17],[292,24,142,18,"log"],[292,27,142,10],[292,28,142,22],[292,59,142,53,"apiResponse"],[292,71,142,64],[292,72,142,65,"routeName"],[292,81,142,10],[293,0,143,10],[293,21,143,15,"setState"],[293,29,143,10],[293,30,143,24],[294,0,143,25,"apiResponse"],[294,18,143,25,"apiResponse"],[294,29,143,36],[294,31,143,25,"apiResponse"],[295,0,143,24],[295,17,143,10],[297,0,144,10],[297,20,144,13,"apiResponse"],[297,32,144,24],[297,33,144,25,"routeName"],[297,42,144,13],[297,46,144,38,"undefined"],[297,55,144,10],[297,57,144,49],[298,0,145,12],[298,23,145,17,"setState"],[298,31,145,12],[298,32,145,26],[299,0,145,27,"RouteName"],[299,20,145,27,"RouteName"],[299,29,145,36],[299,31,145,37,"apiResponse"],[299,43,145,48],[299,44,145,49,"routeName"],[300,0,145,26],[300,19,145,12],[301,0,146,12,"console"],[301,18,146,12,"console"],[301,25,146,19],[301,26,146,20,"log"],[301,29,146,12],[301,30,146,24],[301,35,146,29,"state"],[301,40,146,24],[301,41,146,35,"RouteName"],[301,50,146,12],[302,0,147,12],[302,23,147,17,"setState"],[302,31,147,12],[302,32,147,26],[303,0,147,27,"hasRoute"],[303,20,147,27,"hasRoute"],[303,28,147,35],[303,30,147,36],[304,0,147,26],[304,19,147,12],[305,0,148,12,"console"],[305,18,148,12,"console"],[305,25,148,19],[305,26,148,20,"log"],[305,29,148,12],[305,30,148,24],[305,47,148,41],[305,52,148,46,"state"],[305,57,148,41],[305,58,148,52,"RouteName"],[305,67,148,12],[306,0,149,11],[306,17,144,10],[306,23,149,15],[307,0,150,12],[307,23,150,17,"setState"],[307,31,150,12],[307,32,150,26],[308,0,150,27,"hasRoute"],[308,20,150,27,"hasRoute"],[308,28,150,35],[308,30,150,36],[309,0,150,26],[309,19,150,12],[310,0,152,11],[312,50,153,17,"apiResponse"],[312,62],[317,0,155,10,"console"],[317,16,155,10,"console"],[317,23,155,17],[317,24,155,18,"log"],[317,27,155,10],[328,32,162,24,"inputText"],[328,41],[335,50,163,14],[335,55,163,19,"setState"],[335,63,163,14],[335,64,163,28],[336,0,163,29,"isDialogVisible"],[336,18,163,29,"isDialogVisible"],[336,33,163,44],[336,35,163,45],[337,0,163,28],[337,17,163,14],[337,18],[340,0,165,12,"user"],[340,16,165,12,"user"],[340,20],[340,23,165,19,"Auth"],[340,40,165,24,"user"],[340,44,165,19],[340,45,165,29,"username"],[340,53],[341,0,166,12,"origin"],[341,16,166,12,"origin"],[341,22],[341,25,166,21],[341,30,166,26,"state"],[341,35,166,21],[341,36,166,32,"originText"],[341,46],[342,0,167,12,"destination"],[342,16,167,12,"destination"],[342,27],[342,30,167,26],[342,35,167,31,"state"],[342,40,167,26],[342,41,167,37,"destinationText"],[342,56],[343,0,168,12,"waypoints"],[343,16,168,12,"waypoints"],[343,25],[343,28,168,24],[343,33,168,29,"state"],[343,38,168,24],[343,39,168,35,"waypointsText"],[343,52],[344,0,169,12,"routeName"],[344,16,169,12,"routeName"],[344,25],[344,28,169,24,"inputText"],[344,37],[346,50,171,31],[347,0,172,10,"body"],[347,18,172,10,"body"],[347,22,172,14],[347,24,172,16],[348,0,173,12],[348,33,173,25,"routeName"],[348,42,172,16],[349,0,174,12],[349,28,174,20,"user"],[349,32,172,16],[350,0,175,12],[350,30,175,21,"origin"],[350,36,172,16],[351,0,176,12],[351,35,176,27,"destination"],[351,46,172,16],[352,0,177,12],[352,33,177,24,"waypoints"],[353,0,172,16],[354,0,171,31],[354,17],[357,0,171,13,"objRoutes"],[357,16,171,13,"objRoutes"],[357,25],[359,50,182,14],[359,55,182,19,"saveRoutes"],[359,65,182,14],[359,66,182,30],[359,74,182,14],[359,76,182,39],[359,85,182,14],[359,87,182,49,"objRoutes"],[359,96,182,14],[359,97],[363,50,184,14],[363,55,184,19,"getRoutes"],[363,64,184,14],[363,65,184,29,"user"],[363,69,184,14],[363,70],[367,50,186,33],[368,0,187,10,"body"],[368,18,187,10,"body"],[368,22,187,14],[368,24,187,16],[369,0,188,12],[369,28,188,20,"user"],[369,32,187,16],[370,0,189,12],[370,33,189,25],[370,38,189,30,"state"],[370,43,189,25],[370,44,189,36,"RouteName"],[371,0,187,16],[372,0,186,33],[372,17],[375,0,186,12,"objRoutesAux"],[375,16,186,12,"objRoutesAux"],[375,28],[377,50,193,18],[377,55,193,23,"state"],[377,60,193,18],[377,61,193,29,"hasRoute"],[377,69],[382,38,193,41],[382,42],[387,0,194,10,"objRoutesAux"],[387,16,194,10,"objRoutesAux"],[387,28,194,22],[387,29,194,23,"body"],[387,33,194,10],[387,34,194,28,"routeName"],[387,43,194,10],[387,44,194,38,"push"],[387,48,194,10],[387,49,194,43,"routeName"],[387,58,194,10],[392,0,196,10,"objRoutesAux"],[392,16,196,10,"objRoutesAux"],[392,28,196,22],[392,29,196,23,"body"],[392,33,196,10],[392,34,196,28,"routeName"],[392,43,196,10],[392,46,196,40],[392,47,196,41,"routeName"],[392,56,196,40],[392,57,196,10],[396,50,200,14],[396,55,200,19,"saveRoutes"],[396,65,200,14],[396,66,200,30],[396,76,200,14],[396,78,200,41],[396,89,200,14],[396,91,200,53,"objRoutesAux"],[396,103,200,14],[396,104],[399,0,201,8,"alert"],[399,16,201,8,"alert"],[399,21,201,13],[399,22,201,14],[399,48,201,13],[399,49,201,8],[410,31,258,13],[411,0,258,13],[413,0,259,8],[413,15,261,12],[413,44,261,13],[413,77,261,12],[414,0,261,34],[414,10,261,34],[414,15,261,39],[414,17,261,41,"styles"],[414,23,261,47],[414,24,261,48,"container"],[414,33,261,12],[415,0,261,59],[415,10,261,59],[415,18,261,67],[415,20,261,68],[415,29,261,12],[416,0,261,78],[416,10,261,78],[416,17,261,85],[416,23,261,12],[417,0,261,12],[418,0,261,12],[419,0,261,12],[420,0,261,12],[421,0,261,12],[421,11,263,12],[421,40,263,13],[421,64,263,12],[422,0,265,14],[422,10,265,14],[422,13,265,17],[422,15,265,19],[422,28,265,19,"map"],[422,31,265,22],[423,0,265,22],[423,19,265,26],[423,25,265,30],[423,26,265,31,"mapView"],[423,33,265,26],[423,36,265,41,"map"],[423,39,265,22],[424,0,265,22],[424,11,263,12],[425,0,266,14],[425,10,266,14],[425,15,266,19],[425,17,266,21,"styles"],[425,23,266,27],[425,24,266,28,"map"],[425,27,263,12],[426,0,268,14],[426,10,268,14],[426,16,268,20],[426,18,268,22],[427,0,269,16,"latitude"],[427,12,269,16,"latitude"],[427,20,269,24],[427,22,269,26],[427,23,269,27],[427,28,269,32,"state"],[427,33,269,27],[427,34,269,38,"origin"],[427,40,269,27],[427,41,269,45,"latitude"],[427,49,269,27],[427,52,269,56],[427,57,269,61,"state"],[427,62,269,56],[427,63,269,67,"destination"],[427,74,269,56],[427,75,269,79,"latitude"],[427,83,269,26],[427,87,269,91],[427,88,268,22],[428,0,270,16,"longitude"],[428,12,270,16,"longitude"],[428,21,270,25],[428,23,270,27],[428,24,270,28],[428,29,270,33,"state"],[428,34,270,28],[428,35,270,39,"origin"],[428,41,270,28],[428,42,270,46,"longitude"],[428,51,270,28],[428,54,270,58],[428,59,270,63,"state"],[428,64,270,58],[428,65,270,69,"destination"],[428,76,270,58],[428,77,270,81,"longitude"],[428,86,270,27],[428,90,270,94],[428,91,268,22],[429,0,271,16,"latitudeDelta"],[429,12,271,16,"latitudeDelta"],[429,25,271,29],[429,27,271,31,"Math"],[429,31,271,35],[429,32,271,36,"abs"],[429,35,271,31],[429,36,271,40],[429,41,271,45,"state"],[429,46,271,40],[429,47,271,51,"origin"],[429,53,271,40],[429,54,271,58,"latitude"],[429,62,271,40],[429,65,271,69],[429,70,271,74,"state"],[429,75,271,69],[429,76,271,80,"destination"],[429,87,271,69],[429,88,271,92,"latitude"],[429,96,271,31],[429,100,271,104,"Math"],[429,104,271,108],[429,105,271,109,"abs"],[429,108,271,104],[429,109,271,113],[429,114,271,118,"state"],[429,119,271,113],[429,120,271,124,"origin"],[429,126,271,113],[429,127,271,131,"latitude"],[429,135,271,113],[429,138,271,142],[429,143,271,147,"state"],[429,148,271,142],[429,149,271,153,"destination"],[429,160,271,142],[429,161,271,165,"latitude"],[429,169,271,104],[429,173,271,177],[429,175,268,22],[430,0,272,16,"longitudeDelta"],[430,12,272,16,"longitudeDelta"],[430,26,272,30],[430,28,272,32,"Math"],[430,32,272,36],[430,33,272,37,"abs"],[430,36,272,32],[430,37,272,41],[430,42,272,46,"state"],[430,47,272,41],[430,48,272,52,"origin"],[430,54,272,41],[430,55,272,59,"longitude"],[430,64,272,41],[430,67,272,71],[430,72,272,76,"state"],[430,77,272,71],[430,78,272,82,"destination"],[430,89,272,71],[430,90,272,94,"longitude"],[430,99,272,32],[430,103,272,107,"Math"],[430,107,272,111],[430,108,272,112,"abs"],[430,111,272,107],[430,112,272,116],[430,117,272,121,"state"],[430,122,272,116],[430,123,272,127,"origin"],[430,129,272,116],[430,130,272,134,"longitude"],[430,139,272,116],[430,142,272,146],[430,147,272,151,"state"],[430,152,272,146],[430,153,272,157,"destination"],[430,164,272,146],[430,165,272,169,"longitude"],[430,174,272,107],[430,178,272,182],[431,0,268,22],[431,11,263,12],[432,0,275,14],[432,10,275,14],[432,24,275,28],[432,26,275,30],[432,30,263,12],[433,0,276,14],[433,10,276,14],[433,24,276,28],[433,26,276,30],[433,30,263,12],[434,0,277,14],[434,10,277,14],[434,28,277,32],[434,30,277,34],[434,34,263,12],[435,0,263,12],[436,0,263,12],[437,0,263,12],[438,0,263,12],[439,0,263,12],[439,11,281,12],[439,40,281,13],[439,64,281,12],[439,65,281,21],[439,71,281,12],[440,0,282,14],[440,10,282,14],[440,20,282,24],[440,22,282,26],[440,27,282,31,"state"],[440,32,282,26],[440,33,282,37,"destination"],[440,44,281,12],[441,0,281,12],[442,0,281,12],[443,0,281,12],[444,0,281,12],[445,0,281,12],[445,11,284,14],[445,40,284,15],[445,64,284,14],[445,65,284,23],[445,72,284,14],[446,0,284,31],[446,10,284,31],[446,17,284,38],[446,19,284,40],[446,24,284,45,"handleGetGoogleMapDirections"],[446,52,284,14],[447,0,284,14],[448,0,284,14],[449,0,284,14],[450,0,284,14],[451,0,284,14],[451,11,285,16],[451,40,285,17],[451,57,285,16],[452,0,285,16],[453,0,285,16],[454,0,285,16],[455,0,285,16],[456,0,285,16],[456,36,284,14],[456,37,281,12],[456,38,263,12],[456,40,289,12],[456,69,289,13],[456,93,289,12],[456,94,289,21],[456,100,289,12],[457,0,290,14],[457,10,290,14],[457,20,290,24],[457,22,290,26],[457,27,290,31,"state"],[457,32,290,26],[457,33,290,37,"waypoints"],[457,42,289,12],[458,0,289,12],[459,0,289,12],[460,0,289,12],[461,0,289,12],[462,0,289,12],[462,10,263,12],[462,12,294,12],[462,41,294,13],[462,65,294,12],[462,66,294,21],[462,72,294,12],[463,0,295,14],[463,10,295,14],[463,20,295,24],[463,22,295,26],[463,27,295,31,"state"],[463,32,295,26],[463,33,295,37,"origin"],[463,39,294,12],[464,0,294,12],[465,0,294,12],[466,0,294,12],[467,0,294,12],[468,0,294,12],[468,11,297,12],[468,40,297,13],[468,64,297,12],[468,65,297,21],[468,72,297,12],[469,0,297,12],[470,0,297,12],[471,0,297,12],[472,0,297,12],[473,0,297,12],[473,11,298,16],[473,40,298,17],[473,57,298,16],[474,0,298,16],[475,0,298,16],[476,0,298,16],[477,0,298,16],[478,0,298,16],[478,35,297,12],[478,36,294,12],[478,37,263,12],[478,39,302,12],[478,68,302,13],[478,102,302,12],[479,0,303,14],[479,10,303,14],[479,16,303,20],[479,18,303,22],[479,23,303,27,"state"],[479,28,303,22],[479,29,303,33,"origin"],[479,35,302,12],[480,0,304,14],[480,10,304,14],[480,19,304,23],[480,21,304,25],[480,26,304,30,"state"],[480,31,304,25],[480,32,304,36,"arrWaypoints"],[480,44,302,12],[481,0,305,14],[481,10,305,14],[481,21,305,25],[481,23,305,27],[481,28,305,32,"state"],[481,33,305,27],[481,34,305,38,"destination"],[481,45,302,12],[482,0,306,14],[482,10,306,14],[482,16,306,20],[482,18,306,22,"GOOGLE_MAPS_APIKEY"],[482,36,302,12],[483,0,302,12],[484,0,302,12],[485,0,302,12],[486,0,302,12],[487,0,302,12],[487,10,263,12],[487,11,261,12],[487,13,311,12],[487,42,311,13],[487,73,311,12],[488,0,311,25],[488,10,311,25],[488,25,311,40],[488,27,311,42],[488,32,311,47,"state"],[488,37,311,42],[488,38,311,53,"isDialogVisible"],[488,53,311,12],[489,0,312,12],[489,10,312,12],[489,15,312,17],[489,17,312,19],[489,29,311,12],[490,0,313,12],[490,10,313,12],[490,17,313,19],[490,19,313,21],[490,42,311,12],[491,0,314,12],[491,10,314,12],[491,19,314,21],[491,21,314,24],[491,44,311,12],[492,0,315,12],[492,10,315,12],[492,21,315,23],[492,23,315,26],[492,44,315,27,"inputText"],[492,53,315,26],[492,55,315,41],[493,0,315,42],[493,12,315,42],[493,18,315,46],[493,19,315,47,"sendInput"],[493,28,315,42],[493,29,315,57,"inputText"],[493,38,315,42],[494,0,315,68],[494,11,311,12],[495,0,316,12],[495,10,316,12],[495,21,316,23],[495,23,316,26],[495,46,316,32],[496,0,316,34],[496,12,316,34],[496,18,316,38],[496,19,316,39,"setState"],[496,27,316,34],[496,28,316,48],[497,0,316,49,"isDialogVisible"],[497,14,316,49,"isDialogVisible"],[497,29,316,64],[497,31,316,65],[498,0,316,48],[498,13,316,34],[499,0,316,73],[499,11,311,12],[500,0,311,12],[501,0,311,12],[502,0,311,12],[503,0,311,12],[504,0,311,12],[504,10,261,12],[504,12,319,16],[504,41,319,17],[504,63,319,16],[505,0,320,20],[505,10,320,20],[505,15,320,25],[505,17,320,27,"styles"],[505,23,320,33],[505,24,320,34,"input"],[505,29,319,16],[506,0,321,20],[506,10,321,20],[506,22,321,32],[506,24,321,34],[506,46,321,35,"text"],[506,50,321,34],[507,0,321,34],[507,19,321,44],[507,25,321,48],[507,26,321,49,"setState"],[507,34,321,44],[507,35,321,58],[508,0,321,60,"originText"],[508,14,321,60,"originText"],[508,24,321,70],[508,26,321,72,"text"],[509,0,321,58],[509,13,321,44],[509,14,321,34],[510,0,321,34],[510,11,319,16],[511,0,322,20],[511,10,322,20],[511,21,322,31],[511,23,322,32],[511,31,319,16],[512,0,323,20],[512,10,323,20],[512,15,323,25],[512,17,323,27],[512,22,323,32,"state"],[512,27,323,27],[512,28,323,38,"originText"],[512,38,319,16],[513,0,319,16],[514,0,319,16],[515,0,319,16],[516,0,319,16],[517,0,319,16],[517,10,261,12],[517,12,332,17],[517,41,332,18],[517,63,332,17],[518,0,333,20],[518,10,333,20],[518,15,333,25],[518,17,333,27,"styles"],[518,23,333,33],[518,24,333,34,"input"],[518,29,332,17],[519,0,334,20],[519,10,334,20],[519,22,334,32],[519,24,334,34],[519,46,334,35,"text"],[519,50,334,34],[520,0,334,34],[520,19,334,44],[520,25,334,48],[520,26,334,49,"setState"],[520,34,334,44],[520,35,334,58],[521,0,334,60,"destinationText"],[521,14,334,60,"destinationText"],[521,29,334,75],[521,31,334,77,"text"],[522,0,334,58],[522,13,334,44],[522,14,334,34],[523,0,334,34],[523,11,332,17],[524,0,335,20],[524,10,335,20],[524,21,335,31],[524,23,335,32],[524,36,332,17],[525,0,336,20],[525,10,336,20],[525,15,336,25],[525,17,336,27],[525,22,336,32,"state"],[525,27,336,27],[525,28,336,38,"destinationText"],[525,43,332,17],[526,0,332,17],[527,0,332,17],[528,0,332,17],[529,0,332,17],[530,0,332,17],[530,10,261,12],[530,12,339,16],[530,41,339,17],[530,70,339,16],[531,0,339,34],[531,10,339,34],[531,15,339,39],[531,17,339,41,"styles"],[531,23,339,47],[531,24,339,48,"button"],[531,30,339,16],[532,0,339,56],[532,10,339,56],[532,17,339,63],[532,19,339,65],[532,24,339,70,"handleButton"],[532,36,339,16],[533,0,339,16],[534,0,339,16],[535,0,339,16],[536,0,339,16],[537,0,339,16],[537,11,341,20],[537,40,341,21],[537,57,341,20],[538,0,341,26],[538,10,341,26],[538,15,341,31],[538,17,341,33,"styles"],[538,23,341,39],[538,24,341,40,"buttonText"],[538,34,341,20],[539,0,341,20],[540,0,341,20],[541,0,341,20],[542,0,341,20],[543,0,341,20],[543,26,339,16],[543,27,261,12],[543,29,345,16],[543,58,345,17],[543,87,345,16],[544,0,345,34],[544,10,345,34],[544,15,345,39],[544,17,345,41,"styles"],[544,23,345,47],[544,24,345,48,"button"],[544,30,345,16],[545,0,345,56],[545,10,345,56],[545,17,345,63],[545,19,345,65],[545,24,345,70,"saveButton"],[545,34,345,16],[546,0,345,16],[547,0,345,16],[548,0,345,16],[549,0,345,16],[550,0,345,16],[550,11,347,20],[550,40,347,21],[550,57,347,20],[551,0,347,26],[551,10,347,26],[551,15,347,31],[551,17,347,33,"styles"],[551,23,347,39],[551,24,347,40,"buttonText"],[551,34,347,20],[552,0,347,20],[553,0,347,20],[554,0,347,20],[555,0,347,20],[556,0,347,20],[556,24,345,16],[556,25,261,12],[556,26,259,8],[557,0,355,5],[560,4,31,39,"Component"],[560,20],[565,0,359,0],[565,6,359,6,"styles"],[565,12,359,12],[565,15,359,15,"StyleSheet"],[565,39,359,26,"create"],[565,45,359,15],[565,46,359,33],[566,0,361,4,"container"],[566,4,361,4,"container"],[566,13,361,13],[566,15,361,15],[567,0,363,8,"flex"],[567,6,363,8,"flex"],[567,10,363,12],[567,12,363,14],[567,13,361,15],[568,0,364,8,"justifyContent"],[568,6,364,8,"justifyContent"],[568,20,364,22],[568,22,364,24],[568,32,361,15],[569,0,365,8,"alignItems"],[569,6,365,8,"alignItems"],[569,16,365,18],[569,18,365,20],[570,0,361,15],[570,5,359,33],[571,0,369,6,"map"],[571,4,369,6,"map"],[571,7,369,9],[571,9,369,11],[572,0,371,8,"position"],[572,6,371,8,"position"],[572,14,371,16],[572,16,371,18],[572,26,369,11],[573,0,372,8,"top"],[573,6,372,8,"top"],[573,9,372,11],[573,11,372,13],[573,12,369,11],[574,0,373,8,"left"],[574,6,373,8,"left"],[574,10,373,12],[574,12,373,14],[574,13,369,11],[575,0,374,8,"right"],[575,6,374,8,"right"],[575,11,374,13],[575,13,374,15],[575,14,369,11],[576,0,375,8,"bottom"],[576,6,375,8,"bottom"],[576,12,375,14],[576,14,375,16],[577,0,369,11],[577,5,359,33],[578,0,379,6,"button"],[578,4,379,6,"button"],[578,10,379,12],[578,12,379,14],[579,0,381,8,"width"],[579,6,381,8,"width"],[579,11,381,13],[579,13,381,15,"width"],[579,18,381,20],[579,21,381,23],[579,24,379,14],[580,0,382,8,"height"],[580,6,382,8,"height"],[580,12,382,14],[580,14,382,16],[580,16,379,14],[581,0,383,8,"backgroundColor"],[581,6,383,8,"backgroundColor"],[581,21,383,23],[581,23,383,25],[581,29,379,14],[582,0,384,8,"alignItems"],[582,6,384,8,"alignItems"],[582,16,384,18],[582,18,384,20],[582,26,379,14],[583,0,385,8,"justifyContent"],[583,6,385,8,"justifyContent"],[583,20,385,22],[583,22,385,24],[583,30,379,14],[584,0,386,8,"borderWidth"],[584,6,386,8,"borderWidth"],[584,17,386,19],[584,19,386,21],[584,20,379,14],[585,0,387,8,"borderColor"],[585,6,387,8,"borderColor"],[585,17,387,19],[585,19,387,21],[585,25,379,14],[586,0,388,8,"borderRadius"],[586,6,388,8,"borderRadius"],[586,18,388,20],[586,20,388,22],[586,21,379,14],[587,0,389,8,"marginBottom"],[587,6,389,8,"marginBottom"],[587,18,389,20],[587,20,389,22],[587,22,379,14],[588,0,390,8,"marginHorizontal"],[588,6,390,8,"marginHorizontal"],[588,22,390,24],[588,24,390,26],[589,0,379,14],[589,5,359,33],[590,0,394,6,"buttonText"],[590,4,394,6,"buttonText"],[590,14,394,16],[590,16,394,18],[591,0,396,8,"color"],[591,6,396,8,"color"],[591,11,396,13],[591,13,396,15],[591,19,394,18],[592,0,397,8,"fontWeight"],[592,6,397,8,"fontWeight"],[592,16,397,18],[592,18,397,20],[593,0,394,18],[593,5,359,33],[594,0,401,6,"inputContainer"],[594,4,401,6,"inputContainer"],[594,18,401,20],[594,20,401,22],[595,0,403,8,"width"],[595,6,403,8,"width"],[595,11,403,13],[595,13,403,15],[595,19,401,22],[596,0,404,8,"maxHeight"],[596,6,404,8,"maxHeight"],[596,15,404,17],[596,17,404,19],[597,0,401,22],[597,5,359,33],[598,0,408,6,"input"],[598,4,408,6,"input"],[598,9,408,11],[598,11,408,13],[599,0,410,8,"width"],[599,6,410,8,"width"],[599,11,410,13],[599,13,410,15,"width"],[599,18,410,20],[599,21,410,23],[599,23,408,13],[600,0,411,8,"maxHeight"],[600,6,411,8,"maxHeight"],[600,15,411,17],[600,17,411,19],[600,20,408,13],[601,0,412,8,"backgroundColor"],[601,6,412,8,"backgroundColor"],[601,21,412,23],[601,23,412,25],[601,29,408,13],[602,0,413,8,"marginBottom"],[602,6,413,8,"marginBottom"],[602,18,413,20],[602,20,413,22],[602,22,408,13],[603,0,414,8,"marginHorizontal"],[603,6,414,8,"marginHorizontal"],[603,22,414,24],[603,24,414,26],[604,0,408,13],[605,0,359,33],[605,3,359,15],[605,4,359,0]]},"type":"js/module"}]}