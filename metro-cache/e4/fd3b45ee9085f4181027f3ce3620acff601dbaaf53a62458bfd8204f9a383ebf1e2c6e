{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false}},{"name":"@babel/runtime/regenerator","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"./../../node_modules/react-transform-hmr/lib/index.js","data":{"isAsync":false}},{"name":"../../aws-exports","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"react-native-dialog-input","data":{"isAsync":false}},{"name":"react-native-maps","data":{"isAsync":false}},{"name":"react-native-maps-directions","data":{"isAsync":false}},{"name":"react-native-google-maps-directions","data":{"isAsync":false}},{"name":"aws-amplify","data":{"isAsync":false}},{"name":"react-native-geocoding","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/regenerator\"));\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/createClass\"));\n\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n\n  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/getPrototypeOf\"));\n\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"@babel/runtime/helpers/inherits\"));\n\n  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8], \"react\"));\n\n  var _index = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9], \"./../../node_modules/react-transform-hmr/lib/index.js\"));\n\n  var _awsExports = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10], \"../../aws-exports\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[11], \"react-native\");\n\n  var _reactNativeDialogInput = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12], \"react-native-dialog-input\"));\n\n  var _reactNativeMaps = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13], \"react-native-maps\"));\n\n  var _reactNativeMapsDirections = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14], \"react-native-maps-directions\"));\n\n  var _reactNativeGoogleMapsDirections = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15], \"react-native-google-maps-directions\"));\n\n  var _awsAmplify = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[16], \"aws-amplify\"));\n\n  var _reactNativeGeocoding = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17], \"react-native-geocoding\"));\n\n  var _temp,\n      _jsxFileName = \"/home/carlsen/Desktop/TCC/Modules/RoutesModules/Routes.js\";\n\n  var _components = {\n    MapScreen: {\n      displayName: \"MapScreen\"\n    }\n  };\n\n  var _node_modulesReactTransformHmrLibIndexJs2 = (0, _index.default)({\n    filename: \"/home/carlsen/Desktop/TCC/Modules/RoutesModules/Routes.js\",\n    components: _components,\n    locals: [module],\n    imports: [_react.default]\n  });\n\n  function _wrapComponent(id) {\n    return function (Component) {\n      return _node_modulesReactTransformHmrLibIndexJs2(Component, id);\n    };\n  }\n\n  var GOOGLE_MAPS_APIKEY = _awsExports.default.GOOGLEAPI;\n  var routeAPI = 'http://vrp-dev.us-east-1.elasticbeanstalk.com/api/v1/vrp/route=';\n  var arr = [];\n  var backgroundColor = '#007256';\n\n  var _Dimensions$get = _reactNative.Dimensions.get('window'),\n      height = _Dimensions$get.height,\n      width = _Dimensions$get.width;\n\n  var MapScreen = _wrapComponent(\"MapScreen\")((_temp = function (_Component) {\n    (0, _inherits2.default)(MapScreen, _Component);\n\n    function MapScreen() {\n      var _getPrototypeOf2;\n\n      var _this;\n\n      (0, _classCallCheck2.default)(this, MapScreen);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(MapScreen)).call.apply(_getPrototypeOf2, [this].concat(args)));\n      _this.state = {\n        isDialogVisible: false,\n        origin: {\n          latitude: 42.3616132,\n          longitude: -71.0672576\n        },\n        destination: {\n          latitude: 42.3730591,\n          longitude: -71.033754\n        },\n        waypoints: {\n          latitude: 0,\n          longitude: 0\n        },\n        originText: '',\n        destinationText: '',\n        waypointsText: '',\n        RouteName: '',\n        hasRoute: false,\n        arrWaypoints: []\n      };\n\n      _this.getLocation = function () {\n        navigator.geolocation.getCurrentPosition(function (position) {\n          var newOrigin = {\n            latitude: position.coords.latitude,\n            longitude: position.coords.longitude\n          };\n          console.log('new origin');\n          console.log(newOrigin);\n\n          _this.setState({\n            origin: newOrigin\n          });\n        }, function (err) {\n          console.log('error');\n          console.log(err);\n        }, {\n          enableHighAccuracy: true,\n          timeout: 2000,\n          maximumAge: 1000\n        });\n      };\n\n      _this.saveButton = function () {\n        _this.setState({\n          isDialogVisible: true\n        });\n      };\n\n      _this.handleButton = function () {\n        var fullAPI = routeAPI + \"Campinas|Rio+Janeiro|Sao+Paulo\" + '/' + 1;\n        fetch(fullAPI).then(function (response) {\n          return response.json();\n        }).then(function (data) {\n          data.Route[0].forEach(function (item, indice, array) {\n            var arrayAux = [];\n            var str = item.replace(\"+\", \" \");\n            arrayAux.push(str);\n            console.log(str);\n            console.log(array.length);\n          });\n        });\n      };\n\n      _this.handleGetGoogleMapDirections = function () {\n        var data = {\n          source: _this.state.origin,\n          destination: _this.state.destination,\n          waypoints: _this.state.arrWaypoints,\n          params: [{\n            key: \"travelmode\",\n            value: \"driving\"\n          }]\n        };\n        (0, _reactNativeGoogleMapsDirections.default)(data);\n      };\n\n      return _this;\n    }\n\n    (0, _createClass2.default)(MapScreen, [{\n      key: \"requestLocationPermission\",\n      value: function requestLocationPermission() {\n        var granted;\n        return _regenerator.default.async(function requestLocationPermission$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return _regenerator.default.awrap(_reactNative.PermissionsAndroid.request(_reactNative.PermissionsAndroid.PERMISSIONS.ACCESS_FINE_LOCATION, {\n                  'title': 'App Location Permission',\n                  'message': 'Maps App needs access to your map ' + 'so you can be navigated.'\n                }));\n\n              case 3:\n                granted = _context.sent;\n\n                if (!(granted === _reactNative.PermissionsAndroid.RESULTS.GRANTED)) {\n                  _context.next = 9;\n                  break;\n                }\n\n                console.log(\"You can use the location\");\n                return _context.abrupt(\"return\", true);\n\n              case 9:\n                console.log(\"location permission denied\");\n                return _context.abrupt(\"return\", false);\n\n              case 11:\n                _context.next = 16;\n                break;\n\n              case 13:\n                _context.prev = 13;\n                _context.t0 = _context[\"catch\"](0);\n                console.warn(_context.t0);\n\n              case 16:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, null, [[0, 13]]);\n      }\n    }, {\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        var isGranted;\n        return _regenerator.default.async(function componentDidMount$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return _regenerator.default.awrap(this.requestLocationPermission());\n\n              case 2:\n                isGranted = _context2.sent;\n\n                if (isGranted) {\n                  this.getLocation();\n                }\n\n                this.getLocation();\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, null, this);\n      }\n    }, {\n      key: \"saveRoutes\",\n      value: function saveRoutes(api, path, objRoutes) {\n        var apiResponse;\n        return _regenerator.default.async(function saveRoutes$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                _context3.next = 3;\n                return _regenerator.default.awrap(_awsAmplify.API.put(api, path, objRoutes));\n\n              case 3:\n                apiResponse = _context3.sent;\n                console.log(\"response from saving routes: \" + apiResponse);\n                this.setState({\n                  apiResponse: apiResponse\n                });\n                return _context3.abrupt(\"return\", apiResponse);\n\n              case 9:\n                _context3.prev = 9;\n                _context3.t0 = _context3[\"catch\"](0);\n                console.log(_context3.t0);\n\n              case 12:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, null, this, [[0, 9]]);\n      }\n    }, {\n      key: \"getRoutes\",\n      value: function getRoutes(user) {\n        var path, _apiResponse;\n\n        return _regenerator.default.async(function getRoutes$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                path = \"/getRoute/object/\" + user;\n                _context4.prev = 1;\n                _context4.next = 4;\n                return _regenerator.default.awrap(_awsAmplify.API.get(\"getRoute\", path));\n\n              case 4:\n                _apiResponse = _context4.sent;\n                console.log(\"response from get routes: \" + _apiResponse.routeName);\n                this.setState({\n                  apiResponse: _apiResponse\n                });\n\n                if (_apiResponse.routeName != undefined) {\n                  this.setState({\n                    RouteName: _apiResponse.routeName\n                  });\n                  console.log(this.state.RouteName);\n                  this.setState({\n                    hasRoute: true\n                  });\n                  console.log(\"List Route: \" + this.state.RouteName);\n                } else {\n                  this.setState({\n                    hasRoute: false\n                  });\n                }\n\n                return _context4.abrupt(\"return\", _apiResponse);\n\n              case 11:\n                _context4.prev = 11;\n                _context4.t0 = _context4[\"catch\"](1);\n                console.log(_context4.t0);\n\n              case 14:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, null, this, [[1, 11]]);\n      }\n    }, {\n      key: \"sendInput\",\n      value: function sendInput(inputText) {\n        var user, origin, destination, waypoints, routeName, objRoutes, objRoutesAux;\n        return _regenerator.default.async(function sendInput$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return _regenerator.default.awrap(this.setState({\n                  isDialogVisible: false\n                }));\n\n              case 2:\n                user = _awsAmplify.Auth.user.username;\n                origin = this.state.originText;\n                destination = this.state.destinationText;\n                waypoints = this.state.waypointsText;\n                routeName = inputText;\n                _context5.next = 9;\n                return _regenerator.default.awrap({\n                  body: {\n                    \"routeName\": routeName,\n                    \"user\": user,\n                    \"origin\": origin,\n                    \"destination\": destination,\n                    \"waypoints\": waypoints\n                  }\n                });\n\n              case 9:\n                objRoutes = _context5.sent;\n                _context5.next = 12;\n                return _regenerator.default.awrap(this.saveRoutes(\"Routes\", \"/routes\", objRoutes));\n\n              case 12:\n                _context5.next = 14;\n                return _regenerator.default.awrap(this.getRoutes(user));\n\n              case 14:\n                _context5.next = 16;\n                return _regenerator.default.awrap({\n                  body: {\n                    \"user\": user,\n                    \"routeName\": this.state.RouteName\n                  }\n                });\n\n              case 16:\n                objRoutesAux = _context5.sent;\n                _context5.next = 19;\n                return _regenerator.default.awrap(this.state.hasRoute);\n\n              case 19:\n                _context5.t0 = _context5.sent;\n\n                if (!(_context5.t0 == true)) {\n                  _context5.next = 24;\n                  break;\n                }\n\n                objRoutesAux.body.routeName.push(routeName);\n                _context5.next = 25;\n                break;\n\n              case 24:\n                objRoutesAux.body.routeName = [routeName];\n\n              case 25:\n                _context5.next = 27;\n                return _regenerator.default.awrap(this.saveRoutes(\"getRoute\", \"/getRoute\", objRoutesAux));\n\n              case 27:\n                alert('Route saved successfully');\n\n              case 28:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, null, this);\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var _this2 = this;\n\n        return _react.default.createElement(_reactNative.KeyboardAvoidingView, {\n          style: styles.container,\n          behavior: \"padding\",\n          enabled: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 260\n          }\n        }, _react.default.createElement(_reactNativeMaps.default, {\n          ref: function ref(map) {\n            return _this2.mapView = map;\n          },\n          style: styles.map,\n          region: {\n            latitude: (this.state.origin.latitude + this.state.destination.latitude) / 2,\n            longitude: (this.state.origin.longitude + this.state.destination.longitude) / 2,\n            latitudeDelta: Math.abs(this.state.origin.latitude - this.state.destination.latitude) + Math.abs(this.state.origin.latitude - this.state.destination.latitude) * .1,\n            longitudeDelta: Math.abs(this.state.origin.longitude - this.state.destination.longitude) + Math.abs(this.state.origin.longitude - this.state.destination.longitude) * .1\n          },\n          loadingEnabled: true,\n          toolbarEnabled: true,\n          zoomControlEnabled: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 262\n          }\n        }, _react.default.createElement(_reactNativeMaps.default.Marker, {\n          coordinate: this.state.destination,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 280\n          }\n        }, _react.default.createElement(_reactNativeMaps.default.Callout, {\n          onPress: this.handleGetGoogleMapDirections,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 283\n          }\n        }, _react.default.createElement(_reactNative.Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 284\n          }\n        }, \"Press to Get Direction\"))), _react.default.createElement(_reactNativeMaps.default.Marker, {\n          coordinate: this.state.waypoints,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 288\n          }\n        }), _react.default.createElement(_reactNativeMaps.default.Marker, {\n          coordinate: this.state.origin,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 293\n          }\n        }, _react.default.createElement(_reactNativeMaps.default.Callout, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 296\n          }\n        }, _react.default.createElement(_reactNative.Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 297\n          }\n        }, \"This is where you are\"))), _react.default.createElement(_reactNativeMapsDirections.default, {\n          origin: this.state.origin,\n          waypoints: this.state.arrWaypoints,\n          destination: this.state.destination,\n          apikey: GOOGLE_MAPS_APIKEY,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 301\n          }\n        })), _react.default.createElement(_reactNativeDialogInput.default, {\n          isDialogVisible: this.state.isDialogVisible,\n          title: \"Route Name\",\n          message: \"Enter your route name\",\n          hintInput: \"Enter your route name\",\n          submitInput: function submitInput(inputText) {\n            _this2.sendInput(inputText);\n          },\n          closeDialog: function closeDialog() {\n            _this2.setState({\n              isDialogVisible: false\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 310\n          }\n        }), _react.default.createElement(_reactNative.TextInput, {\n          style: styles.input,\n          onChangeText: function onChangeText(text) {\n            return _this2.setState({\n              originText: text\n            });\n          },\n          placeholder: \"Origin\",\n          value: this.state.originText,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 318\n          }\n        }), _react.default.createElement(_reactNative.TextInput, {\n          style: styles.input,\n          onChangeText: function onChangeText(text) {\n            return _this2.setState({\n              destinationText: text\n            });\n          },\n          placeholder: \"Destination\",\n          value: this.state.destinationText,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 331\n          }\n        }), _react.default.createElement(_reactNative.TouchableOpacity, {\n          style: styles.button,\n          onPress: this.handleButton,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 338\n          }\n        }, _react.default.createElement(_reactNative.Text, {\n          style: styles.buttonText,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 340\n          }\n        }, \"Search Route\")), _react.default.createElement(_reactNative.TouchableOpacity, {\n          style: styles.button,\n          onPress: this.saveButton,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 344\n          }\n        }, _react.default.createElement(_reactNative.Text, {\n          style: styles.buttonText,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 346\n          }\n        }, \"Save Route\")));\n      }\n    }]);\n    return MapScreen;\n  }(_react.Component), _temp));\n\n  var _default2 = MapScreen;\n  exports.default = _default2;\n\n  var styles = _reactNative.StyleSheet.create({\n    container: {\n      flex: 1,\n      justifyContent: 'flex-end',\n      alignItems: 'flex-end'\n    },\n    map: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0\n    },\n    button: {\n      width: width - 100,\n      height: 40,\n      backgroundColor: '#FFF',\n      alignItems: 'center',\n      justifyContent: 'center',\n      borderWidth: 1,\n      borderColor: '#000',\n      borderRadius: 7,\n      marginBottom: 15,\n      marginHorizontal: 20\n    },\n    buttonText: {\n      color: '#000',\n      fontWeight: 'bold'\n    },\n    inputContainer: {\n      width: '100%',\n      maxHeight: 200\n    },\n    input: {\n      width: width - 40,\n      maxHeight: 200,\n      backgroundColor: '#FFF',\n      marginBottom: 15,\n      marginHorizontal: 20\n    }\n  });\n});","map":[[23,0,2,0],[27,0,3,0],[29,0,4,0],[31,0,15,0],[33,0,16,0],[35,0,17,0],[37,0,18,0],[39,0,20,0],[41,0,21,0],[65,0,23,0],[65,6,23,6,"GOOGLE_MAPS_APIKEY"],[65,24,23,24],[65,27,23,27,"AWSConfig"],[65,47,23,37,"GOOGLEAPI"],[65,56,23,0],[66,0,24,0],[66,6,24,6,"routeAPI"],[66,14,24,14],[66,17,24,17],[66,82,24,0],[67,0,25,0],[67,6,25,6,"arr"],[67,9,25,9],[67,12,25,12],[67,14,25,0],[68,0,27,0],[68,6,27,6,"backgroundColor"],[68,21,27,21],[68,24,27,24],[68,33,27,0],[70,24,29,26,"Dimensions"],[70,48,29,37,"get"],[70,51,29,26],[70,52,29,41],[70,60,29,26],[70,61],[71,6,29,8,"height"],[71,12],[71,31,29,8,"height"],[71,37],[72,6,29,16,"width"],[72,11],[72,30,29,16,"width"],[72,35],[89,12,33,4,"state"],[89,17],[89,20,33,12],[90,0,34,8,"isDialogVisible"],[90,8,34,8,"isDialogVisible"],[90,23,34,23],[90,25,34,24],[90,30,33,12],[91,0,35,8,"origin"],[91,8,35,8,"origin"],[91,14,35,14],[91,16,35,16],[92,0,35,18,"latitude"],[92,10,35,18,"latitude"],[92,18,35,26],[92,20,35,28],[92,30,35,16],[93,0,35,40,"longitude"],[93,10,35,40,"longitude"],[93,19,35,49],[93,21,35,51],[93,22,35,52],[94,0,35,16],[94,9,33,12],[95,0,36,8,"destination"],[95,8,36,8,"destination"],[95,19,36,19],[95,21,36,21],[96,0,36,23,"latitude"],[96,10,36,23,"latitude"],[96,18,36,31],[96,20,36,33],[96,30,36,21],[97,0,36,45,"longitude"],[97,10,36,45,"longitude"],[97,19,36,54],[97,21,36,56],[97,22,36,57],[98,0,36,21],[98,9,33,12],[99,0,37,8,"waypoints"],[99,8,37,8,"waypoints"],[99,17,37,17],[99,19,37,18],[100,0,37,20,"latitude"],[100,10,37,20,"latitude"],[100,18,37,28],[100,20,37,30],[100,21,37,18],[101,0,37,33,"longitude"],[101,10,37,33,"longitude"],[101,19,37,42],[101,21,37,44],[102,0,37,18],[102,9,33,12],[103,0,38,8,"originText"],[103,8,38,8,"originText"],[103,18,38,18],[103,20,38,20],[103,22,33,12],[104,0,39,8,"destinationText"],[104,8,39,8,"destinationText"],[104,23,39,23],[104,25,39,25],[104,27,33,12],[105,0,40,8,"waypointsText"],[105,8,40,8,"waypointsText"],[105,21,40,21],[105,23,40,22],[105,25,33,12],[106,0,41,8,"RouteName"],[106,8,41,8,"RouteName"],[106,17,41,17],[106,19,41,18],[106,21,33,12],[107,0,42,8,"hasRoute"],[107,8,42,8,"hasRoute"],[107,16,42,16],[107,18,42,18],[107,23,33,12],[108,0,43,8,"arrWaypoints"],[108,8,43,8,"arrWaypoints"],[108,20,43,20],[108,22,43,21],[109,0,33,12],[109,7],[111,12,84,6,"getLocation"],[111,23],[111,26,84,20],[111,38,84,26],[112,0,85,8,"navigator"],[112,8,85,8,"navigator"],[112,17,85,17],[112,18,85,18,"geolocation"],[112,29,85,8],[112,30,85,30,"getCurrentPosition"],[112,48,85,8],[112,49,85,49],[112,59,85,50,"position"],[112,67,85,49],[112,69,85,63],[113,0,86,12],[113,14,86,16,"newOrigin"],[113,23,86,25],[113,26,86,28],[114,0,87,16,"latitude"],[114,12,87,16,"latitude"],[114,20,87,24],[114,22,87,26,"position"],[114,30,87,34],[114,31,87,35,"coords"],[114,37,87,26],[114,38,87,42,"latitude"],[114,46,86,28],[115,0,88,16,"longitude"],[115,12,88,16,"longitude"],[115,21,88,25],[115,23,88,27,"position"],[115,31,88,35],[115,32,88,36,"coords"],[115,38,88,27],[115,39,88,43,"longitude"],[116,0,86,28],[116,11,86,12],[117,0,91,12,"console"],[117,10,91,12,"console"],[117,17,91,19],[117,18,91,20,"log"],[117,21,91,12],[117,22,91,24],[117,34,91,12],[118,0,92,12,"console"],[118,10,92,12,"console"],[118,17,92,19],[118,18,92,20,"log"],[118,21,92,12],[118,22,92,24,"newOrigin"],[118,31,92,12],[120,0,94,12],[120,16,94,17,"setState"],[120,24,94,12],[120,25,94,26],[121,0,95,16,"origin"],[121,12,95,16,"origin"],[121,18,95,22],[121,20,95,24,"newOrigin"],[122,0,94,26],[122,11,94,12],[123,0,98,9],[123,9,85,8],[123,11,98,11],[123,21,98,12,"err"],[123,24,98,11],[123,26,98,20],[124,0,99,12,"console"],[124,10,99,12,"console"],[124,17,99,19],[124,18,99,20,"log"],[124,21,99,12],[124,22,99,24],[124,29,99,12],[125,0,100,12,"console"],[125,10,100,12,"console"],[125,17,100,19],[125,18,100,20,"log"],[125,21,100,12],[125,22,100,24,"err"],[125,25,100,12],[126,0,102,9],[126,9,85,8],[126,11,102,11],[127,0,102,12,"enableHighAccuracy"],[127,10,102,12,"enableHighAccuracy"],[127,28,102,30],[127,30,102,32],[127,34,102,11],[128,0,102,38,"timeout"],[128,10,102,38,"timeout"],[128,17,102,45],[128,19,102,47],[128,23,102,11],[129,0,102,53,"maximumAge"],[129,10,102,53,"maximumAge"],[129,20,102,63],[129,22,102,65],[130,0,102,11],[130,9,85,8],[131,0,104,7],[131,7],[133,12,121,6,"saveButton"],[133,22],[133,25,121,19],[133,37,121,25],[134,0,122,10],[134,14,122,15,"setState"],[134,22,122,10],[134,23,122,24],[135,0,122,25,"isDialogVisible"],[135,10,122,25,"isDialogVisible"],[135,25,122,40],[135,27,122,41],[136,0,122,24],[136,9,122,10],[137,0,123,7],[137,7],[139,12,204,8,"handleButton"],[139,24],[139,27,204,23],[139,39,204,29],[140,0,205,8],[140,12,205,14,"fullAPI"],[140,19,205,21],[140,22,205,24,"routeAPI"],[140,30,205,32],[140,33,205,35],[140,65,205,24],[140,68,205,70],[140,71,205,24],[140,74,205,76],[140,75,205,8],[141,0,206,8,"fetch"],[141,8,206,8,"fetch"],[141,13,206,13],[141,14,206,14,"fullAPI"],[141,21,206,13],[141,22,206,8],[141,23,206,23,"then"],[141,27,206,8],[141,28,206,28],[141,38,206,28,"response"],[141,46,206,36],[142,0,206,36],[142,17,206,40,"response"],[142,25,206,48],[142,26,206,49,"json"],[142,30,206,40],[142,32,206,36],[143,0,206,36],[143,9,206,8],[143,11,206,57,"then"],[143,15,206,8],[143,16,206,62],[143,26,206,62,"data"],[143,30,206,66],[143,32,206,70],[144,0,208,8,"data"],[144,10,208,8,"data"],[144,14,208,12],[144,15,208,13,"Route"],[144,20,208,8],[144,21,208,19],[144,22,208,8],[144,24,208,22,"forEach"],[144,31,208,8],[144,32,208,30],[144,42,208,40,"item"],[144,46,208,30],[144,48,208,46,"indice"],[144,54,208,30],[144,56,208,54,"array"],[144,61,208,30],[144,63,208,61],[145,0,209,9],[145,16,209,13,"arrayAux"],[145,24,209,21],[145,27,209,24],[145,29,209,9],[146,0,210,9],[146,16,210,13,"str"],[146,19,210,16],[146,22,210,19,"item"],[146,26,210,23],[146,27,210,24,"replace"],[146,34,210,19],[146,35,210,32],[146,38,210,19],[146,40,210,36],[146,43,210,19],[146,44,210,9],[147,0,211,9,"arrayAux"],[147,12,211,9,"arrayAux"],[147,20,211,17],[147,21,211,18,"push"],[147,25,211,9],[147,26,211,23,"str"],[147,29,211,9],[148,0,212,9,"console"],[148,12,212,9,"console"],[148,19,212,16],[148,20,212,17,"log"],[148,23,212,9],[148,24,212,21,"str"],[148,27,212,9],[149,0,213,9,"console"],[149,12,213,9,"console"],[149,19,213,16],[149,20,213,17,"log"],[149,23,213,9],[149,24,213,21,"array"],[149,29,213,26],[149,30,213,27,"length"],[149,36,213,9],[150,0,229,9],[150,11,208,8],[151,0,231,9],[151,9,206,8],[152,0,233,7],[152,7],[154,12,237,6,"handleGetGoogleMapDirections"],[154,40],[154,43,237,37],[154,55,237,43],[155,0,239,8],[155,12,239,14,"data"],[155,16,239,18],[155,19,239,21],[156,0,241,12,"source"],[156,10,241,12,"source"],[156,16,241,18],[156,18,241,20],[156,24,241,25,"state"],[156,29,241,20],[156,30,241,31,"origin"],[156,36,239,21],[157,0,242,12,"destination"],[157,10,242,12,"destination"],[157,21,242,23],[157,23,242,25],[157,29,242,30,"state"],[157,34,242,25],[157,35,242,36,"destination"],[157,46,239,21],[158,0,243,12,"waypoints"],[158,10,243,12,"waypoints"],[158,19,243,21],[158,21,243,23],[158,27,243,28,"state"],[158,32,243,23],[158,33,243,34,"arrWaypoints"],[158,45,239,21],[159,0,244,12,"params"],[159,10,244,12,"params"],[159,16,244,18],[159,18,244,20],[159,19,245,16],[160,0,246,18,"key"],[160,12,246,18,"key"],[160,15,246,21],[160,17,246,23],[160,29,245,16],[161,0,247,18,"value"],[161,12,247,18,"value"],[161,17,247,23],[161,19,247,25],[162,0,245,16],[162,11,244,20],[163,0,239,21],[163,9,239,8],[164,0,253,8],[164,54,253,22,"data"],[164,58,253,8],[165,0,255,7],[165,7],[180,50,60,34,"PermissionsAndroid"],[180,82,60,53,"request"],[180,89,60,34],[180,90,61,16,"PermissionsAndroid"],[180,122,61,35,"PERMISSIONS"],[180,133,61,16],[180,134,61,47,"ACCESS_FINE_LOCATION"],[180,154,60,34],[180,156,62,16],[181,0,63,20],[181,27,63,29],[181,52,62,16],[182,0,64,20],[182,29,64,31],[182,68,65,24],[183,0,62,16],[183,17,60,34],[183,18],[186,0,60,18,"granted"],[186,16,60,18,"granted"],[186,23],[188,22,69,16,"granted"],[188,29,69,23],[188,34,69,28,"PermissionsAndroid"],[188,66,69,47,"RESULTS"],[188,73,69,28],[188,74,69,55,"GRANTED"],[188,81],[193,0,70,16,"console"],[193,16,70,16,"console"],[193,23,70,23],[193,24,70,24,"log"],[193,27,70,16],[193,28,70,28],[193,54,70,16],[194,49,71,23],[194,53],[197,0,74,16,"console"],[197,16,74,16,"console"],[197,23,74,23],[197,24,74,24,"log"],[197,27,74,16],[197,28,74,28],[197,56,74,16],[198,49,75,23],[198,54],[207,0,79,12,"console"],[207,16,79,12,"console"],[207,23,79,19],[207,24,79,20,"warn"],[207,28,79,12],[225,50,107,30],[225,55,107,35,"requestLocationPermission"],[225,80,107,30],[225,82],[228,0,107,12,"isGranted"],[228,16,107,12,"isGranted"],[228,25],[230,0,109,8],[230,20,109,12,"isGranted"],[230,29,109,8],[230,31,109,23],[231,0,110,12],[231,23,110,17,"getLocation"],[231,34,110,12],[232,0,111,9],[234,0,113,8],[234,21,113,13,"getLocation"],[234,32,113,8],[245,33,126,24,"api"],[245,36],[245,38,126,28,"path"],[245,42],[245,44,126,33,"objRoutes"],[245,53],[253,50,128,36,"API"],[253,66,128,40,"put"],[253,69,128,36],[253,70,128,44,"api"],[253,73,128,36],[253,75,128,49,"path"],[253,79,128,36],[253,81,128,55,"objRoutes"],[253,90,128,36],[253,91],[256,0,128,16,"apiResponse"],[256,16,128,16,"apiResponse"],[256,27],[257,0,129,10,"console"],[257,16,129,10,"console"],[257,23,129,17],[257,24,129,18,"log"],[257,27,129,10],[257,28,129,22],[257,62,129,56,"apiResponse"],[257,73,129,10],[258,0,130,10],[258,21,130,15,"setState"],[258,29,130,10],[258,30,130,24],[259,0,130,25,"apiResponse"],[259,18,130,25,"apiResponse"],[259,29,130,36],[259,31,130,25,"apiResponse"],[260,0,130,24],[260,17,130,10],[261,50,131,17,"apiResponse"],[261,61],[266,0,133,10,"console"],[266,16,133,10,"console"],[266,23,133,17],[266,24,133,18,"log"],[266,27,133,10],[277,32,138,22,"user"],[277,36],[284,0,139,12,"path"],[284,16,139,12,"path"],[284,20],[284,23,139,19],[284,45,139,41,"user"],[284,49],[287,50,141,36,"API"],[287,66,141,40,"get"],[287,69,141,36],[287,70,141,44],[287,80,141,36],[287,82,141,56,"path"],[287,86,141,36],[287,87],[290,0,141,16,"apiResponse"],[290,16,141,16,"apiResponse"],[290,28],[291,0,142,10,"console"],[291,16,142,10,"console"],[291,23,142,17],[291,24,142,18,"log"],[291,27,142,10],[291,28,142,22],[291,59,142,53,"apiResponse"],[291,71,142,64],[291,72,142,65,"routeName"],[291,81,142,10],[292,0,143,10],[292,21,143,15,"setState"],[292,29,143,10],[292,30,143,24],[293,0,143,25,"apiResponse"],[293,18,143,25,"apiResponse"],[293,29,143,36],[293,31,143,25,"apiResponse"],[294,0,143,24],[294,17,143,10],[296,0,144,10],[296,20,144,13,"apiResponse"],[296,32,144,24],[296,33,144,25,"routeName"],[296,42,144,13],[296,46,144,38,"undefined"],[296,55,144,10],[296,57,144,49],[297,0,145,12],[297,23,145,17,"setState"],[297,31,145,12],[297,32,145,26],[298,0,145,27,"RouteName"],[298,20,145,27,"RouteName"],[298,29,145,36],[298,31,145,37,"apiResponse"],[298,43,145,48],[298,44,145,49,"routeName"],[299,0,145,26],[299,19,145,12],[300,0,146,12,"console"],[300,18,146,12,"console"],[300,25,146,19],[300,26,146,20,"log"],[300,29,146,12],[300,30,146,24],[300,35,146,29,"state"],[300,40,146,24],[300,41,146,35,"RouteName"],[300,50,146,12],[301,0,147,12],[301,23,147,17,"setState"],[301,31,147,12],[301,32,147,26],[302,0,147,27,"hasRoute"],[302,20,147,27,"hasRoute"],[302,28,147,35],[302,30,147,36],[303,0,147,26],[303,19,147,12],[304,0,148,12,"console"],[304,18,148,12,"console"],[304,25,148,19],[304,26,148,20,"log"],[304,29,148,12],[304,30,148,24],[304,47,148,41],[304,52,148,46,"state"],[304,57,148,41],[304,58,148,52,"RouteName"],[304,67,148,12],[305,0,149,11],[305,17,144,10],[305,23,149,15],[306,0,150,12],[306,23,150,17,"setState"],[306,31,150,12],[306,32,150,26],[307,0,150,27,"hasRoute"],[307,20,150,27,"hasRoute"],[307,28,150,35],[307,30,150,36],[308,0,150,26],[308,19,150,12],[309,0,152,11],[311,50,153,17,"apiResponse"],[311,62],[316,0,155,10,"console"],[316,16,155,10,"console"],[316,23,155,17],[316,24,155,18,"log"],[316,27,155,10],[327,32,162,24,"inputText"],[327,41],[334,50,163,14],[334,55,163,19,"setState"],[334,63,163,14],[334,64,163,28],[335,0,163,29,"isDialogVisible"],[335,18,163,29,"isDialogVisible"],[335,33,163,44],[335,35,163,45],[336,0,163,28],[336,17,163,14],[336,18],[339,0,165,12,"user"],[339,16,165,12,"user"],[339,20],[339,23,165,19,"Auth"],[339,40,165,24,"user"],[339,44,165,19],[339,45,165,29,"username"],[339,53],[340,0,166,12,"origin"],[340,16,166,12,"origin"],[340,22],[340,25,166,21],[340,30,166,26,"state"],[340,35,166,21],[340,36,166,32,"originText"],[340,46],[341,0,167,12,"destination"],[341,16,167,12,"destination"],[341,27],[341,30,167,26],[341,35,167,31,"state"],[341,40,167,26],[341,41,167,37,"destinationText"],[341,56],[342,0,168,12,"waypoints"],[342,16,168,12,"waypoints"],[342,25],[342,28,168,24],[342,33,168,29,"state"],[342,38,168,24],[342,39,168,35,"waypointsText"],[342,52],[343,0,169,12,"routeName"],[343,16,169,12,"routeName"],[343,25],[343,28,169,24,"inputText"],[343,37],[345,50,171,31],[346,0,172,10,"body"],[346,18,172,10,"body"],[346,22,172,14],[346,24,172,16],[347,0,173,12],[347,33,173,25,"routeName"],[347,42,172,16],[348,0,174,12],[348,28,174,20,"user"],[348,32,172,16],[349,0,175,12],[349,30,175,21,"origin"],[349,36,172,16],[350,0,176,12],[350,35,176,27,"destination"],[350,46,172,16],[351,0,177,12],[351,33,177,24,"waypoints"],[352,0,172,16],[353,0,171,31],[353,17],[356,0,171,13,"objRoutes"],[356,16,171,13,"objRoutes"],[356,25],[358,50,182,14],[358,55,182,19,"saveRoutes"],[358,65,182,14],[358,66,182,30],[358,74,182,14],[358,76,182,39],[358,85,182,14],[358,87,182,49,"objRoutes"],[358,96,182,14],[358,97],[362,50,184,14],[362,55,184,19,"getRoutes"],[362,64,184,14],[362,65,184,29,"user"],[362,69,184,14],[362,70],[366,50,186,33],[367,0,187,10,"body"],[367,18,187,10,"body"],[367,22,187,14],[367,24,187,16],[368,0,188,12],[368,28,188,20,"user"],[368,32,187,16],[369,0,189,12],[369,33,189,25],[369,38,189,30,"state"],[369,43,189,25],[369,44,189,36,"RouteName"],[370,0,187,16],[371,0,186,33],[371,17],[374,0,186,12,"objRoutesAux"],[374,16,186,12,"objRoutesAux"],[374,28],[376,50,193,18],[376,55,193,23,"state"],[376,60,193,18],[376,61,193,29,"hasRoute"],[376,69],[381,38,193,41],[381,42],[386,0,194,10,"objRoutesAux"],[386,16,194,10,"objRoutesAux"],[386,28,194,22],[386,29,194,23,"body"],[386,33,194,10],[386,34,194,28,"routeName"],[386,43,194,10],[386,44,194,38,"push"],[386,48,194,10],[386,49,194,43,"routeName"],[386,58,194,10],[391,0,196,10,"objRoutesAux"],[391,16,196,10,"objRoutesAux"],[391,28,196,22],[391,29,196,23,"body"],[391,33,196,10],[391,34,196,28,"routeName"],[391,43,196,10],[391,46,196,40],[391,47,196,41,"routeName"],[391,56,196,40],[391,57,196,10],[395,50,200,14],[395,55,200,19,"saveRoutes"],[395,65,200,14],[395,66,200,30],[395,76,200,14],[395,78,200,41],[395,89,200,14],[395,91,200,53,"objRoutesAux"],[395,103,200,14],[395,104],[398,0,201,8,"alert"],[398,16,201,8,"alert"],[398,21,201,13],[398,22,201,14],[398,48,201,13],[398,49,201,8],[409,31,257,13],[410,0,257,13],[412,0,258,8],[412,15,260,12],[412,44,260,13],[412,77,260,12],[413,0,260,34],[413,10,260,34],[413,15,260,39],[413,17,260,41,"styles"],[413,23,260,47],[413,24,260,48,"container"],[413,33,260,12],[414,0,260,59],[414,10,260,59],[414,18,260,67],[414,20,260,68],[414,29,260,12],[415,0,260,78],[415,10,260,78],[415,17,260,85],[415,23,260,12],[416,0,260,12],[417,0,260,12],[418,0,260,12],[419,0,260,12],[420,0,260,12],[420,11,262,12],[420,40,262,13],[420,64,262,12],[421,0,264,14],[421,10,264,14],[421,13,264,17],[421,15,264,19],[421,28,264,19,"map"],[421,31,264,22],[422,0,264,22],[422,19,264,26],[422,25,264,30],[422,26,264,31,"mapView"],[422,33,264,26],[422,36,264,41,"map"],[422,39,264,22],[423,0,264,22],[423,11,262,12],[424,0,265,14],[424,10,265,14],[424,15,265,19],[424,17,265,21,"styles"],[424,23,265,27],[424,24,265,28,"map"],[424,27,262,12],[425,0,267,14],[425,10,267,14],[425,16,267,20],[425,18,267,22],[426,0,268,16,"latitude"],[426,12,268,16,"latitude"],[426,20,268,24],[426,22,268,26],[426,23,268,27],[426,28,268,32,"state"],[426,33,268,27],[426,34,268,38,"origin"],[426,40,268,27],[426,41,268,45,"latitude"],[426,49,268,27],[426,52,268,56],[426,57,268,61,"state"],[426,62,268,56],[426,63,268,67,"destination"],[426,74,268,56],[426,75,268,79,"latitude"],[426,83,268,26],[426,87,268,91],[426,88,267,22],[427,0,269,16,"longitude"],[427,12,269,16,"longitude"],[427,21,269,25],[427,23,269,27],[427,24,269,28],[427,29,269,33,"state"],[427,34,269,28],[427,35,269,39,"origin"],[427,41,269,28],[427,42,269,46,"longitude"],[427,51,269,28],[427,54,269,58],[427,59,269,63,"state"],[427,64,269,58],[427,65,269,69,"destination"],[427,76,269,58],[427,77,269,81,"longitude"],[427,86,269,27],[427,90,269,94],[427,91,267,22],[428,0,270,16,"latitudeDelta"],[428,12,270,16,"latitudeDelta"],[428,25,270,29],[428,27,270,31,"Math"],[428,31,270,35],[428,32,270,36,"abs"],[428,35,270,31],[428,36,270,40],[428,41,270,45,"state"],[428,46,270,40],[428,47,270,51,"origin"],[428,53,270,40],[428,54,270,58,"latitude"],[428,62,270,40],[428,65,270,69],[428,70,270,74,"state"],[428,75,270,69],[428,76,270,80,"destination"],[428,87,270,69],[428,88,270,92,"latitude"],[428,96,270,31],[428,100,270,104,"Math"],[428,104,270,108],[428,105,270,109,"abs"],[428,108,270,104],[428,109,270,113],[428,114,270,118,"state"],[428,119,270,113],[428,120,270,124,"origin"],[428,126,270,113],[428,127,270,131,"latitude"],[428,135,270,113],[428,138,270,142],[428,143,270,147,"state"],[428,148,270,142],[428,149,270,153,"destination"],[428,160,270,142],[428,161,270,165,"latitude"],[428,169,270,104],[428,173,270,177],[428,175,267,22],[429,0,271,16,"longitudeDelta"],[429,12,271,16,"longitudeDelta"],[429,26,271,30],[429,28,271,32,"Math"],[429,32,271,36],[429,33,271,37,"abs"],[429,36,271,32],[429,37,271,41],[429,42,271,46,"state"],[429,47,271,41],[429,48,271,52,"origin"],[429,54,271,41],[429,55,271,59,"longitude"],[429,64,271,41],[429,67,271,71],[429,72,271,76,"state"],[429,77,271,71],[429,78,271,82,"destination"],[429,89,271,71],[429,90,271,94,"longitude"],[429,99,271,32],[429,103,271,107,"Math"],[429,107,271,111],[429,108,271,112,"abs"],[429,111,271,107],[429,112,271,116],[429,117,271,121,"state"],[429,122,271,116],[429,123,271,127,"origin"],[429,129,271,116],[429,130,271,134,"longitude"],[429,139,271,116],[429,142,271,146],[429,147,271,151,"state"],[429,152,271,146],[429,153,271,157,"destination"],[429,164,271,146],[429,165,271,169,"longitude"],[429,174,271,107],[429,178,271,182],[430,0,267,22],[430,11,262,12],[431,0,274,14],[431,10,274,14],[431,24,274,28],[431,26,274,30],[431,30,262,12],[432,0,275,14],[432,10,275,14],[432,24,275,28],[432,26,275,30],[432,30,262,12],[433,0,276,14],[433,10,276,14],[433,28,276,32],[433,30,276,34],[433,34,262,12],[434,0,262,12],[435,0,262,12],[436,0,262,12],[437,0,262,12],[438,0,262,12],[438,11,280,12],[438,40,280,13],[438,64,280,12],[438,65,280,21],[438,71,280,12],[439,0,281,14],[439,10,281,14],[439,20,281,24],[439,22,281,26],[439,27,281,31,"state"],[439,32,281,26],[439,33,281,37,"destination"],[439,44,280,12],[440,0,280,12],[441,0,280,12],[442,0,280,12],[443,0,280,12],[444,0,280,12],[444,11,283,14],[444,40,283,15],[444,64,283,14],[444,65,283,23],[444,72,283,14],[445,0,283,31],[445,10,283,31],[445,17,283,38],[445,19,283,40],[445,24,283,45,"handleGetGoogleMapDirections"],[445,52,283,14],[446,0,283,14],[447,0,283,14],[448,0,283,14],[449,0,283,14],[450,0,283,14],[450,11,284,16],[450,40,284,17],[450,57,284,16],[451,0,284,16],[452,0,284,16],[453,0,284,16],[454,0,284,16],[455,0,284,16],[455,36,283,14],[455,37,280,12],[455,38,262,12],[455,40,288,12],[455,69,288,13],[455,93,288,12],[455,94,288,21],[455,100,288,12],[456,0,289,14],[456,10,289,14],[456,20,289,24],[456,22,289,26],[456,27,289,31,"state"],[456,32,289,26],[456,33,289,37,"waypoints"],[456,42,288,12],[457,0,288,12],[458,0,288,12],[459,0,288,12],[460,0,288,12],[461,0,288,12],[461,10,262,12],[461,12,293,12],[461,41,293,13],[461,65,293,12],[461,66,293,21],[461,72,293,12],[462,0,294,14],[462,10,294,14],[462,20,294,24],[462,22,294,26],[462,27,294,31,"state"],[462,32,294,26],[462,33,294,37,"origin"],[462,39,293,12],[463,0,293,12],[464,0,293,12],[465,0,293,12],[466,0,293,12],[467,0,293,12],[467,11,296,12],[467,40,296,13],[467,64,296,12],[467,65,296,21],[467,72,296,12],[468,0,296,12],[469,0,296,12],[470,0,296,12],[471,0,296,12],[472,0,296,12],[472,11,297,16],[472,40,297,17],[472,57,297,16],[473,0,297,16],[474,0,297,16],[475,0,297,16],[476,0,297,16],[477,0,297,16],[477,35,296,12],[477,36,293,12],[477,37,262,12],[477,39,301,12],[477,68,301,13],[477,102,301,12],[478,0,302,14],[478,10,302,14],[478,16,302,20],[478,18,302,22],[478,23,302,27,"state"],[478,28,302,22],[478,29,302,33,"origin"],[478,35,301,12],[479,0,303,14],[479,10,303,14],[479,19,303,23],[479,21,303,25],[479,26,303,30,"state"],[479,31,303,25],[479,32,303,36,"arrWaypoints"],[479,44,301,12],[480,0,304,14],[480,10,304,14],[480,21,304,25],[480,23,304,27],[480,28,304,32,"state"],[480,33,304,27],[480,34,304,38,"destination"],[480,45,301,12],[481,0,305,14],[481,10,305,14],[481,16,305,20],[481,18,305,22,"GOOGLE_MAPS_APIKEY"],[481,36,301,12],[482,0,301,12],[483,0,301,12],[484,0,301,12],[485,0,301,12],[486,0,301,12],[486,10,262,12],[486,11,260,12],[486,13,310,12],[486,42,310,13],[486,73,310,12],[487,0,310,25],[487,10,310,25],[487,25,310,40],[487,27,310,42],[487,32,310,47,"state"],[487,37,310,42],[487,38,310,53,"isDialogVisible"],[487,53,310,12],[488,0,311,12],[488,10,311,12],[488,15,311,17],[488,17,311,19],[488,29,310,12],[489,0,312,12],[489,10,312,12],[489,17,312,19],[489,19,312,21],[489,42,310,12],[490,0,313,12],[490,10,313,12],[490,19,313,21],[490,21,313,24],[490,44,310,12],[491,0,314,12],[491,10,314,12],[491,21,314,23],[491,23,314,26],[491,44,314,27,"inputText"],[491,53,314,26],[491,55,314,41],[492,0,314,42],[492,12,314,42],[492,18,314,46],[492,19,314,47,"sendInput"],[492,28,314,42],[492,29,314,57,"inputText"],[492,38,314,42],[493,0,314,68],[493,11,310,12],[494,0,315,12],[494,10,315,12],[494,21,315,23],[494,23,315,26],[494,46,315,32],[495,0,315,34],[495,12,315,34],[495,18,315,38],[495,19,315,39,"setState"],[495,27,315,34],[495,28,315,48],[496,0,315,49,"isDialogVisible"],[496,14,315,49,"isDialogVisible"],[496,29,315,64],[496,31,315,65],[497,0,315,48],[497,13,315,34],[498,0,315,73],[498,11,310,12],[499,0,310,12],[500,0,310,12],[501,0,310,12],[502,0,310,12],[503,0,310,12],[503,10,260,12],[503,12,318,16],[503,41,318,17],[503,63,318,16],[504,0,319,20],[504,10,319,20],[504,15,319,25],[504,17,319,27,"styles"],[504,23,319,33],[504,24,319,34,"input"],[504,29,318,16],[505,0,320,20],[505,10,320,20],[505,22,320,32],[505,24,320,34],[505,46,320,35,"text"],[505,50,320,34],[506,0,320,34],[506,19,320,44],[506,25,320,48],[506,26,320,49,"setState"],[506,34,320,44],[506,35,320,58],[507,0,320,60,"originText"],[507,14,320,60,"originText"],[507,24,320,70],[507,26,320,72,"text"],[508,0,320,58],[508,13,320,44],[508,14,320,34],[509,0,320,34],[509,11,318,16],[510,0,321,20],[510,10,321,20],[510,21,321,31],[510,23,321,32],[510,31,318,16],[511,0,322,20],[511,10,322,20],[511,15,322,25],[511,17,322,27],[511,22,322,32,"state"],[511,27,322,27],[511,28,322,38,"originText"],[511,38,318,16],[512,0,318,16],[513,0,318,16],[514,0,318,16],[515,0,318,16],[516,0,318,16],[516,10,260,12],[516,12,331,17],[516,41,331,18],[516,63,331,17],[517,0,332,20],[517,10,332,20],[517,15,332,25],[517,17,332,27,"styles"],[517,23,332,33],[517,24,332,34,"input"],[517,29,331,17],[518,0,333,20],[518,10,333,20],[518,22,333,32],[518,24,333,34],[518,46,333,35,"text"],[518,50,333,34],[519,0,333,34],[519,19,333,44],[519,25,333,48],[519,26,333,49,"setState"],[519,34,333,44],[519,35,333,58],[520,0,333,60,"destinationText"],[520,14,333,60,"destinationText"],[520,29,333,75],[520,31,333,77,"text"],[521,0,333,58],[521,13,333,44],[521,14,333,34],[522,0,333,34],[522,11,331,17],[523,0,334,20],[523,10,334,20],[523,21,334,31],[523,23,334,32],[523,36,331,17],[524,0,335,20],[524,10,335,20],[524,15,335,25],[524,17,335,27],[524,22,335,32,"state"],[524,27,335,27],[524,28,335,38,"destinationText"],[524,43,331,17],[525,0,331,17],[526,0,331,17],[527,0,331,17],[528,0,331,17],[529,0,331,17],[529,10,260,12],[529,12,338,16],[529,41,338,17],[529,70,338,16],[530,0,338,34],[530,10,338,34],[530,15,338,39],[530,17,338,41,"styles"],[530,23,338,47],[530,24,338,48,"button"],[530,30,338,16],[531,0,338,56],[531,10,338,56],[531,17,338,63],[531,19,338,65],[531,24,338,70,"handleButton"],[531,36,338,16],[532,0,338,16],[533,0,338,16],[534,0,338,16],[535,0,338,16],[536,0,338,16],[536,11,340,20],[536,40,340,21],[536,57,340,20],[537,0,340,26],[537,10,340,26],[537,15,340,31],[537,17,340,33,"styles"],[537,23,340,39],[537,24,340,40,"buttonText"],[537,34,340,20],[538,0,340,20],[539,0,340,20],[540,0,340,20],[541,0,340,20],[542,0,340,20],[542,26,338,16],[542,27,260,12],[542,29,344,16],[542,58,344,17],[542,87,344,16],[543,0,344,34],[543,10,344,34],[543,15,344,39],[543,17,344,41,"styles"],[543,23,344,47],[543,24,344,48,"button"],[543,30,344,16],[544,0,344,56],[544,10,344,56],[544,17,344,63],[544,19,344,65],[544,24,344,70,"saveButton"],[544,34,344,16],[545,0,344,16],[546,0,344,16],[547,0,344,16],[548,0,344,16],[549,0,344,16],[549,11,346,20],[549,40,346,21],[549,57,346,20],[550,0,346,26],[550,10,346,26],[550,15,346,31],[550,17,346,33,"styles"],[550,23,346,39],[550,24,346,40,"buttonText"],[550,34,346,20],[551,0,346,20],[552,0,346,20],[553,0,346,20],[554,0,346,20],[555,0,346,20],[555,24,344,16],[555,25,260,12],[555,26,258,8],[556,0,354,5],[559,4,31,39,"Component"],[559,20],[564,0,358,0],[564,6,358,6,"styles"],[564,12,358,12],[564,15,358,15,"StyleSheet"],[564,39,358,26,"create"],[564,45,358,15],[564,46,358,33],[565,0,360,4,"container"],[565,4,360,4,"container"],[565,13,360,13],[565,15,360,15],[566,0,362,8,"flex"],[566,6,362,8,"flex"],[566,10,362,12],[566,12,362,14],[566,13,360,15],[567,0,363,8,"justifyContent"],[567,6,363,8,"justifyContent"],[567,20,363,22],[567,22,363,24],[567,32,360,15],[568,0,364,8,"alignItems"],[568,6,364,8,"alignItems"],[568,16,364,18],[568,18,364,20],[569,0,360,15],[569,5,358,33],[570,0,368,6,"map"],[570,4,368,6,"map"],[570,7,368,9],[570,9,368,11],[571,0,370,8,"position"],[571,6,370,8,"position"],[571,14,370,16],[571,16,370,18],[571,26,368,11],[572,0,371,8,"top"],[572,6,371,8,"top"],[572,9,371,11],[572,11,371,13],[572,12,368,11],[573,0,372,8,"left"],[573,6,372,8,"left"],[573,10,372,12],[573,12,372,14],[573,13,368,11],[574,0,373,8,"right"],[574,6,373,8,"right"],[574,11,373,13],[574,13,373,15],[574,14,368,11],[575,0,374,8,"bottom"],[575,6,374,8,"bottom"],[575,12,374,14],[575,14,374,16],[576,0,368,11],[576,5,358,33],[577,0,378,6,"button"],[577,4,378,6,"button"],[577,10,378,12],[577,12,378,14],[578,0,380,8,"width"],[578,6,380,8,"width"],[578,11,380,13],[578,13,380,15,"width"],[578,18,380,20],[578,21,380,23],[578,24,378,14],[579,0,381,8,"height"],[579,6,381,8,"height"],[579,12,381,14],[579,14,381,16],[579,16,378,14],[580,0,382,8,"backgroundColor"],[580,6,382,8,"backgroundColor"],[580,21,382,23],[580,23,382,25],[580,29,378,14],[581,0,383,8,"alignItems"],[581,6,383,8,"alignItems"],[581,16,383,18],[581,18,383,20],[581,26,378,14],[582,0,384,8,"justifyContent"],[582,6,384,8,"justifyContent"],[582,20,384,22],[582,22,384,24],[582,30,378,14],[583,0,385,8,"borderWidth"],[583,6,385,8,"borderWidth"],[583,17,385,19],[583,19,385,21],[583,20,378,14],[584,0,386,8,"borderColor"],[584,6,386,8,"borderColor"],[584,17,386,19],[584,19,386,21],[584,25,378,14],[585,0,387,8,"borderRadius"],[585,6,387,8,"borderRadius"],[585,18,387,20],[585,20,387,22],[585,21,378,14],[586,0,388,8,"marginBottom"],[586,6,388,8,"marginBottom"],[586,18,388,20],[586,20,388,22],[586,22,378,14],[587,0,389,8,"marginHorizontal"],[587,6,389,8,"marginHorizontal"],[587,22,389,24],[587,24,389,26],[588,0,378,14],[588,5,358,33],[589,0,393,6,"buttonText"],[589,4,393,6,"buttonText"],[589,14,393,16],[589,16,393,18],[590,0,395,8,"color"],[590,6,395,8,"color"],[590,11,395,13],[590,13,395,15],[590,19,393,18],[591,0,396,8,"fontWeight"],[591,6,396,8,"fontWeight"],[591,16,396,18],[591,18,396,20],[592,0,393,18],[592,5,358,33],[593,0,400,6,"inputContainer"],[593,4,400,6,"inputContainer"],[593,18,400,20],[593,20,400,22],[594,0,402,8,"width"],[594,6,402,8,"width"],[594,11,402,13],[594,13,402,15],[594,19,400,22],[595,0,403,8,"maxHeight"],[595,6,403,8,"maxHeight"],[595,15,403,17],[595,17,403,19],[596,0,400,22],[596,5,358,33],[597,0,407,6,"input"],[597,4,407,6,"input"],[597,9,407,11],[597,11,407,13],[598,0,409,8,"width"],[598,6,409,8,"width"],[598,11,409,13],[598,13,409,15,"width"],[598,18,409,20],[598,21,409,23],[598,23,407,13],[599,0,410,8,"maxHeight"],[599,6,410,8,"maxHeight"],[599,15,410,17],[599,17,410,19],[599,20,407,13],[600,0,411,8,"backgroundColor"],[600,6,411,8,"backgroundColor"],[600,21,411,23],[600,23,411,25],[600,29,407,13],[601,0,412,8,"marginBottom"],[601,6,412,8,"marginBottom"],[601,18,412,20],[601,20,412,22],[601,22,407,13],[602,0,413,8,"marginHorizontal"],[602,6,413,8,"marginHorizontal"],[602,22,413,24],[602,24,413,26],[603,0,407,13],[604,0,358,33],[604,3,358,15],[604,4,358,0]]},"type":"js/module"}]}