{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false}},{"name":"@babel/runtime/regenerator","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"./../../node_modules/react-transform-hmr/lib/index.js","data":{"isAsync":false}},{"name":"../../aws-exports","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"react-native-dialog-input","data":{"isAsync":false}},{"name":"react-native-maps","data":{"isAsync":false}},{"name":"react-native-maps-directions","data":{"isAsync":false}},{"name":"react-native-google-maps-directions","data":{"isAsync":false}},{"name":"aws-amplify","data":{"isAsync":false}},{"name":"react-native-geocoding","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/regenerator\"));\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/createClass\"));\n\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n\n  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/getPrototypeOf\"));\n\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"@babel/runtime/helpers/inherits\"));\n\n  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8], \"react\"));\n\n  var _index = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9], \"./../../node_modules/react-transform-hmr/lib/index.js\"));\n\n  var _awsExports = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10], \"../../aws-exports\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[11], \"react-native\");\n\n  var _reactNativeDialogInput = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12], \"react-native-dialog-input\"));\n\n  var _reactNativeMaps = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13], \"react-native-maps\"));\n\n  var _reactNativeMapsDirections = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14], \"react-native-maps-directions\"));\n\n  var _reactNativeGoogleMapsDirections = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15], \"react-native-google-maps-directions\"));\n\n  var _awsAmplify = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[16], \"aws-amplify\"));\n\n  var _reactNativeGeocoding = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17], \"react-native-geocoding\"));\n\n  var _temp,\n      _jsxFileName = \"/home/carlsen/Desktop/TCC/Modules/RoutesModules/Routes.js\";\n\n  var _components = {\n    MapScreen: {\n      displayName: \"MapScreen\"\n    }\n  };\n\n  var _node_modulesReactTransformHmrLibIndexJs2 = (0, _index.default)({\n    filename: \"/home/carlsen/Desktop/TCC/Modules/RoutesModules/Routes.js\",\n    components: _components,\n    locals: [module],\n    imports: [_react.default]\n  });\n\n  function _wrapComponent(id) {\n    return function (Component) {\n      return _node_modulesReactTransformHmrLibIndexJs2(Component, id);\n    };\n  }\n\n  var GOOGLE_MAPS_APIKEY = _awsExports.default.GOOGLEAPI;\n  var routeAPI = 'http://vrp-dev.us-east-1.elasticbeanstalk.com/api/v1/vrp/route=';\n  var arr = [];\n  var backgroundColor = '#007256';\n\n  var _Dimensions$get = _reactNative.Dimensions.get('window'),\n      height = _Dimensions$get.height,\n      width = _Dimensions$get.width;\n\n  var MapScreen = _wrapComponent(\"MapScreen\")((_temp = function (_Component) {\n    (0, _inherits2.default)(MapScreen, _Component);\n\n    function MapScreen() {\n      var _getPrototypeOf2;\n\n      var _this;\n\n      (0, _classCallCheck2.default)(this, MapScreen);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(MapScreen)).call.apply(_getPrototypeOf2, [this].concat(args)));\n      _this.state = {\n        isDialogVisible: false,\n        origin: {\n          latitude: 42.3616132,\n          longitude: -71.0672576\n        },\n        destination: {\n          latitude: 42.3730591,\n          longitude: -71.033754\n        },\n        waypoints: {\n          latitude: 0,\n          longitude: 0\n        },\n        originText: '',\n        destinationText: '',\n        waypointsText: '',\n        RouteName: '',\n        hasRoute: false,\n        arrWaypoints: []\n      };\n\n      _this.getLocation = function () {\n        navigator.geolocation.getCurrentPosition(function (position) {\n          var newOrigin = {\n            latitude: position.coords.latitude,\n            longitude: position.coords.longitude\n          };\n          console.log('new origin');\n          console.log(newOrigin);\n\n          _this.setState({\n            origin: newOrigin\n          });\n        }, function (err) {\n          console.log('error');\n          console.log(err);\n        }, {\n          enableHighAccuracy: true,\n          timeout: 2000,\n          maximumAge: 1000\n        });\n      };\n\n      _this.saveButton = function () {\n        _this.setState({\n          isDialogVisible: true\n        });\n      };\n\n      _this.handleButton = function () {\n        var auxArray = [];\n        var str = \"\";\n        var fullAPI = routeAPI + \"Campinas|Rio+Janeiro|Sao+Paulo\" + '/' + 1;\n        fetch(fullAPI).then(function (response) {\n          return response.json();\n        }).then(function (data) {\n          data.Route[0].forEach(function (item, indice, array) {\n            str = item.replace(\"+\", \" \");\n            console.log(str);\n            auxArray.push(str);\n          });\n        });\n\n        if (_this.state.originText != '') {\n          _reactNativeGeocoding.default.init(GOOGLE_MAPS_APIKEY);\n\n          _reactNativeGeocoding.default.from(_this.state.originText).then(function (json) {\n            var location = json.results[0].geometry.location;\n            console.log(location);\n\n            _this.setState({\n              origin: {\n                latitude: location.lat,\n                longitude: location.lng\n              }\n            });\n          }).catch(function (error) {\n            return console.warn(error);\n          });\n\n          console.log(auxArray);\n          auxArray.forEach(function (item, indice, array) {\n            var _this2 = this;\n\n            console.log(\"Array \" + item);\n\n            _reactNativeGeocoding.default.init(GOOGLE_MAPS_APIKEY);\n\n            _reactNativeGeocoding.default.from(item).then(function (json) {\n              var location = json.results[0].geometry.location;\n              console.log(location);\n\n              _this2.setState({\n                waypoints: {\n                  latitude: location.lat,\n                  longitude: location.lng\n                }\n              });\n\n              arr.push(_this2.state.waypoints);\n\n              _this2.setState({\n                arrWaypoints: arr\n              });\n            }).catch(function (error) {\n              return console.warn(error);\n            });\n          });\n        } else {\n          alert(\"Digite a origem ! \");\n        }\n\n        if (_this.state.destinationText != '') {\n          _reactNativeGeocoding.default.init(GOOGLE_MAPS_APIKEY);\n\n          _reactNativeGeocoding.default.from(_this.state.destinationText).then(function (json) {\n            var location = json.results[0].geometry.location;\n            console.log(location);\n\n            _this.setState({\n              destination: {\n                latitude: location.lat,\n                longitude: location.lng\n              }\n            });\n          }).catch(function (error) {\n            return console.warn(error);\n          });\n        } else {\n          alert(\"Digite o destino ! \");\n        }\n      };\n\n      _this.handleGetGoogleMapDirections = function () {\n        var data = {\n          source: _this.state.origin,\n          destination: _this.state.destination,\n          waypoints: _this.state.arrWaypoints,\n          params: [{\n            key: \"travelmode\",\n            value: \"driving\"\n          }]\n        };\n        (0, _reactNativeGoogleMapsDirections.default)(data);\n      };\n\n      return _this;\n    }\n\n    (0, _createClass2.default)(MapScreen, [{\n      key: \"requestLocationPermission\",\n      value: function requestLocationPermission() {\n        var granted;\n        return _regenerator.default.async(function requestLocationPermission$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return _regenerator.default.awrap(_reactNative.PermissionsAndroid.request(_reactNative.PermissionsAndroid.PERMISSIONS.ACCESS_FINE_LOCATION, {\n                  'title': 'App Location Permission',\n                  'message': 'Maps App needs access to your map ' + 'so you can be navigated.'\n                }));\n\n              case 3:\n                granted = _context.sent;\n\n                if (!(granted === _reactNative.PermissionsAndroid.RESULTS.GRANTED)) {\n                  _context.next = 9;\n                  break;\n                }\n\n                console.log(\"You can use the location\");\n                return _context.abrupt(\"return\", true);\n\n              case 9:\n                console.log(\"location permission denied\");\n                return _context.abrupt(\"return\", false);\n\n              case 11:\n                _context.next = 16;\n                break;\n\n              case 13:\n                _context.prev = 13;\n                _context.t0 = _context[\"catch\"](0);\n                console.warn(_context.t0);\n\n              case 16:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, null, [[0, 13]]);\n      }\n    }, {\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        var isGranted;\n        return _regenerator.default.async(function componentDidMount$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return _regenerator.default.awrap(this.requestLocationPermission());\n\n              case 2:\n                isGranted = _context2.sent;\n\n                if (isGranted) {\n                  this.getLocation();\n                }\n\n                this.getLocation();\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, null, this);\n      }\n    }, {\n      key: \"saveRoutes\",\n      value: function saveRoutes(api, path, objRoutes) {\n        var apiResponse;\n        return _regenerator.default.async(function saveRoutes$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                _context3.next = 3;\n                return _regenerator.default.awrap(_awsAmplify.API.put(api, path, objRoutes));\n\n              case 3:\n                apiResponse = _context3.sent;\n                console.log(\"response from saving routes: \" + apiResponse);\n                this.setState({\n                  apiResponse: apiResponse\n                });\n                return _context3.abrupt(\"return\", apiResponse);\n\n              case 9:\n                _context3.prev = 9;\n                _context3.t0 = _context3[\"catch\"](0);\n                console.log(_context3.t0);\n\n              case 12:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, null, this, [[0, 9]]);\n      }\n    }, {\n      key: \"getRoutes\",\n      value: function getRoutes(user) {\n        var path, _apiResponse;\n\n        return _regenerator.default.async(function getRoutes$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                path = \"/getRoute/object/\" + user;\n                _context4.prev = 1;\n                _context4.next = 4;\n                return _regenerator.default.awrap(_awsAmplify.API.get(\"getRoute\", path));\n\n              case 4:\n                _apiResponse = _context4.sent;\n                console.log(\"response from get routes: \" + _apiResponse.routeName);\n                this.setState({\n                  apiResponse: _apiResponse\n                });\n\n                if (_apiResponse.routeName != undefined) {\n                  this.setState({\n                    RouteName: _apiResponse.routeName\n                  });\n                  console.log(this.state.RouteName);\n                  this.setState({\n                    hasRoute: true\n                  });\n                  console.log(\"List Route: \" + this.state.RouteName);\n                } else {\n                  this.setState({\n                    hasRoute: false\n                  });\n                }\n\n                return _context4.abrupt(\"return\", _apiResponse);\n\n              case 11:\n                _context4.prev = 11;\n                _context4.t0 = _context4[\"catch\"](1);\n                console.log(_context4.t0);\n\n              case 14:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, null, this, [[1, 11]]);\n      }\n    }, {\n      key: \"sendInput\",\n      value: function sendInput(inputText) {\n        var user, origin, destination, waypoints, routeName, objRoutes, objRoutesAux;\n        return _regenerator.default.async(function sendInput$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return _regenerator.default.awrap(this.setState({\n                  isDialogVisible: false\n                }));\n\n              case 2:\n                user = _awsAmplify.Auth.user.username;\n                origin = this.state.originText;\n                destination = this.state.destinationText;\n                waypoints = this.state.waypointsText;\n                routeName = inputText;\n                _context5.next = 9;\n                return _regenerator.default.awrap({\n                  body: {\n                    \"routeName\": routeName,\n                    \"user\": user,\n                    \"origin\": origin,\n                    \"destination\": destination,\n                    \"waypoints\": waypoints\n                  }\n                });\n\n              case 9:\n                objRoutes = _context5.sent;\n                _context5.next = 12;\n                return _regenerator.default.awrap(this.saveRoutes(\"Routes\", \"/routes\", objRoutes));\n\n              case 12:\n                _context5.next = 14;\n                return _regenerator.default.awrap(this.getRoutes(user));\n\n              case 14:\n                _context5.next = 16;\n                return _regenerator.default.awrap({\n                  body: {\n                    \"user\": user,\n                    \"routeName\": this.state.RouteName\n                  }\n                });\n\n              case 16:\n                objRoutesAux = _context5.sent;\n                _context5.next = 19;\n                return _regenerator.default.awrap(this.state.hasRoute);\n\n              case 19:\n                _context5.t0 = _context5.sent;\n\n                if (!(_context5.t0 == true)) {\n                  _context5.next = 24;\n                  break;\n                }\n\n                objRoutesAux.body.routeName.push(routeName);\n                _context5.next = 25;\n                break;\n\n              case 24:\n                objRoutesAux.body.routeName = [routeName];\n\n              case 25:\n                _context5.next = 27;\n                return _regenerator.default.awrap(this.saveRoutes(\"getRoute\", \"/getRoute\", objRoutesAux));\n\n              case 27:\n                alert('Route saved successfully');\n\n              case 28:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, null, this);\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var _this3 = this;\n\n        return _react.default.createElement(_reactNative.KeyboardAvoidingView, {\n          style: styles.container,\n          behavior: \"padding\",\n          enabled: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 305\n          }\n        }, _react.default.createElement(_reactNativeMaps.default, {\n          ref: function ref(map) {\n            return _this3.mapView = map;\n          },\n          style: styles.map,\n          region: {\n            latitude: (this.state.origin.latitude + this.state.destination.latitude) / 2,\n            longitude: (this.state.origin.longitude + this.state.destination.longitude) / 2,\n            latitudeDelta: Math.abs(this.state.origin.latitude - this.state.destination.latitude) + Math.abs(this.state.origin.latitude - this.state.destination.latitude) * .1,\n            longitudeDelta: Math.abs(this.state.origin.longitude - this.state.destination.longitude) + Math.abs(this.state.origin.longitude - this.state.destination.longitude) * .1\n          },\n          loadingEnabled: true,\n          toolbarEnabled: true,\n          zoomControlEnabled: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 307\n          }\n        }, _react.default.createElement(_reactNativeMaps.default.Marker, {\n          coordinate: this.state.destination,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 325\n          }\n        }, _react.default.createElement(_reactNativeMaps.default.Callout, {\n          onPress: this.handleGetGoogleMapDirections,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 328\n          }\n        }, _react.default.createElement(_reactNative.Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 329\n          }\n        }, \"Press to Get Direction\"))), _react.default.createElement(_reactNativeMaps.default.Marker, {\n          coordinate: this.state.waypoints,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 333\n          }\n        }), _react.default.createElement(_reactNativeMaps.default.Marker, {\n          coordinate: this.state.origin,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 338\n          }\n        }, _react.default.createElement(_reactNativeMaps.default.Callout, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 341\n          }\n        }, _react.default.createElement(_reactNative.Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 342\n          }\n        }, \"This is where you are\"))), _react.default.createElement(_reactNativeMapsDirections.default, {\n          origin: this.state.origin,\n          waypoints: this.state.arrWaypoints,\n          destination: this.state.destination,\n          apikey: GOOGLE_MAPS_APIKEY,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 346\n          }\n        })), _react.default.createElement(_reactNativeDialogInput.default, {\n          isDialogVisible: this.state.isDialogVisible,\n          title: \"Route Name\",\n          message: \"Enter your route name\",\n          hintInput: \"Enter your route name\",\n          submitInput: function submitInput(inputText) {\n            _this3.sendInput(inputText);\n          },\n          closeDialog: function closeDialog() {\n            _this3.setState({\n              isDialogVisible: false\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 355\n          }\n        }), _react.default.createElement(_reactNative.TextInput, {\n          style: styles.input,\n          onChangeText: function onChangeText(text) {\n            return _this3.setState({\n              originText: text\n            });\n          },\n          placeholder: \"Origin\",\n          value: this.state.originText,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 363\n          }\n        }), _react.default.createElement(_reactNative.TextInput, {\n          style: styles.input,\n          onChangeText: function onChangeText(text) {\n            return _this3.setState({\n              destinationText: text\n            });\n          },\n          placeholder: \"Destination\",\n          value: this.state.destinationText,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 376\n          }\n        }), _react.default.createElement(_reactNative.TouchableOpacity, {\n          style: styles.button,\n          onPress: this.handleButton,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 383\n          }\n        }, _react.default.createElement(_reactNative.Text, {\n          style: styles.buttonText,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 385\n          }\n        }, \"Search Route\")), _react.default.createElement(_reactNative.TouchableOpacity, {\n          style: styles.button,\n          onPress: this.saveButton,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 389\n          }\n        }, _react.default.createElement(_reactNative.Text, {\n          style: styles.buttonText,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 391\n          }\n        }, \"Save Route\")));\n      }\n    }]);\n    return MapScreen;\n  }(_react.Component), _temp));\n\n  var _default2 = MapScreen;\n  exports.default = _default2;\n\n  var styles = _reactNative.StyleSheet.create({\n    container: {\n      flex: 1,\n      justifyContent: 'flex-end',\n      alignItems: 'flex-end'\n    },\n    map: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0\n    },\n    button: {\n      width: width - 100,\n      height: 40,\n      backgroundColor: '#FFF',\n      alignItems: 'center',\n      justifyContent: 'center',\n      borderWidth: 1,\n      borderColor: '#000',\n      borderRadius: 7,\n      marginBottom: 15,\n      marginHorizontal: 20\n    },\n    buttonText: {\n      color: '#000',\n      fontWeight: 'bold'\n    },\n    inputContainer: {\n      width: '100%',\n      maxHeight: 200\n    },\n    input: {\n      width: width - 40,\n      maxHeight: 200,\n      backgroundColor: '#FFF',\n      marginBottom: 15,\n      marginHorizontal: 20\n    }\n  });\n});","map":[[23,0,2,0],[27,0,3,0],[29,0,4,0],[31,0,15,0],[33,0,16,0],[35,0,17,0],[37,0,18,0],[39,0,20,0],[41,0,21,0],[65,0,23,0],[65,6,23,6,"GOOGLE_MAPS_APIKEY"],[65,24,23,24],[65,27,23,27,"AWSConfig"],[65,47,23,37,"GOOGLEAPI"],[65,56,23,0],[66,0,24,0],[66,6,24,6,"routeAPI"],[66,14,24,14],[66,17,24,17],[66,82,24,0],[67,0,25,0],[67,6,25,6,"arr"],[67,9,25,9],[67,12,25,12],[67,14,25,0],[68,0,27,0],[68,6,27,6,"backgroundColor"],[68,21,27,21],[68,24,27,24],[68,33,27,0],[70,24,29,26,"Dimensions"],[70,48,29,37,"get"],[70,51,29,26],[70,52,29,41],[70,60,29,26],[70,61],[71,6,29,8,"height"],[71,12],[71,31,29,8,"height"],[71,37],[72,6,29,16,"width"],[72,11],[72,30,29,16,"width"],[72,35],[89,12,33,4,"state"],[89,17],[89,20,33,12],[90,0,34,8,"isDialogVisible"],[90,8,34,8,"isDialogVisible"],[90,23,34,23],[90,25,34,24],[90,30,33,12],[91,0,35,8,"origin"],[91,8,35,8,"origin"],[91,14,35,14],[91,16,35,16],[92,0,35,18,"latitude"],[92,10,35,18,"latitude"],[92,18,35,26],[92,20,35,28],[92,30,35,16],[93,0,35,40,"longitude"],[93,10,35,40,"longitude"],[93,19,35,49],[93,21,35,51],[93,22,35,52],[94,0,35,16],[94,9,33,12],[95,0,36,8,"destination"],[95,8,36,8,"destination"],[95,19,36,19],[95,21,36,21],[96,0,36,23,"latitude"],[96,10,36,23,"latitude"],[96,18,36,31],[96,20,36,33],[96,30,36,21],[97,0,36,45,"longitude"],[97,10,36,45,"longitude"],[97,19,36,54],[97,21,36,56],[97,22,36,57],[98,0,36,21],[98,9,33,12],[99,0,37,8,"waypoints"],[99,8,37,8,"waypoints"],[99,17,37,17],[99,19,37,18],[100,0,37,20,"latitude"],[100,10,37,20,"latitude"],[100,18,37,28],[100,20,37,30],[100,21,37,18],[101,0,37,33,"longitude"],[101,10,37,33,"longitude"],[101,19,37,42],[101,21,37,44],[102,0,37,18],[102,9,33,12],[103,0,38,8,"originText"],[103,8,38,8,"originText"],[103,18,38,18],[103,20,38,20],[103,22,33,12],[104,0,39,8,"destinationText"],[104,8,39,8,"destinationText"],[104,23,39,23],[104,25,39,25],[104,27,33,12],[105,0,40,8,"waypointsText"],[105,8,40,8,"waypointsText"],[105,21,40,21],[105,23,40,22],[105,25,33,12],[106,0,41,8,"RouteName"],[106,8,41,8,"RouteName"],[106,17,41,17],[106,19,41,18],[106,21,33,12],[107,0,42,8,"hasRoute"],[107,8,42,8,"hasRoute"],[107,16,42,16],[107,18,42,18],[107,23,33,12],[108,0,43,8,"arrWaypoints"],[108,8,43,8,"arrWaypoints"],[108,20,43,20],[108,22,43,21],[109,0,33,12],[109,7],[111,12,84,6,"getLocation"],[111,23],[111,26,84,20],[111,38,84,26],[112,0,85,8,"navigator"],[112,8,85,8,"navigator"],[112,17,85,17],[112,18,85,18,"geolocation"],[112,29,85,8],[112,30,85,30,"getCurrentPosition"],[112,48,85,8],[112,49,85,49],[112,59,85,50,"position"],[112,67,85,49],[112,69,85,63],[113,0,86,12],[113,14,86,16,"newOrigin"],[113,23,86,25],[113,26,86,28],[114,0,87,16,"latitude"],[114,12,87,16,"latitude"],[114,20,87,24],[114,22,87,26,"position"],[114,30,87,34],[114,31,87,35,"coords"],[114,37,87,26],[114,38,87,42,"latitude"],[114,46,86,28],[115,0,88,16,"longitude"],[115,12,88,16,"longitude"],[115,21,88,25],[115,23,88,27,"position"],[115,31,88,35],[115,32,88,36,"coords"],[115,38,88,27],[115,39,88,43,"longitude"],[116,0,86,28],[116,11,86,12],[117,0,91,12,"console"],[117,10,91,12,"console"],[117,17,91,19],[117,18,91,20,"log"],[117,21,91,12],[117,22,91,24],[117,34,91,12],[118,0,92,12,"console"],[118,10,92,12,"console"],[118,17,92,19],[118,18,92,20,"log"],[118,21,92,12],[118,22,92,24,"newOrigin"],[118,31,92,12],[120,0,94,12],[120,16,94,17,"setState"],[120,24,94,12],[120,25,94,26],[121,0,95,16,"origin"],[121,12,95,16,"origin"],[121,18,95,22],[121,20,95,24,"newOrigin"],[122,0,94,26],[122,11,94,12],[123,0,98,9],[123,9,85,8],[123,11,98,11],[123,21,98,12,"err"],[123,24,98,11],[123,26,98,20],[124,0,99,12,"console"],[124,10,99,12,"console"],[124,17,99,19],[124,18,99,20,"log"],[124,21,99,12],[124,22,99,24],[124,29,99,12],[125,0,100,12,"console"],[125,10,100,12,"console"],[125,17,100,19],[125,18,100,20,"log"],[125,21,100,12],[125,22,100,24,"err"],[125,25,100,12],[126,0,102,9],[126,9,85,8],[126,11,102,11],[127,0,102,12,"enableHighAccuracy"],[127,10,102,12,"enableHighAccuracy"],[127,28,102,30],[127,30,102,32],[127,34,102,11],[128,0,102,38,"timeout"],[128,10,102,38,"timeout"],[128,17,102,45],[128,19,102,47],[128,23,102,11],[129,0,102,53,"maximumAge"],[129,10,102,53,"maximumAge"],[129,20,102,63],[129,22,102,65],[130,0,102,11],[130,9,85,8],[131,0,104,7],[131,7],[133,12,121,6,"saveButton"],[133,22],[133,25,121,19],[133,37,121,25],[134,0,122,10],[134,14,122,15,"setState"],[134,22,122,10],[134,23,122,24],[135,0,122,25,"isDialogVisible"],[135,10,122,25,"isDialogVisible"],[135,25,122,40],[135,27,122,41],[136,0,122,24],[136,9,122,10],[137,0,123,7],[137,7],[139,12,204,6,"handleButton"],[139,24],[139,27,204,21],[139,39,204,27],[140,0,205,8],[140,12,205,12,"auxArray"],[140,20,205,20],[140,23,205,23],[140,25,205,8],[141,0,206,8],[141,12,206,12,"str"],[141,15,206,15],[141,18,206,18],[141,20,206,8],[142,0,207,8],[142,12,207,14,"fullAPI"],[142,19,207,21],[142,22,207,24,"routeAPI"],[142,30,207,32],[142,33,207,35],[142,65,207,24],[142,68,207,70],[142,71,207,24],[142,74,207,76],[142,75,207,8],[143,0,208,8,"fetch"],[143,8,208,8,"fetch"],[143,13,208,13],[143,14,208,14,"fullAPI"],[143,21,208,13],[143,22,208,8],[143,23,208,23,"then"],[143,27,208,8],[143,28,208,28],[143,38,208,28,"response"],[143,46,208,36],[144,0,208,36],[144,17,208,40,"response"],[144,25,208,48],[144,26,208,49,"json"],[144,30,208,40],[144,32,208,36],[145,0,208,36],[145,9,208,8],[145,11,208,57,"then"],[145,15,208,8],[145,16,208,62],[145,26,208,62,"data"],[145,30,208,66],[145,32,208,70],[146,0,209,8,"data"],[146,10,209,8,"data"],[146,14,209,12],[146,15,209,13,"Route"],[146,20,209,8],[146,21,209,19],[146,22,209,8],[146,24,209,22,"forEach"],[146,31,209,8],[146,32,209,30],[146,42,209,40,"item"],[146,46,209,30],[146,48,209,46,"indice"],[146,54,209,30],[146,56,209,54,"array"],[146,61,209,30],[146,63,209,61],[147,0,210,12,"str"],[147,12,210,12,"str"],[147,15,210,15],[147,18,210,18,"item"],[147,22,210,22],[147,23,210,23,"replace"],[147,30,210,18],[147,31,210,31],[147,34,210,18],[147,36,210,35],[147,39,210,18],[147,40,210,12],[148,0,211,12,"console"],[148,12,211,12,"console"],[148,19,211,19],[148,20,211,20,"log"],[148,23,211,12],[148,24,211,24,"str"],[148,27,211,12],[149,0,212,12,"auxArray"],[149,12,212,12,"auxArray"],[149,20,212,20],[149,21,212,21,"push"],[149,25,212,12],[149,26,212,26,"str"],[149,29,212,12],[150,0,214,9],[150,11,209,8],[151,0,216,9],[151,9,208,8],[153,0,219,8],[153,12,219,11],[153,18,219,16,"state"],[153,23,219,11],[153,24,219,22,"originText"],[153,34,219,11],[153,38,219,36],[153,40,219,8],[153,42,219,40],[154,0,221,12,"Geocoder"],[154,40,221,21,"init"],[154,44,221,12],[154,45,221,26,"GOOGLE_MAPS_APIKEY"],[154,63,221,12],[156,0,223,12,"Geocoder"],[156,40,223,21,"from"],[156,44,223,12],[156,45,223,26],[156,51,223,31,"state"],[156,56,223,26],[156,57,223,37,"originText"],[156,67,223,12],[156,69,224,17,"then"],[156,73,223,12],[156,74,224,22],[156,84,224,22,"json"],[156,88,224,26],[156,90,224,30],[157,0,225,20],[157,16,225,24,"location"],[157,24,225,32],[157,27,225,35,"json"],[157,31,225,39],[157,32,225,40,"results"],[157,39,225,35],[157,40,225,48],[157,41,225,35],[157,43,225,51,"geometry"],[157,51,225,35],[157,52,225,60,"location"],[157,60,225,20],[158,0,226,20,"console"],[158,12,226,20,"console"],[158,19,226,27],[158,20,226,28,"log"],[158,23,226,20],[158,24,226,32,"location"],[158,32,226,20],[160,0,227,20],[160,18,227,25,"setState"],[160,26,227,20],[160,27,227,34],[161,0,227,36,"origin"],[161,14,227,36,"origin"],[161,20,227,42],[161,22,227,44],[162,0,227,46,"latitude"],[162,16,227,46,"latitude"],[162,24,227,54],[162,26,227,56,"location"],[162,34,227,64],[162,35,227,65,"lat"],[162,38,227,44],[163,0,227,70,"longitude"],[163,16,227,70,"longitude"],[163,25,227,79],[163,27,227,81,"location"],[163,35,227,89],[163,36,227,90,"lng"],[164,0,227,44],[165,0,227,34],[165,13,227,20],[166,0,229,13],[166,11,223,12],[166,13,230,13,"catch"],[166,18,223,12],[166,19,230,19],[166,29,230,19,"error"],[166,34,230,24],[167,0,230,24],[167,19,230,28,"console"],[167,26,230,35],[167,27,230,36,"warn"],[167,31,230,28],[167,32,230,41,"error"],[167,37,230,28],[167,38,230,24],[168,0,230,24],[168,11,223,12],[170,0,231,12,"console"],[170,10,231,12,"console"],[170,17,231,19],[170,18,231,20,"log"],[170,21,231,12],[170,22,231,24,"auxArray"],[170,30,231,12],[171,0,233,12,"auxArray"],[171,10,233,12,"auxArray"],[171,18,233,20],[171,19,233,21,"forEach"],[171,26,233,12],[171,27,233,29],[171,37,233,39,"item"],[171,41,233,29],[171,43,233,45,"indice"],[171,49,233,29],[171,51,233,53,"array"],[171,56,233,29],[171,58,233,60],[172,0,233,60],[174,0,234,14,"console"],[174,12,234,14,"console"],[174,19,234,21],[174,20,234,22,"log"],[174,23,234,14],[174,24,234,26],[174,35,234,37,"item"],[174,39,234,14],[176,0,235,14,"Geocoder"],[176,42,235,23,"init"],[176,46,235,14],[176,47,235,28,"GOOGLE_MAPS_APIKEY"],[176,65,235,14],[178,0,236,14,"Geocoder"],[178,42,236,23,"from"],[178,46,236,14],[178,47,236,28,"item"],[178,51,236,14],[178,53,237,15,"then"],[178,57,236,14],[178,58,237,20],[178,68,237,20,"json"],[178,72,237,24],[178,74,237,28],[179,0,238,18],[179,18,238,22,"location"],[179,26,238,30],[179,29,238,33,"json"],[179,33,238,37],[179,34,238,38,"results"],[179,41,238,33],[179,42,238,46],[179,43,238,33],[179,45,238,49,"geometry"],[179,53,238,33],[179,54,238,58,"location"],[179,62,238,18],[180,0,239,18,"console"],[180,14,239,18,"console"],[180,21,239,25],[180,22,239,26,"log"],[180,25,239,18],[180,26,239,30,"location"],[180,34,239,18],[182,0,240,18],[182,14,240,18],[182,20,240,22],[182,21,240,23,"setState"],[182,29,240,18],[182,30,240,32],[183,0,240,34,"waypoints"],[183,16,240,34,"waypoints"],[183,25,240,43],[183,27,240,45],[184,0,240,47,"latitude"],[184,18,240,47,"latitude"],[184,26,240,55],[184,28,240,57,"location"],[184,36,240,65],[184,37,240,66,"lat"],[184,40,240,45],[185,0,240,71,"longitude"],[185,18,240,71,"longitude"],[185,27,240,80],[185,29,240,82,"location"],[185,37,240,90],[185,38,240,91,"lng"],[186,0,240,45],[187,0,240,32],[187,15,240,18],[189,0,241,18,"arr"],[189,14,241,18,"arr"],[189,17,241,21],[189,18,241,22,"push"],[189,22,241,18],[189,23,241,27],[189,29,241,31],[189,30,241,32,"state"],[189,35,241,27],[189,36,241,38,"waypoints"],[189,45,241,18],[191,0,242,18],[191,14,242,18],[191,20,242,22],[191,21,242,23,"setState"],[191,29,242,18],[191,30,242,32],[192,0,242,33,"arrWaypoints"],[192,16,242,33,"arrWaypoints"],[192,28,242,45],[192,30,242,46,"arr"],[193,0,242,32],[193,15,242,18],[194,0,244,11],[194,13,236,14],[194,15,245,11,"catch"],[194,20,236,14],[194,21,245,17],[194,31,245,17,"error"],[194,36,245,22],[195,0,245,22],[195,21,245,26,"console"],[195,28,245,33],[195,29,245,34,"warn"],[195,33,245,26],[195,34,245,39,"error"],[195,39,245,26],[195,40,245,22],[196,0,245,22],[196,13,236,14],[197,0,247,13],[197,11,233,12],[198,0,250,9],[198,9,219,8],[198,15,252,13],[199,0,254,12,"alert"],[199,10,254,12,"alert"],[199,15,254,17],[199,16,254,18],[199,36,254,17],[199,37,254,12],[200,0,256,9],[202,0,258,8],[202,12,258,11],[202,18,258,16,"state"],[202,23,258,11],[202,24,258,22,"destinationText"],[202,39,258,11],[202,43,258,41],[202,45,258,8],[202,47,258,45],[203,0,260,12,"Geocoder"],[203,40,260,21,"init"],[203,44,260,12],[203,45,260,26,"GOOGLE_MAPS_APIKEY"],[203,63,260,12],[205,0,262,12,"Geocoder"],[205,40,262,21,"from"],[205,44,262,12],[205,45,262,26],[205,51,262,31,"state"],[205,56,262,26],[205,57,262,37,"destinationText"],[205,72,262,12],[205,74,263,13,"then"],[205,78,262,12],[205,79,263,18],[205,89,263,18,"json"],[205,93,263,22],[205,95,263,26],[206,0,264,16],[206,16,264,20,"location"],[206,24,264,28],[206,27,264,31,"json"],[206,31,264,35],[206,32,264,36,"results"],[206,39,264,31],[206,40,264,44],[206,41,264,31],[206,43,264,47,"geometry"],[206,51,264,31],[206,52,264,56,"location"],[206,60,264,16],[207,0,265,16,"console"],[207,12,265,16,"console"],[207,19,265,23],[207,20,265,24,"log"],[207,23,265,16],[207,24,265,28,"location"],[207,32,265,16],[209,0,266,16],[209,18,266,21,"setState"],[209,26,266,16],[209,27,266,30],[210,0,266,32,"destination"],[210,14,266,32,"destination"],[210,25,266,43],[210,27,266,45],[211,0,266,47,"latitude"],[211,16,266,47,"latitude"],[211,24,266,55],[211,26,266,57,"location"],[211,34,266,65],[211,35,266,66,"lat"],[211,38,266,45],[212,0,266,71,"longitude"],[212,16,266,71,"longitude"],[212,25,266,80],[212,27,266,82,"location"],[212,35,266,90],[212,36,266,91,"lng"],[213,0,266,45],[214,0,266,30],[214,13,266,16],[215,0,268,13],[215,11,262,12],[215,13,269,13,"catch"],[215,18,262,12],[215,19,269,19],[215,29,269,19,"error"],[215,34,269,24],[216,0,269,24],[216,19,269,28,"console"],[216,26,269,35],[216,27,269,36,"warn"],[216,31,269,28],[216,32,269,41,"error"],[216,37,269,28],[216,38,269,24],[217,0,269,24],[217,11,262,12],[218,0,270,9],[218,9,258,8],[218,15,272,13],[219,0,274,12,"alert"],[219,10,274,12,"alert"],[219,15,274,17],[219,16,274,18],[219,37,274,17],[219,38,274,12],[220,0,276,9],[221,0,278,7],[221,7],[223,12,282,6,"handleGetGoogleMapDirections"],[223,40],[223,43,282,37],[223,55,282,43],[224,0,284,8],[224,12,284,14,"data"],[224,16,284,18],[224,19,284,21],[225,0,286,12,"source"],[225,10,286,12,"source"],[225,16,286,18],[225,18,286,20],[225,24,286,25,"state"],[225,29,286,20],[225,30,286,31,"origin"],[225,36,284,21],[226,0,287,12,"destination"],[226,10,287,12,"destination"],[226,21,287,23],[226,23,287,25],[226,29,287,30,"state"],[226,34,287,25],[226,35,287,36,"destination"],[226,46,284,21],[227,0,288,12,"waypoints"],[227,10,288,12,"waypoints"],[227,19,288,21],[227,21,288,23],[227,27,288,28,"state"],[227,32,288,23],[227,33,288,34,"arrWaypoints"],[227,45,284,21],[228,0,289,12,"params"],[228,10,289,12,"params"],[228,16,289,18],[228,18,289,20],[228,19,290,16],[229,0,291,18,"key"],[229,12,291,18,"key"],[229,15,291,21],[229,17,291,23],[229,29,290,16],[230,0,292,18,"value"],[230,12,292,18,"value"],[230,17,292,23],[230,19,292,25],[231,0,290,16],[231,11,289,20],[232,0,284,21],[232,9,284,8],[233,0,298,8],[233,54,298,22,"data"],[233,58,298,8],[234,0,300,7],[234,7],[249,50,60,34,"PermissionsAndroid"],[249,82,60,53,"request"],[249,89,60,34],[249,90,61,16,"PermissionsAndroid"],[249,122,61,35,"PERMISSIONS"],[249,133,61,16],[249,134,61,47,"ACCESS_FINE_LOCATION"],[249,154,60,34],[249,156,62,16],[250,0,63,20],[250,27,63,29],[250,52,62,16],[251,0,64,20],[251,29,64,31],[251,68,65,24],[252,0,62,16],[252,17,60,34],[252,18],[255,0,60,18,"granted"],[255,16,60,18,"granted"],[255,23],[257,22,69,16,"granted"],[257,29,69,23],[257,34,69,28,"PermissionsAndroid"],[257,66,69,47,"RESULTS"],[257,73,69,28],[257,74,69,55,"GRANTED"],[257,81],[262,0,70,16,"console"],[262,16,70,16,"console"],[262,23,70,23],[262,24,70,24,"log"],[262,27,70,16],[262,28,70,28],[262,54,70,16],[263,49,71,23],[263,53],[266,0,74,16,"console"],[266,16,74,16,"console"],[266,23,74,23],[266,24,74,24,"log"],[266,27,74,16],[266,28,74,28],[266,56,74,16],[267,49,75,23],[267,54],[276,0,79,12,"console"],[276,16,79,12,"console"],[276,23,79,19],[276,24,79,20,"warn"],[276,28,79,12],[294,50,107,30],[294,55,107,35,"requestLocationPermission"],[294,80,107,30],[294,82],[297,0,107,12,"isGranted"],[297,16,107,12,"isGranted"],[297,25],[299,0,109,8],[299,20,109,12,"isGranted"],[299,29,109,8],[299,31,109,23],[300,0,110,12],[300,23,110,17,"getLocation"],[300,34,110,12],[301,0,111,9],[303,0,113,8],[303,21,113,13,"getLocation"],[303,32,113,8],[314,33,126,24,"api"],[314,36],[314,38,126,28,"path"],[314,42],[314,44,126,33,"objRoutes"],[314,53],[322,50,128,36,"API"],[322,66,128,40,"put"],[322,69,128,36],[322,70,128,44,"api"],[322,73,128,36],[322,75,128,49,"path"],[322,79,128,36],[322,81,128,55,"objRoutes"],[322,90,128,36],[322,91],[325,0,128,16,"apiResponse"],[325,16,128,16,"apiResponse"],[325,27],[326,0,129,10,"console"],[326,16,129,10,"console"],[326,23,129,17],[326,24,129,18,"log"],[326,27,129,10],[326,28,129,22],[326,62,129,56,"apiResponse"],[326,73,129,10],[327,0,130,10],[327,21,130,15,"setState"],[327,29,130,10],[327,30,130,24],[328,0,130,25,"apiResponse"],[328,18,130,25,"apiResponse"],[328,29,130,36],[328,31,130,25,"apiResponse"],[329,0,130,24],[329,17,130,10],[330,50,131,17,"apiResponse"],[330,61],[335,0,133,10,"console"],[335,16,133,10,"console"],[335,23,133,17],[335,24,133,18,"log"],[335,27,133,10],[346,32,138,22,"user"],[346,36],[353,0,139,12,"path"],[353,16,139,12,"path"],[353,20],[353,23,139,19],[353,45,139,41,"user"],[353,49],[356,50,141,36,"API"],[356,66,141,40,"get"],[356,69,141,36],[356,70,141,44],[356,80,141,36],[356,82,141,56,"path"],[356,86,141,36],[356,87],[359,0,141,16,"apiResponse"],[359,16,141,16,"apiResponse"],[359,28],[360,0,142,10,"console"],[360,16,142,10,"console"],[360,23,142,17],[360,24,142,18,"log"],[360,27,142,10],[360,28,142,22],[360,59,142,53,"apiResponse"],[360,71,142,64],[360,72,142,65,"routeName"],[360,81,142,10],[361,0,143,10],[361,21,143,15,"setState"],[361,29,143,10],[361,30,143,24],[362,0,143,25,"apiResponse"],[362,18,143,25,"apiResponse"],[362,29,143,36],[362,31,143,25,"apiResponse"],[363,0,143,24],[363,17,143,10],[365,0,144,10],[365,20,144,13,"apiResponse"],[365,32,144,24],[365,33,144,25,"routeName"],[365,42,144,13],[365,46,144,38,"undefined"],[365,55,144,10],[365,57,144,49],[366,0,145,12],[366,23,145,17,"setState"],[366,31,145,12],[366,32,145,26],[367,0,145,27,"RouteName"],[367,20,145,27,"RouteName"],[367,29,145,36],[367,31,145,37,"apiResponse"],[367,43,145,48],[367,44,145,49,"routeName"],[368,0,145,26],[368,19,145,12],[369,0,146,12,"console"],[369,18,146,12,"console"],[369,25,146,19],[369,26,146,20,"log"],[369,29,146,12],[369,30,146,24],[369,35,146,29,"state"],[369,40,146,24],[369,41,146,35,"RouteName"],[369,50,146,12],[370,0,147,12],[370,23,147,17,"setState"],[370,31,147,12],[370,32,147,26],[371,0,147,27,"hasRoute"],[371,20,147,27,"hasRoute"],[371,28,147,35],[371,30,147,36],[372,0,147,26],[372,19,147,12],[373,0,148,12,"console"],[373,18,148,12,"console"],[373,25,148,19],[373,26,148,20,"log"],[373,29,148,12],[373,30,148,24],[373,47,148,41],[373,52,148,46,"state"],[373,57,148,41],[373,58,148,52,"RouteName"],[373,67,148,12],[374,0,149,11],[374,17,144,10],[374,23,149,15],[375,0,150,12],[375,23,150,17,"setState"],[375,31,150,12],[375,32,150,26],[376,0,150,27,"hasRoute"],[376,20,150,27,"hasRoute"],[376,28,150,35],[376,30,150,36],[377,0,150,26],[377,19,150,12],[378,0,152,11],[380,50,153,17,"apiResponse"],[380,62],[385,0,155,10,"console"],[385,16,155,10,"console"],[385,23,155,17],[385,24,155,18,"log"],[385,27,155,10],[396,32,162,24,"inputText"],[396,41],[403,50,163,14],[403,55,163,19,"setState"],[403,63,163,14],[403,64,163,28],[404,0,163,29,"isDialogVisible"],[404,18,163,29,"isDialogVisible"],[404,33,163,44],[404,35,163,45],[405,0,163,28],[405,17,163,14],[405,18],[408,0,165,12,"user"],[408,16,165,12,"user"],[408,20],[408,23,165,19,"Auth"],[408,40,165,24,"user"],[408,44,165,19],[408,45,165,29,"username"],[408,53],[409,0,166,12,"origin"],[409,16,166,12,"origin"],[409,22],[409,25,166,21],[409,30,166,26,"state"],[409,35,166,21],[409,36,166,32,"originText"],[409,46],[410,0,167,12,"destination"],[410,16,167,12,"destination"],[410,27],[410,30,167,26],[410,35,167,31,"state"],[410,40,167,26],[410,41,167,37,"destinationText"],[410,56],[411,0,168,12,"waypoints"],[411,16,168,12,"waypoints"],[411,25],[411,28,168,24],[411,33,168,29,"state"],[411,38,168,24],[411,39,168,35,"waypointsText"],[411,52],[412,0,169,12,"routeName"],[412,16,169,12,"routeName"],[412,25],[412,28,169,24,"inputText"],[412,37],[414,50,171,31],[415,0,172,10,"body"],[415,18,172,10,"body"],[415,22,172,14],[415,24,172,16],[416,0,173,12],[416,33,173,25,"routeName"],[416,42,172,16],[417,0,174,12],[417,28,174,20,"user"],[417,32,172,16],[418,0,175,12],[418,30,175,21,"origin"],[418,36,172,16],[419,0,176,12],[419,35,176,27,"destination"],[419,46,172,16],[420,0,177,12],[420,33,177,24,"waypoints"],[421,0,172,16],[422,0,171,31],[422,17],[425,0,171,13,"objRoutes"],[425,16,171,13,"objRoutes"],[425,25],[427,50,182,14],[427,55,182,19,"saveRoutes"],[427,65,182,14],[427,66,182,30],[427,74,182,14],[427,76,182,39],[427,85,182,14],[427,87,182,49,"objRoutes"],[427,96,182,14],[427,97],[431,50,184,14],[431,55,184,19,"getRoutes"],[431,64,184,14],[431,65,184,29,"user"],[431,69,184,14],[431,70],[435,50,186,33],[436,0,187,10,"body"],[436,18,187,10,"body"],[436,22,187,14],[436,24,187,16],[437,0,188,12],[437,28,188,20,"user"],[437,32,187,16],[438,0,189,12],[438,33,189,25],[438,38,189,30,"state"],[438,43,189,25],[438,44,189,36,"RouteName"],[439,0,187,16],[440,0,186,33],[440,17],[443,0,186,12,"objRoutesAux"],[443,16,186,12,"objRoutesAux"],[443,28],[445,50,193,18],[445,55,193,23,"state"],[445,60,193,18],[445,61,193,29,"hasRoute"],[445,69],[450,38,193,41],[450,42],[455,0,194,10,"objRoutesAux"],[455,16,194,10,"objRoutesAux"],[455,28,194,22],[455,29,194,23,"body"],[455,33,194,10],[455,34,194,28,"routeName"],[455,43,194,10],[455,44,194,38,"push"],[455,48,194,10],[455,49,194,43,"routeName"],[455,58,194,10],[460,0,196,10,"objRoutesAux"],[460,16,196,10,"objRoutesAux"],[460,28,196,22],[460,29,196,23,"body"],[460,33,196,10],[460,34,196,28,"routeName"],[460,43,196,10],[460,46,196,40],[460,47,196,41,"routeName"],[460,56,196,40],[460,57,196,10],[464,50,200,14],[464,55,200,19,"saveRoutes"],[464,65,200,14],[464,66,200,30],[464,76,200,14],[464,78,200,41],[464,89,200,14],[464,91,200,53,"objRoutesAux"],[464,103,200,14],[464,104],[467,0,201,8,"alert"],[467,16,201,8,"alert"],[467,21,201,13],[467,22,201,14],[467,48,201,13],[467,49,201,8],[478,31,302,13],[479,0,302,13],[481,0,303,8],[481,15,305,12],[481,44,305,13],[481,77,305,12],[482,0,305,34],[482,10,305,34],[482,15,305,39],[482,17,305,41,"styles"],[482,23,305,47],[482,24,305,48,"container"],[482,33,305,12],[483,0,305,59],[483,10,305,59],[483,18,305,67],[483,20,305,68],[483,29,305,12],[484,0,305,78],[484,10,305,78],[484,17,305,85],[484,23,305,12],[485,0,305,12],[486,0,305,12],[487,0,305,12],[488,0,305,12],[489,0,305,12],[489,11,307,12],[489,40,307,13],[489,64,307,12],[490,0,309,14],[490,10,309,14],[490,13,309,17],[490,15,309,19],[490,28,309,19,"map"],[490,31,309,22],[491,0,309,22],[491,19,309,26],[491,25,309,30],[491,26,309,31,"mapView"],[491,33,309,26],[491,36,309,41,"map"],[491,39,309,22],[492,0,309,22],[492,11,307,12],[493,0,310,14],[493,10,310,14],[493,15,310,19],[493,17,310,21,"styles"],[493,23,310,27],[493,24,310,28,"map"],[493,27,307,12],[494,0,312,14],[494,10,312,14],[494,16,312,20],[494,18,312,22],[495,0,313,16,"latitude"],[495,12,313,16,"latitude"],[495,20,313,24],[495,22,313,26],[495,23,313,27],[495,28,313,32,"state"],[495,33,313,27],[495,34,313,38,"origin"],[495,40,313,27],[495,41,313,45,"latitude"],[495,49,313,27],[495,52,313,56],[495,57,313,61,"state"],[495,62,313,56],[495,63,313,67,"destination"],[495,74,313,56],[495,75,313,79,"latitude"],[495,83,313,26],[495,87,313,91],[495,88,312,22],[496,0,314,16,"longitude"],[496,12,314,16,"longitude"],[496,21,314,25],[496,23,314,27],[496,24,314,28],[496,29,314,33,"state"],[496,34,314,28],[496,35,314,39,"origin"],[496,41,314,28],[496,42,314,46,"longitude"],[496,51,314,28],[496,54,314,58],[496,59,314,63,"state"],[496,64,314,58],[496,65,314,69,"destination"],[496,76,314,58],[496,77,314,81,"longitude"],[496,86,314,27],[496,90,314,94],[496,91,312,22],[497,0,315,16,"latitudeDelta"],[497,12,315,16,"latitudeDelta"],[497,25,315,29],[497,27,315,31,"Math"],[497,31,315,35],[497,32,315,36,"abs"],[497,35,315,31],[497,36,315,40],[497,41,315,45,"state"],[497,46,315,40],[497,47,315,51,"origin"],[497,53,315,40],[497,54,315,58,"latitude"],[497,62,315,40],[497,65,315,69],[497,70,315,74,"state"],[497,75,315,69],[497,76,315,80,"destination"],[497,87,315,69],[497,88,315,92,"latitude"],[497,96,315,31],[497,100,315,104,"Math"],[497,104,315,108],[497,105,315,109,"abs"],[497,108,315,104],[497,109,315,113],[497,114,315,118,"state"],[497,119,315,113],[497,120,315,124,"origin"],[497,126,315,113],[497,127,315,131,"latitude"],[497,135,315,113],[497,138,315,142],[497,143,315,147,"state"],[497,148,315,142],[497,149,315,153,"destination"],[497,160,315,142],[497,161,315,165,"latitude"],[497,169,315,104],[497,173,315,177],[497,175,312,22],[498,0,316,16,"longitudeDelta"],[498,12,316,16,"longitudeDelta"],[498,26,316,30],[498,28,316,32,"Math"],[498,32,316,36],[498,33,316,37,"abs"],[498,36,316,32],[498,37,316,41],[498,42,316,46,"state"],[498,47,316,41],[498,48,316,52,"origin"],[498,54,316,41],[498,55,316,59,"longitude"],[498,64,316,41],[498,67,316,71],[498,72,316,76,"state"],[498,77,316,71],[498,78,316,82,"destination"],[498,89,316,71],[498,90,316,94,"longitude"],[498,99,316,32],[498,103,316,107,"Math"],[498,107,316,111],[498,108,316,112,"abs"],[498,111,316,107],[498,112,316,116],[498,117,316,121,"state"],[498,122,316,116],[498,123,316,127,"origin"],[498,129,316,116],[498,130,316,134,"longitude"],[498,139,316,116],[498,142,316,146],[498,147,316,151,"state"],[498,152,316,146],[498,153,316,157,"destination"],[498,164,316,146],[498,165,316,169,"longitude"],[498,174,316,107],[498,178,316,182],[499,0,312,22],[499,11,307,12],[500,0,319,14],[500,10,319,14],[500,24,319,28],[500,26,319,30],[500,30,307,12],[501,0,320,14],[501,10,320,14],[501,24,320,28],[501,26,320,30],[501,30,307,12],[502,0,321,14],[502,10,321,14],[502,28,321,32],[502,30,321,34],[502,34,307,12],[503,0,307,12],[504,0,307,12],[505,0,307,12],[506,0,307,12],[507,0,307,12],[507,11,325,12],[507,40,325,13],[507,64,325,12],[507,65,325,21],[507,71,325,12],[508,0,326,14],[508,10,326,14],[508,20,326,24],[508,22,326,26],[508,27,326,31,"state"],[508,32,326,26],[508,33,326,37,"destination"],[508,44,325,12],[509,0,325,12],[510,0,325,12],[511,0,325,12],[512,0,325,12],[513,0,325,12],[513,11,328,14],[513,40,328,15],[513,64,328,14],[513,65,328,23],[513,72,328,14],[514,0,328,31],[514,10,328,31],[514,17,328,38],[514,19,328,40],[514,24,328,45,"handleGetGoogleMapDirections"],[514,52,328,14],[515,0,328,14],[516,0,328,14],[517,0,328,14],[518,0,328,14],[519,0,328,14],[519,11,329,16],[519,40,329,17],[519,57,329,16],[520,0,329,16],[521,0,329,16],[522,0,329,16],[523,0,329,16],[524,0,329,16],[524,36,328,14],[524,37,325,12],[524,38,307,12],[524,40,333,12],[524,69,333,13],[524,93,333,12],[524,94,333,21],[524,100,333,12],[525,0,334,14],[525,10,334,14],[525,20,334,24],[525,22,334,26],[525,27,334,31,"state"],[525,32,334,26],[525,33,334,37,"waypoints"],[525,42,333,12],[526,0,333,12],[527,0,333,12],[528,0,333,12],[529,0,333,12],[530,0,333,12],[530,10,307,12],[530,12,338,12],[530,41,338,13],[530,65,338,12],[530,66,338,21],[530,72,338,12],[531,0,339,14],[531,10,339,14],[531,20,339,24],[531,22,339,26],[531,27,339,31,"state"],[531,32,339,26],[531,33,339,37,"origin"],[531,39,338,12],[532,0,338,12],[533,0,338,12],[534,0,338,12],[535,0,338,12],[536,0,338,12],[536,11,341,12],[536,40,341,13],[536,64,341,12],[536,65,341,21],[536,72,341,12],[537,0,341,12],[538,0,341,12],[539,0,341,12],[540,0,341,12],[541,0,341,12],[541,11,342,16],[541,40,342,17],[541,57,342,16],[542,0,342,16],[543,0,342,16],[544,0,342,16],[545,0,342,16],[546,0,342,16],[546,35,341,12],[546,36,338,12],[546,37,307,12],[546,39,346,12],[546,68,346,13],[546,102,346,12],[547,0,347,14],[547,10,347,14],[547,16,347,20],[547,18,347,22],[547,23,347,27,"state"],[547,28,347,22],[547,29,347,33,"origin"],[547,35,346,12],[548,0,348,14],[548,10,348,14],[548,19,348,23],[548,21,348,25],[548,26,348,30,"state"],[548,31,348,25],[548,32,348,36,"arrWaypoints"],[548,44,346,12],[549,0,349,14],[549,10,349,14],[549,21,349,25],[549,23,349,27],[549,28,349,32,"state"],[549,33,349,27],[549,34,349,38,"destination"],[549,45,346,12],[550,0,350,14],[550,10,350,14],[550,16,350,20],[550,18,350,22,"GOOGLE_MAPS_APIKEY"],[550,36,346,12],[551,0,346,12],[552,0,346,12],[553,0,346,12],[554,0,346,12],[555,0,346,12],[555,10,307,12],[555,11,305,12],[555,13,355,12],[555,42,355,13],[555,73,355,12],[556,0,355,25],[556,10,355,25],[556,25,355,40],[556,27,355,42],[556,32,355,47,"state"],[556,37,355,42],[556,38,355,53,"isDialogVisible"],[556,53,355,12],[557,0,356,12],[557,10,356,12],[557,15,356,17],[557,17,356,19],[557,29,355,12],[558,0,357,12],[558,10,357,12],[558,17,357,19],[558,19,357,21],[558,42,355,12],[559,0,358,12],[559,10,358,12],[559,19,358,21],[559,21,358,24],[559,44,355,12],[560,0,359,12],[560,10,359,12],[560,21,359,23],[560,23,359,26],[560,44,359,27,"inputText"],[560,53,359,26],[560,55,359,41],[561,0,359,42],[561,12,359,42],[561,18,359,46],[561,19,359,47,"sendInput"],[561,28,359,42],[561,29,359,57,"inputText"],[561,38,359,42],[562,0,359,68],[562,11,355,12],[563,0,360,12],[563,10,360,12],[563,21,360,23],[563,23,360,26],[563,46,360,32],[564,0,360,34],[564,12,360,34],[564,18,360,38],[564,19,360,39,"setState"],[564,27,360,34],[564,28,360,48],[565,0,360,49,"isDialogVisible"],[565,14,360,49,"isDialogVisible"],[565,29,360,64],[565,31,360,65],[566,0,360,48],[566,13,360,34],[567,0,360,73],[567,11,355,12],[568,0,355,12],[569,0,355,12],[570,0,355,12],[571,0,355,12],[572,0,355,12],[572,10,305,12],[572,12,363,16],[572,41,363,17],[572,63,363,16],[573,0,364,20],[573,10,364,20],[573,15,364,25],[573,17,364,27,"styles"],[573,23,364,33],[573,24,364,34,"input"],[573,29,363,16],[574,0,365,20],[574,10,365,20],[574,22,365,32],[574,24,365,34],[574,46,365,35,"text"],[574,50,365,34],[575,0,365,34],[575,19,365,44],[575,25,365,48],[575,26,365,49,"setState"],[575,34,365,44],[575,35,365,58],[576,0,365,60,"originText"],[576,14,365,60,"originText"],[576,24,365,70],[576,26,365,72,"text"],[577,0,365,58],[577,13,365,44],[577,14,365,34],[578,0,365,34],[578,11,363,16],[579,0,366,20],[579,10,366,20],[579,21,366,31],[579,23,366,32],[579,31,363,16],[580,0,367,20],[580,10,367,20],[580,15,367,25],[580,17,367,27],[580,22,367,32,"state"],[580,27,367,27],[580,28,367,38,"originText"],[580,38,363,16],[581,0,363,16],[582,0,363,16],[583,0,363,16],[584,0,363,16],[585,0,363,16],[585,10,305,12],[585,12,376,17],[585,41,376,18],[585,63,376,17],[586,0,377,20],[586,10,377,20],[586,15,377,25],[586,17,377,27,"styles"],[586,23,377,33],[586,24,377,34,"input"],[586,29,376,17],[587,0,378,20],[587,10,378,20],[587,22,378,32],[587,24,378,34],[587,46,378,35,"text"],[587,50,378,34],[588,0,378,34],[588,19,378,44],[588,25,378,48],[588,26,378,49,"setState"],[588,34,378,44],[588,35,378,58],[589,0,378,60,"destinationText"],[589,14,378,60,"destinationText"],[589,29,378,75],[589,31,378,77,"text"],[590,0,378,58],[590,13,378,44],[590,14,378,34],[591,0,378,34],[591,11,376,17],[592,0,379,20],[592,10,379,20],[592,21,379,31],[592,23,379,32],[592,36,376,17],[593,0,380,20],[593,10,380,20],[593,15,380,25],[593,17,380,27],[593,22,380,32,"state"],[593,27,380,27],[593,28,380,38,"destinationText"],[593,43,376,17],[594,0,376,17],[595,0,376,17],[596,0,376,17],[597,0,376,17],[598,0,376,17],[598,10,305,12],[598,12,383,16],[598,41,383,17],[598,70,383,16],[599,0,383,34],[599,10,383,34],[599,15,383,39],[599,17,383,41,"styles"],[599,23,383,47],[599,24,383,48,"button"],[599,30,383,16],[600,0,383,56],[600,10,383,56],[600,17,383,63],[600,19,383,65],[600,24,383,70,"handleButton"],[600,36,383,16],[601,0,383,16],[602,0,383,16],[603,0,383,16],[604,0,383,16],[605,0,383,16],[605,11,385,20],[605,40,385,21],[605,57,385,20],[606,0,385,26],[606,10,385,26],[606,15,385,31],[606,17,385,33,"styles"],[606,23,385,39],[606,24,385,40,"buttonText"],[606,34,385,20],[607,0,385,20],[608,0,385,20],[609,0,385,20],[610,0,385,20],[611,0,385,20],[611,26,383,16],[611,27,305,12],[611,29,389,16],[611,58,389,17],[611,87,389,16],[612,0,389,34],[612,10,389,34],[612,15,389,39],[612,17,389,41,"styles"],[612,23,389,47],[612,24,389,48,"button"],[612,30,389,16],[613,0,389,56],[613,10,389,56],[613,17,389,63],[613,19,389,65],[613,24,389,70,"saveButton"],[613,34,389,16],[614,0,389,16],[615,0,389,16],[616,0,389,16],[617,0,389,16],[618,0,389,16],[618,11,391,20],[618,40,391,21],[618,57,391,20],[619,0,391,26],[619,10,391,26],[619,15,391,31],[619,17,391,33,"styles"],[619,23,391,39],[619,24,391,40,"buttonText"],[619,34,391,20],[620,0,391,20],[621,0,391,20],[622,0,391,20],[623,0,391,20],[624,0,391,20],[624,24,389,16],[624,25,305,12],[624,26,303,8],[625,0,399,5],[628,4,31,39,"Component"],[628,20],[633,0,403,0],[633,6,403,6,"styles"],[633,12,403,12],[633,15,403,15,"StyleSheet"],[633,39,403,26,"create"],[633,45,403,15],[633,46,403,33],[634,0,405,4,"container"],[634,4,405,4,"container"],[634,13,405,13],[634,15,405,15],[635,0,407,8,"flex"],[635,6,407,8,"flex"],[635,10,407,12],[635,12,407,14],[635,13,405,15],[636,0,408,8,"justifyContent"],[636,6,408,8,"justifyContent"],[636,20,408,22],[636,22,408,24],[636,32,405,15],[637,0,409,8,"alignItems"],[637,6,409,8,"alignItems"],[637,16,409,18],[637,18,409,20],[638,0,405,15],[638,5,403,33],[639,0,413,6,"map"],[639,4,413,6,"map"],[639,7,413,9],[639,9,413,11],[640,0,415,8,"position"],[640,6,415,8,"position"],[640,14,415,16],[640,16,415,18],[640,26,413,11],[641,0,416,8,"top"],[641,6,416,8,"top"],[641,9,416,11],[641,11,416,13],[641,12,413,11],[642,0,417,8,"left"],[642,6,417,8,"left"],[642,10,417,12],[642,12,417,14],[642,13,413,11],[643,0,418,8,"right"],[643,6,418,8,"right"],[643,11,418,13],[643,13,418,15],[643,14,413,11],[644,0,419,8,"bottom"],[644,6,419,8,"bottom"],[644,12,419,14],[644,14,419,16],[645,0,413,11],[645,5,403,33],[646,0,423,6,"button"],[646,4,423,6,"button"],[646,10,423,12],[646,12,423,14],[647,0,425,8,"width"],[647,6,425,8,"width"],[647,11,425,13],[647,13,425,15,"width"],[647,18,425,20],[647,21,425,23],[647,24,423,14],[648,0,426,8,"height"],[648,6,426,8,"height"],[648,12,426,14],[648,14,426,16],[648,16,423,14],[649,0,427,8,"backgroundColor"],[649,6,427,8,"backgroundColor"],[649,21,427,23],[649,23,427,25],[649,29,423,14],[650,0,428,8,"alignItems"],[650,6,428,8,"alignItems"],[650,16,428,18],[650,18,428,20],[650,26,423,14],[651,0,429,8,"justifyContent"],[651,6,429,8,"justifyContent"],[651,20,429,22],[651,22,429,24],[651,30,423,14],[652,0,430,8,"borderWidth"],[652,6,430,8,"borderWidth"],[652,17,430,19],[652,19,430,21],[652,20,423,14],[653,0,431,8,"borderColor"],[653,6,431,8,"borderColor"],[653,17,431,19],[653,19,431,21],[653,25,423,14],[654,0,432,8,"borderRadius"],[654,6,432,8,"borderRadius"],[654,18,432,20],[654,20,432,22],[654,21,423,14],[655,0,433,8,"marginBottom"],[655,6,433,8,"marginBottom"],[655,18,433,20],[655,20,433,22],[655,22,423,14],[656,0,434,8,"marginHorizontal"],[656,6,434,8,"marginHorizontal"],[656,22,434,24],[656,24,434,26],[657,0,423,14],[657,5,403,33],[658,0,438,6,"buttonText"],[658,4,438,6,"buttonText"],[658,14,438,16],[658,16,438,18],[659,0,440,8,"color"],[659,6,440,8,"color"],[659,11,440,13],[659,13,440,15],[659,19,438,18],[660,0,441,8,"fontWeight"],[660,6,441,8,"fontWeight"],[660,16,441,18],[660,18,441,20],[661,0,438,18],[661,5,403,33],[662,0,445,6,"inputContainer"],[662,4,445,6,"inputContainer"],[662,18,445,20],[662,20,445,22],[663,0,447,8,"width"],[663,6,447,8,"width"],[663,11,447,13],[663,13,447,15],[663,19,445,22],[664,0,448,8,"maxHeight"],[664,6,448,8,"maxHeight"],[664,15,448,17],[664,17,448,19],[665,0,445,22],[665,5,403,33],[666,0,452,6,"input"],[666,4,452,6,"input"],[666,9,452,11],[666,11,452,13],[667,0,454,8,"width"],[667,6,454,8,"width"],[667,11,454,13],[667,13,454,15,"width"],[667,18,454,20],[667,21,454,23],[667,23,452,13],[668,0,455,8,"maxHeight"],[668,6,455,8,"maxHeight"],[668,15,455,17],[668,17,455,19],[668,20,452,13],[669,0,456,8,"backgroundColor"],[669,6,456,8,"backgroundColor"],[669,21,456,23],[669,23,456,25],[669,29,452,13],[670,0,457,8,"marginBottom"],[670,6,457,8,"marginBottom"],[670,18,457,20],[670,20,457,22],[670,22,452,13],[671,0,458,8,"marginHorizontal"],[671,6,458,8,"marginHorizontal"],[671,22,458,24],[671,24,458,26],[672,0,452,13],[673,0,403,33],[673,3,403,15],[673,4,403,0]]},"type":"js/module"}]}