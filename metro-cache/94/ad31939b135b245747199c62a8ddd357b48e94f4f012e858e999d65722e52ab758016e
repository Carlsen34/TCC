{"dependencies":[{"name":"../core","data":{"isAsync":false}},{"name":"./types","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var util = _$$_REQUIRE(_dependencyMap[0], \"../core\").util;\n\n  var typeOf = _$$_REQUIRE(_dependencyMap[1], \"./types\").typeOf;\n\n  var memberTypeToSetType = {\n    'String': 'String',\n    'Number': 'Number',\n    'NumberValue': 'Number',\n    'Binary': 'Binary'\n  };\n  var DynamoDBSet = util.inherit({\n    constructor: function Set(list, options) {\n      options = options || {};\n      this.initialize(list, options.validate);\n    },\n    initialize: function initialize(list, validate) {\n      var self = this;\n      self.values = [].concat(list);\n      self.detectType();\n\n      if (validate) {\n        self.validate();\n      }\n    },\n    detectType: function detectType() {\n      this.type = memberTypeToSetType[typeOf(this.values[0])];\n\n      if (!this.type) {\n        throw util.error(new Error(), {\n          code: 'InvalidSetType',\n          message: 'Sets can contain string, number, or binary values'\n        });\n      }\n    },\n    validate: function validate() {\n      var self = this;\n      var length = self.values.length;\n      var values = self.values;\n\n      for (var i = 0; i < length; i++) {\n        if (memberTypeToSetType[typeOf(values[i])] !== self.type) {\n          throw util.error(new Error(), {\n            code: 'InvalidType',\n            message: self.type + ' Set contains ' + typeOf(values[i]) + ' value'\n          });\n        }\n      }\n    }\n  });\n  module.exports = DynamoDBSet;\n});","map":[[2,0,1,0],[2,6,1,4,"util"],[2,10,1,8],[2,13,1,11,"require"],[2,24,1,18],[2,54,1,11],[2,55,1,30,"util"],[2,59,1,0],[4,0,2,0],[4,6,2,4,"typeOf"],[4,12,2,10],[4,15,2,13,"require"],[4,26,2,20],[4,56,2,13],[4,57,2,32,"typeOf"],[4,63,2,0],[6,0,7,0],[6,6,7,4,"memberTypeToSetType"],[6,25,7,23],[6,28,7,26],[7,0,8,2],[7,14,8,12],[7,22,7,26],[8,0,9,2],[8,14,9,12],[8,22,7,26],[9,0,10,2],[9,19,10,17],[9,27,7,26],[10,0,11,2],[10,14,11,12],[11,0,7,26],[11,3,7,0],[12,0,17,0],[12,6,17,4,"DynamoDBSet"],[12,17,17,15],[12,20,17,18,"util"],[12,24,17,22],[12,25,17,23,"inherit"],[12,32,17,18],[12,33,17,31],[13,0,19,2,"constructor"],[13,4,19,2,"constructor"],[13,15,19,13],[13,17,19,15],[13,26,19,24,"Set"],[13,29,19,15],[13,30,19,28,"list"],[13,34,19,15],[13,36,19,34,"options"],[13,43,19,15],[13,45,19,43],[14,0,20,4,"options"],[14,6,20,4,"options"],[14,13,20,11],[14,16,20,14,"options"],[14,23,20,21],[14,27,20,25],[14,29,20,4],[15,0,21,4],[15,11,21,9,"initialize"],[15,21,21,4],[15,22,21,20,"list"],[15,26,21,4],[15,28,21,26,"options"],[15,35,21,33],[15,36,21,34,"validate"],[15,44,21,4],[16,0,22,3],[16,5,17,31],[17,0,24,2,"initialize"],[17,4,24,2,"initialize"],[17,14,24,12],[17,16,24,14],[17,36,24,23,"list"],[17,40,24,14],[17,42,24,29,"validate"],[17,50,24,14],[17,52,24,39],[18,0,25,4],[18,10,25,8,"self"],[18,14,25,12],[18,17,25,15],[18,21,25,4],[19,0,26,4,"self"],[19,6,26,4,"self"],[19,10,26,8],[19,11,26,9,"values"],[19,17,26,4],[19,20,26,18],[19,23,26,21,"concat"],[19,29,26,18],[19,30,26,28,"list"],[19,34,26,18],[19,35,26,4],[20,0,27,4,"self"],[20,6,27,4,"self"],[20,10,27,8],[20,11,27,9,"detectType"],[20,21,27,4],[22,0,28,4],[22,10,28,8,"validate"],[22,18,28,4],[22,20,28,18],[23,0,29,6,"self"],[23,8,29,6,"self"],[23,12,29,10],[23,13,29,11,"validate"],[23,21,29,6],[24,0,30,5],[25,0,31,3],[25,5,17,31],[26,0,33,2,"detectType"],[26,4,33,2,"detectType"],[26,14,33,12],[26,16,33,14],[26,38,33,25],[27,0,34,4],[27,11,34,9,"type"],[27,15,34,4],[27,18,34,16,"memberTypeToSetType"],[27,37,34,35],[27,38,34,36,"typeOf"],[27,44,34,42],[27,45,34,43],[27,50,34,48,"values"],[27,56,34,43],[27,57,34,55],[27,58,34,43],[27,59,34,42],[27,60,34,35],[27,61,34,4],[29,0,35,4],[29,10,35,8],[29,11,35,9],[29,16,35,14,"type"],[29,20,35,4],[29,22,35,20],[30,0,36,6],[30,14,36,12,"util"],[30,18,36,16],[30,19,36,17,"error"],[30,24,36,12],[30,25,36,23],[30,29,36,27,"Error"],[30,34,36,23],[30,36,36,12],[30,38,36,36],[31,0,37,8,"code"],[31,10,37,8,"code"],[31,14,37,12],[31,16,37,14],[31,32,36,36],[32,0,38,8,"message"],[32,10,38,8,"message"],[32,17,38,15],[32,19,38,17],[33,0,36,36],[33,9,36,12],[33,10,36,6],[34,0,40,5],[35,0,41,3],[35,5,17,31],[36,0,43,2,"validate"],[36,4,43,2,"validate"],[36,12,43,10],[36,14,43,12],[36,34,43,23],[37,0,44,4],[37,10,44,8,"self"],[37,14,44,12],[37,17,44,15],[37,21,44,4],[38,0,45,4],[38,10,45,8,"length"],[38,16,45,14],[38,19,45,17,"self"],[38,23,45,21],[38,24,45,22,"values"],[38,30,45,17],[38,31,45,29,"length"],[38,37,45,4],[39,0,46,4],[39,10,46,8,"values"],[39,16,46,14],[39,19,46,17,"self"],[39,23,46,21],[39,24,46,22,"values"],[39,30,46,4],[41,0,47,4],[41,11,47,9],[41,15,47,13,"i"],[41,16,47,14],[41,19,47,17],[41,20,47,4],[41,22,47,20,"i"],[41,23,47,21],[41,26,47,24,"length"],[41,32,47,4],[41,34,47,32,"i"],[41,35,47,33],[41,37,47,4],[41,39,47,37],[42,0,48,6],[42,12,48,10,"memberTypeToSetType"],[42,31,48,29],[42,32,48,30,"typeOf"],[42,38,48,36],[42,39,48,37,"values"],[42,45,48,43],[42,46,48,44,"i"],[42,47,48,43],[42,48,48,36],[42,49,48,29],[42,50,48,10],[42,55,48,53,"self"],[42,59,48,57],[42,60,48,58,"type"],[42,64,48,6],[42,66,48,64],[43,0,49,8],[43,16,49,14,"util"],[43,20,49,18],[43,21,49,19,"error"],[43,26,49,14],[43,27,49,25],[43,31,49,29,"Error"],[43,36,49,25],[43,38,49,14],[43,40,49,38],[44,0,50,10,"code"],[44,12,50,10,"code"],[44,16,50,14],[44,18,50,16],[44,31,49,38],[45,0,51,10,"message"],[45,12,51,10,"message"],[45,19,51,17],[45,21,51,19,"self"],[45,25,51,23],[45,26,51,24,"type"],[45,30,51,19],[45,33,51,31],[45,49,51,19],[45,52,51,50,"typeOf"],[45,58,51,56],[45,59,51,57,"values"],[45,65,51,63],[45,66,51,64,"i"],[45,67,51,63],[45,68,51,56],[45,69,51,19],[45,72,51,70],[46,0,49,38],[46,11,49,14],[46,12,49,8],[47,0,53,7],[48,0,54,5],[49,0,55,3],[50,0,17,31],[50,3,17,18],[50,4,17,0],[51,0,59,0,"module"],[51,2,59,0,"module"],[51,8,59,6],[51,9,59,7,"exports"],[51,16,59,0],[51,19,59,17,"DynamoDBSet"],[51,30,59,0]]},"type":"js/module"}]}