{"dependencies":[{"name":"./int64","data":{"isAsync":false}},{"name":"./split-message","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var Int64 = _$$_REQUIRE(_dependencyMap[0], \"./int64\").Int64;\n\n  var splitMessage = _$$_REQUIRE(_dependencyMap[1], \"./split-message\").splitMessage;\n\n  var BOOLEAN_TAG = 'boolean';\n  var BYTE_TAG = 'byte';\n  var SHORT_TAG = 'short';\n  var INT_TAG = 'integer';\n  var LONG_TAG = 'long';\n  var BINARY_TAG = 'binary';\n  var STRING_TAG = 'string';\n  var TIMESTAMP_TAG = 'timestamp';\n  var UUID_TAG = 'uuid';\n\n  function parseHeaders(headers) {\n    var out = {};\n    var position = 0;\n\n    while (position < headers.length) {\n      var nameLength = headers.readUInt8(position++);\n      var name = headers.slice(position, position + nameLength).toString();\n      position += nameLength;\n\n      switch (headers.readUInt8(position++)) {\n        case 0:\n          out[name] = {\n            type: BOOLEAN_TAG,\n            value: true\n          };\n          break;\n\n        case 1:\n          out[name] = {\n            type: BOOLEAN_TAG,\n            value: false\n          };\n          break;\n\n        case 2:\n          out[name] = {\n            type: BYTE_TAG,\n            value: headers.readInt8(position++)\n          };\n          break;\n\n        case 3:\n          out[name] = {\n            type: SHORT_TAG,\n            value: headers.readInt16BE(position)\n          };\n          position += 2;\n          break;\n\n        case 4:\n          out[name] = {\n            type: INT_TAG,\n            value: headers.readInt32BE(position)\n          };\n          position += 4;\n          break;\n\n        case 5:\n          out[name] = {\n            type: LONG_TAG,\n            value: new Int64(headers.slice(position, position + 8))\n          };\n          position += 8;\n          break;\n\n        case 6:\n          var binaryLength = headers.readUInt16BE(position);\n          position += 2;\n          out[name] = {\n            type: BINARY_TAG,\n            value: headers.slice(position, position + binaryLength)\n          };\n          position += binaryLength;\n          break;\n\n        case 7:\n          var stringLength = headers.readUInt16BE(position);\n          position += 2;\n          out[name] = {\n            type: STRING_TAG,\n            value: headers.slice(position, position + stringLength).toString()\n          };\n          position += stringLength;\n          break;\n\n        case 8:\n          out[name] = {\n            type: TIMESTAMP_TAG,\n            value: new Date(new Int64(headers.slice(position, position + 8)).valueOf())\n          };\n          position += 8;\n          break;\n\n        case 9:\n          var uuidChars = headers.slice(position, position + 16).toString('hex');\n          position += 16;\n          out[name] = {\n            type: UUID_TAG,\n            value: uuidChars.substr(0, 8) + '-' + uuidChars.substr(8, 4) + '-' + uuidChars.substr(12, 4) + '-' + uuidChars.substr(16, 4) + '-' + uuidChars.substr(20)\n          };\n          break;\n\n        default:\n          throw new Error('Unrecognized header type tag');\n      }\n    }\n\n    return out;\n  }\n\n  function parseMessage(message) {\n    var parsed = splitMessage(message);\n    return {\n      headers: parseHeaders(parsed.headers),\n      body: parsed.body\n    };\n  }\n\n  module.exports = {\n    parseMessage: parseMessage\n  };\n});","map":[[2,0,1,0],[2,6,1,4,"Int64"],[2,11,1,9],[2,14,1,12,"require"],[2,25,1,19],[2,55,1,12],[2,56,1,31,"Int64"],[2,61,1,0],[4,0,3,0],[4,6,3,4,"splitMessage"],[4,18,3,16],[4,21,3,19,"require"],[4,32,3,26],[4,70,3,19],[4,71,3,46,"splitMessage"],[4,83,3,0],[6,0,5,0],[6,6,5,4,"BOOLEAN_TAG"],[6,17,5,15],[6,20,5,18],[6,29,5,0],[7,0,6,0],[7,6,6,4,"BYTE_TAG"],[7,14,6,12],[7,17,6,15],[7,23,6,0],[8,0,7,0],[8,6,7,4,"SHORT_TAG"],[8,15,7,13],[8,18,7,16],[8,25,7,0],[9,0,8,0],[9,6,8,4,"INT_TAG"],[9,13,8,11],[9,16,8,14],[9,25,8,0],[10,0,9,0],[10,6,9,4,"LONG_TAG"],[10,14,9,12],[10,17,9,15],[10,23,9,0],[11,0,10,0],[11,6,10,4,"BINARY_TAG"],[11,16,10,14],[11,19,10,17],[11,27,10,0],[12,0,11,0],[12,6,11,4,"STRING_TAG"],[12,16,11,14],[12,19,11,17],[12,27,11,0],[13,0,12,0],[13,6,12,4,"TIMESTAMP_TAG"],[13,19,12,17],[13,22,12,20],[13,33,12,0],[14,0,13,0],[14,6,13,4,"UUID_TAG"],[14,14,13,12],[14,17,13,15],[14,23,13,0],[16,0,20,0],[16,11,20,9,"parseHeaders"],[16,23,20,0],[16,24,20,22,"headers"],[16,31,20,0],[16,33,20,31],[17,0,21,4],[17,8,21,8,"out"],[17,11,21,11],[17,14,21,14],[17,16,21,4],[18,0,22,4],[18,8,22,8,"position"],[18,16,22,16],[18,19,22,19],[18,20,22,4],[20,0,23,4],[20,11,23,11,"position"],[20,19,23,19],[20,22,23,22,"headers"],[20,29,23,29],[20,30,23,30,"length"],[20,36,23,4],[20,38,23,38],[21,0,24,8],[21,10,24,12,"nameLength"],[21,20,24,22],[21,23,24,25,"headers"],[21,30,24,32],[21,31,24,33,"readUInt8"],[21,40,24,25],[21,41,24,43,"position"],[21,49,24,51],[21,51,24,25],[21,52,24,8],[22,0,25,8],[22,10,25,12,"name"],[22,14,25,16],[22,17,25,19,"headers"],[22,24,25,26],[22,25,25,27,"slice"],[22,30,25,19],[22,31,25,33,"position"],[22,39,25,19],[22,41,25,43,"position"],[22,49,25,51],[22,52,25,54,"nameLength"],[22,62,25,19],[22,64,25,66,"toString"],[22,72,25,19],[22,74,25,8],[23,0,26,8,"position"],[23,6,26,8,"position"],[23,14,26,16],[23,18,26,20,"nameLength"],[23,28,26,8],[25,0,27,8],[25,14,27,16,"headers"],[25,21,27,23],[25,22,27,24,"readUInt8"],[25,31,27,16],[25,32,27,34,"position"],[25,40,27,42],[25,42,27,16],[25,43,27,8],[26,0,28,12],[26,13,28,17],[26,14,28,12],[27,0,29,16,"out"],[27,10,29,16,"out"],[27,13,29,19],[27,14,29,20,"name"],[27,18,29,19],[27,19,29,16],[27,22,29,28],[28,0,30,20,"type"],[28,12,30,20,"type"],[28,16,30,24],[28,18,30,26,"BOOLEAN_TAG"],[28,29,29,28],[29,0,31,20,"value"],[29,12,31,20,"value"],[29,17,31,25],[29,19,31,27],[30,0,29,28],[30,11,29,16],[31,0,33,16],[33,0,34,12],[33,13,34,17],[33,14,34,12],[34,0,35,16,"out"],[34,10,35,16,"out"],[34,13,35,19],[34,14,35,20,"name"],[34,18,35,19],[34,19,35,16],[34,22,35,28],[35,0,36,20,"type"],[35,12,36,20,"type"],[35,16,36,24],[35,18,36,26,"BOOLEAN_TAG"],[35,29,35,28],[36,0,37,20,"value"],[36,12,37,20,"value"],[36,17,37,25],[36,19,37,27],[37,0,35,28],[37,11,35,16],[38,0,39,16],[40,0,40,12],[40,13,40,17],[40,14,40,12],[41,0,41,16,"out"],[41,10,41,16,"out"],[41,13,41,19],[41,14,41,20,"name"],[41,18,41,19],[41,19,41,16],[41,22,41,28],[42,0,42,20,"type"],[42,12,42,20,"type"],[42,16,42,24],[42,18,42,26,"BYTE_TAG"],[42,26,41,28],[43,0,43,20,"value"],[43,12,43,20,"value"],[43,17,43,25],[43,19,43,27,"headers"],[43,26,43,34],[43,27,43,35,"readInt8"],[43,35,43,27],[43,36,43,44,"position"],[43,44,43,52],[43,46,43,27],[44,0,41,28],[44,11,41,16],[45,0,45,16],[47,0,46,12],[47,13,46,17],[47,14,46,12],[48,0,47,16,"out"],[48,10,47,16,"out"],[48,13,47,19],[48,14,47,20,"name"],[48,18,47,19],[48,19,47,16],[48,22,47,28],[49,0,48,20,"type"],[49,12,48,20,"type"],[49,16,48,24],[49,18,48,26,"SHORT_TAG"],[49,27,47,28],[50,0,49,20,"value"],[50,12,49,20,"value"],[50,17,49,25],[50,19,49,27,"headers"],[50,26,49,34],[50,27,49,35,"readInt16BE"],[50,38,49,27],[50,39,49,47,"position"],[50,47,49,27],[51,0,47,28],[51,11,47,16],[52,0,51,16,"position"],[52,10,51,16,"position"],[52,18,51,24],[52,22,51,28],[52,23,51,16],[53,0,52,16],[55,0,53,12],[55,13,53,17],[55,14,53,12],[56,0,54,16,"out"],[56,10,54,16,"out"],[56,13,54,19],[56,14,54,20,"name"],[56,18,54,19],[56,19,54,16],[56,22,54,28],[57,0,55,20,"type"],[57,12,55,20,"type"],[57,16,55,24],[57,18,55,26,"INT_TAG"],[57,25,54,28],[58,0,56,20,"value"],[58,12,56,20,"value"],[58,17,56,25],[58,19,56,27,"headers"],[58,26,56,34],[58,27,56,35,"readInt32BE"],[58,38,56,27],[58,39,56,47,"position"],[58,47,56,27],[59,0,54,28],[59,11,54,16],[60,0,58,16,"position"],[60,10,58,16,"position"],[60,18,58,24],[60,22,58,28],[60,23,58,16],[61,0,59,16],[63,0,60,12],[63,13,60,17],[63,14,60,12],[64,0,61,16,"out"],[64,10,61,16,"out"],[64,13,61,19],[64,14,61,20,"name"],[64,18,61,19],[64,19,61,16],[64,22,61,28],[65,0,62,20,"type"],[65,12,62,20,"type"],[65,16,62,24],[65,18,62,26,"LONG_TAG"],[65,26,61,28],[66,0,63,20,"value"],[66,12,63,20,"value"],[66,17,63,25],[66,19,63,27],[66,23,63,31,"Int64"],[66,28,63,27],[66,29,63,37,"headers"],[66,36,63,44],[66,37,63,45,"slice"],[66,42,63,37],[66,43,63,51,"position"],[66,51,63,37],[66,53,63,61,"position"],[66,61,63,69],[66,64,63,72],[66,65,63,37],[66,66,63,27],[67,0,61,28],[67,11,61,16],[68,0,65,16,"position"],[68,10,65,16,"position"],[68,18,65,24],[68,22,65,28],[68,23,65,16],[69,0,66,16],[71,0,67,12],[71,13,67,17],[71,14,67,12],[72,0,68,16],[72,14,68,20,"binaryLength"],[72,26,68,32],[72,29,68,35,"headers"],[72,36,68,42],[72,37,68,43,"readUInt16BE"],[72,49,68,35],[72,50,68,56,"position"],[72,58,68,35],[72,59,68,16],[73,0,69,16,"position"],[73,10,69,16,"position"],[73,18,69,24],[73,22,69,28],[73,23,69,16],[74,0,70,16,"out"],[74,10,70,16,"out"],[74,13,70,19],[74,14,70,20,"name"],[74,18,70,19],[74,19,70,16],[74,22,70,28],[75,0,71,20,"type"],[75,12,71,20,"type"],[75,16,71,24],[75,18,71,26,"BINARY_TAG"],[75,28,70,28],[76,0,72,20,"value"],[76,12,72,20,"value"],[76,17,72,25],[76,19,72,27,"headers"],[76,26,72,34],[76,27,72,35,"slice"],[76,32,72,27],[76,33,72,41,"position"],[76,41,72,27],[76,43,72,51,"position"],[76,51,72,59],[76,54,72,62,"binaryLength"],[76,66,72,27],[77,0,70,28],[77,11,70,16],[78,0,74,16,"position"],[78,10,74,16,"position"],[78,18,74,24],[78,22,74,28,"binaryLength"],[78,34,74,16],[79,0,75,16],[81,0,76,12],[81,13,76,17],[81,14,76,12],[82,0,77,16],[82,14,77,20,"stringLength"],[82,26,77,32],[82,29,77,35,"headers"],[82,36,77,42],[82,37,77,43,"readUInt16BE"],[82,49,77,35],[82,50,77,56,"position"],[82,58,77,35],[82,59,77,16],[83,0,78,16,"position"],[83,10,78,16,"position"],[83,18,78,24],[83,22,78,28],[83,23,78,16],[84,0,79,16,"out"],[84,10,79,16,"out"],[84,13,79,19],[84,14,79,20,"name"],[84,18,79,19],[84,19,79,16],[84,22,79,28],[85,0,80,20,"type"],[85,12,80,20,"type"],[85,16,80,24],[85,18,80,26,"STRING_TAG"],[85,28,79,28],[86,0,81,20,"value"],[86,12,81,20,"value"],[86,17,81,25],[86,19,81,27,"headers"],[86,26,81,34],[86,27,81,35,"slice"],[86,32,81,27],[86,33,82,24,"position"],[86,41,81,27],[86,43,83,24,"position"],[86,51,83,32],[86,54,83,35,"stringLength"],[86,66,81,27],[86,68,84,22,"toString"],[86,76,81,27],[87,0,79,28],[87,11,79,16],[88,0,86,16,"position"],[88,10,86,16,"position"],[88,18,86,24],[88,22,86,28,"stringLength"],[88,34,86,16],[89,0,87,16],[91,0,88,12],[91,13,88,17],[91,14,88,12],[92,0,89,16,"out"],[92,10,89,16,"out"],[92,13,89,19],[92,14,89,20,"name"],[92,18,89,19],[92,19,89,16],[92,22,89,28],[93,0,90,20,"type"],[93,12,90,20,"type"],[93,16,90,24],[93,18,90,26,"TIMESTAMP_TAG"],[93,31,89,28],[94,0,91,20,"value"],[94,12,91,20,"value"],[94,17,91,25],[94,19,91,27],[94,23,91,31,"Date"],[94,27,91,27],[94,28,92,24],[94,32,92,28,"Int64"],[94,37,92,24],[94,38,92,34,"headers"],[94,45,92,41],[94,46,92,42,"slice"],[94,51,92,34],[94,52,92,48,"position"],[94,60,92,34],[94,62,92,58,"position"],[94,70,92,66],[94,73,92,69],[94,74,92,34],[94,75,92,24],[94,77,93,29,"valueOf"],[94,84,92,24],[94,86,91,27],[95,0,89,28],[95,11,89,16],[96,0,96,16,"position"],[96,10,96,16,"position"],[96,18,96,24],[96,22,96,28],[96,23,96,16],[97,0,97,16],[99,0,98,12],[99,13,98,17],[99,14,98,12],[100,0,99,16],[100,14,99,20,"uuidChars"],[100,23,99,29],[100,26,99,32,"headers"],[100,33,99,39],[100,34,99,40,"slice"],[100,39,99,32],[100,40,99,46,"position"],[100,48,99,32],[100,50,99,56,"position"],[100,58,99,64],[100,61,99,67],[100,63,99,32],[100,65,100,21,"toString"],[100,73,99,32],[100,74,100,30],[100,79,99,32],[100,80,99,16],[101,0,101,16,"position"],[101,10,101,16,"position"],[101,18,101,24],[101,22,101,28],[101,24,101,16],[102,0,102,16,"out"],[102,10,102,16,"out"],[102,13,102,19],[102,14,102,20,"name"],[102,18,102,19],[102,19,102,16],[102,22,102,28],[103,0,103,20,"type"],[103,12,103,20,"type"],[103,16,103,24],[103,18,103,26,"UUID_TAG"],[103,26,102,28],[104,0,104,20,"value"],[104,12,104,20,"value"],[104,17,104,25],[104,19,104,27,"uuidChars"],[104,28,104,36],[104,29,104,37,"substr"],[104,35,104,27],[104,36,104,44],[104,37,104,27],[104,39,104,47],[104,40,104,27],[104,44,104,52],[104,47,104,27],[104,50,105,24,"uuidChars"],[104,59,105,33],[104,60,105,34,"substr"],[104,66,105,24],[104,67,105,41],[104,68,105,24],[104,70,105,44],[104,71,105,24],[104,72,104,27],[104,75,105,49],[104,78,104,27],[104,81,106,24,"uuidChars"],[104,90,106,33],[104,91,106,34,"substr"],[104,97,106,24],[104,98,106,41],[104,100,106,24],[104,102,106,45],[104,103,106,24],[104,104,104,27],[104,107,106,50],[104,110,104,27],[104,113,107,24,"uuidChars"],[104,122,107,33],[104,123,107,34,"substr"],[104,129,107,24],[104,130,107,41],[104,132,107,24],[104,134,107,45],[104,135,107,24],[104,136,104,27],[104,139,107,50],[104,142,104,27],[104,145,108,24,"uuidChars"],[104,154,108,33],[104,155,108,34,"substr"],[104,161,108,24],[104,162,108,41],[104,164,108,24],[105,0,102,28],[105,11,102,16],[106,0,110,16],[108,0,111,12],[109,0,112,16],[109,16,112,22],[109,20,112,26,"Error"],[109,25,112,22],[109,26,112,32],[109,56,112,22],[109,57,112,16],[110,0,27,8],[111,0,114,5],[113,0,115,4],[113,11,115,11,"out"],[113,14,115,4],[114,0,116,1],[116,0,118,0],[116,11,118,9,"parseMessage"],[116,23,118,0],[116,24,118,22,"message"],[116,31,118,0],[116,33,118,31],[117,0,119,4],[117,8,119,8,"parsed"],[117,14,119,14],[117,17,119,17,"splitMessage"],[117,29,119,29],[117,30,119,30,"message"],[117,37,119,29],[117,38,119,4],[118,0,120,4],[118,11,120,11],[119,0,120,13,"headers"],[119,6,120,13,"headers"],[119,13,120,20],[119,15,120,22,"parseHeaders"],[119,27,120,34],[119,28,120,35,"parsed"],[119,34,120,41],[119,35,120,42,"headers"],[119,42,120,34],[119,43,120,11],[120,0,120,52,"body"],[120,6,120,52,"body"],[120,10,120,56],[120,12,120,58,"parsed"],[120,18,120,64],[120,19,120,65,"body"],[121,0,120,11],[121,5,120,4],[122,0,121,1],[124,0,126,0,"module"],[124,2,126,0,"module"],[124,8,126,6],[124,9,126,7,"exports"],[124,16,126,0],[124,19,126,17],[125,0,127,4,"parseMessage"],[125,4,127,4,"parseMessage"],[125,16,127,16],[125,18,127,18,"parseMessage"],[126,0,126,17],[126,3,126,0]]},"type":"js/module"}]}